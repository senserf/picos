!_TAG_FILE_FORMAT	2	/supported features/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted/
!_TAG_PROGRAM_AUTHOR	Steve Kirkendall	/kirkenda@cs.pdx.edu/
!_TAG_PROGRAM_NAME	Elvis Ctags	//
!_TAG_PROGRAM_URL	ftp://ftp.cs.pdx.edu/pub/elvis/README.html	/official site/
!_TAG_PROGRAM_VERSION	2.2.0	//
ABS	stubs/glibstub.c	128;"	d
ACCESSPERMS	stubs/unixstub.c	5277;"	d
ACCT_COMM	stubs/unixstub.c	1648;"	d
ADJ_ESTERROR	stubs/unixstub.c	6105;"	d
ADJ_FREQUENCY	stubs/unixstub.c	6108;"	d
ADJ_MAXERROR	stubs/unixstub.c	6111;"	d
ADJ_OFFSET	stubs/unixstub.c	6115;"	d
ADJ_OFFSET_SINGLESHOT	stubs/unixstub.c	6118;"	d
ADJ_STATUS	stubs/unixstub.c	6121;"	d
ADJ_TICK	stubs/unixstub.c	6124;"	d
ADJ_TIMECONST	stubs/unixstub.c	6127;"	d
AHZ	stubs/unixstub.c	1651;"	d
ALLPERMS	stubs/unixstub.c	5280;"	d
ARCDENSITY	stubs/unixstub.c	3592;"	d
Atom	stubs/xlibstub.c	/^typedef CARD32 Atom;$/;"	t
BLKFLSBUF	stubs/unixstub.c	3959;"	d
BLKGETSIZE	stubs/unixstub.c	3962;"	d
BLKRAGET	stubs/unixstub.c	3965;"	d
BLKRASET	stubs/unixstub.c	3968;"	d
BLKROGET	stubs/unixstub.c	3971;"	d
BLKROSET	stubs/unixstub.c	3974;"	d
BLKRRPART	stubs/unixstub.c	3977;"	d
BLOCK_SIZE	stubs/unixstub.c	3980;"	d
BLOCK_SIZE_BITS	stubs/unixstub.c	3983;"	d
BitmapBitOrder	stubs/xlibstub.c	15;"	d
BitmapPad	stubs/xlibstub.c	18;"	d
BitmapUnit	stubs/xlibstub.c	21;"	d
BlackPixel	stubs/xlibstub.c	24;"	d
BlackPixelOfScreen	stubs/xlibstub.c	27;"	d
Bool	stubs/xlibstub.c	/^typedef int Bool;$/;"	t
CANBSIZ	stubs/unixstub.c	4468;"	d
CBRK	stubs/unixstub.c	6274;"	d
CDISCARD	stubs/unixstub.c	6277;"	d
CDSUSP	stubs/unixstub.c	6280;"	d
CEOF	stubs/unixstub.c	6283;"	d
CEOL	stubs/unixstub.c	6286;"	d
CEOL	stubs/unixstub.c	6289;"	d
CEOT	stubs/unixstub.c	6292;"	d
CERASE	stubs/unixstub.c	6295;"	d
CFLUSH	stubs/unixstub.c	6298;"	d
CINTR	stubs/unixstub.c	6301;"	d
CKILL	stubs/unixstub.c	6304;"	d
CLAMP	stubs/glibstub.c	131;"	d
CLNEXT	stubs/unixstub.c	6307;"	d
CMIN	stubs/unixstub.c	6310;"	d
CODE	stubs/unixstub.c	/^} CODE;$/;"	t
CODE	stubs/unixstub.c	/^} CODE;$/;"	t
CODE	stubs/unixstub.c	/^} CODE;$/;"	t
CODE	stubs/unixstub.c	/^} CODE;$/;"	t
CODE	stubs/unixstub.c	/^} CODE;$/;"	t
CQUIT	stubs/unixstub.c	6313;"	d
CREPRINT	stubs/unixstub.c	6316;"	d
CRPRNT	stubs/unixstub.c	6319;"	d
CS	stubs/unixstub.c	4998;"	d
CSTART	stubs/unixstub.c	6322;"	d
CSTATUS	stubs/unixstub.c	6325;"	d
CSTATUS	stubs/unixstub.c	6328;"	d
CSTOP	stubs/unixstub.c	6331;"	d
CSUSP	stubs/unixstub.c	6334;"	d
CTIME	stubs/unixstub.c	6337;"	d
CTRL	stubs/unixstub.c	6343;"	d
CWERASE	stubs/unixstub.c	6346;"	d
CapRound	stubs/xlibstub.c	312;"	struct:XGCValues
CellsOfScreen	stubs/xlibstub.c	30;"	d
ColorSymbol	stubs/xpmstub.c	365;"	d
Colormap	stubs/xlibstub.c	/^typedef XID Colormap;$/;"	t
ConnectionNumber	stubs/xlibstub.c	33;"	d
Cursor	stubs/xlibstub.c	/^typedef XID Cursor;$/;"	t
DEFFILEMODE	stubs/unixstub.c	5283;"	d
DEFTAPE	stubs/unixstub.c	4032;"	d
DEV_BSIZE	stubs/unixstub.c	4472;"	d
DN_ACCESS	stubs/unixstub.c	514;"	d
DN_ATTRIB	stubs/unixstub.c	529;"	d
DN_CREATE	stubs/unixstub.c	520;"	d
DN_DELETE	stubs/unixstub.c	523;"	d
DN_MODIFY	stubs/unixstub.c	517;"	d
DN_MULTISHOT	stubs/unixstub.c	532;"	d
DN_RENAME	stubs/unixstub.c	526;"	d
DRAIN	stubs/unixstub.c	2242;"	enum:snd_pcm_plugin_action_t
DR_CONTROL	stubs/unixstub.c	3468;"	d
DR_CONTROL_RESERVED	stubs/unixstub.c	3471;"	d
DR_CONTROL_SHIFT	stubs/unixstub.c	3474;"	d
DR_CONTROL_SIZE	stubs/unixstub.c	3477;"	d
DR_ENABLE_SIZE	stubs/unixstub.c	3480;"	d
DR_FIRSTADDR	stubs/unixstub.c	3485;"	d
DR_GLOBAL_ENABLE_MASK	stubs/unixstub.c	3488;"	d
DR_GLOBAL_ENABLE_SHIFT	stubs/unixstub.c	3491;"	d
DR_GLOBAL_SLOWDOWN	stubs/unixstub.c	3494;"	d
DR_LASTADDR	stubs/unixstub.c	3497;"	d
DR_LEN_1	stubs/unixstub.c	3500;"	d
DR_LEN_2	stubs/unixstub.c	3503;"	d
DR_LEN_4	stubs/unixstub.c	3506;"	d
DR_LOCAL_ENABLE_MASK	stubs/unixstub.c	3509;"	d
DR_LOCAL_ENABLE_SHIFT	stubs/unixstub.c	3512;"	d
DR_LOCAL_SLOWDOWN	stubs/unixstub.c	3515;"	d
DR_RW_EXECUTE	stubs/unixstub.c	3518;"	d
DR_RW_READ	stubs/unixstub.c	3521;"	d
DR_RW_WRITE	stubs/unixstub.c	3524;"	d
DR_STATUS	stubs/unixstub.c	3527;"	d
DR_STEP	stubs/unixstub.c	3530;"	d
DR_SWITCH	stubs/unixstub.c	3533;"	d
DR_TRAP0	stubs/unixstub.c	3536;"	d
DR_TRAP1	stubs/unixstub.c	3539;"	d
DR_TRAP2	stubs/unixstub.c	3542;"	d
DR_TRAP3	stubs/unixstub.c	3545;"	d
DS	stubs/unixstub.c	5001;"	d
DefaultColormap	stubs/xlibstub.c	36;"	d
DefaultColormapOfScreen	stubs/xlibstub.c	39;"	d
DefaultDepth	stubs/xlibstub.c	42;"	d
DefaultDepthOfScreen	stubs/xlibstub.c	45;"	d
DefaultGC	stubs/xlibstub.c	48;"	d
DefaultGCOfScreen	stubs/xlibstub.c	51;"	d
DefaultRootWindow	stubs/xlibstub.c	54;"	d
DefaultScreen	stubs/xlibstub.c	57;"	d
DefaultScreenOfDisplay	stubs/xlibstub.c	60;"	d
DefaultVisual	stubs/xlibstub.c	63;"	d
DefaultVisualOfScreen	stubs/xlibstub.c	66;"	d
Depth	stubs/xlibstub.c	/^} Depth;$/;"	t
Display	stubs/xlibstub.c	/^} Display;$/;"	t
DisplayCells	stubs/xlibstub.c	69;"	d
DisplayHeight	stubs/xlibstub.c	72;"	d
DisplayHeightMM	stubs/xlibstub.c	75;"	d
DisplayOfScreen	stubs/xlibstub.c	78;"	d
DisplayPlanes	stubs/xlibstub.c	81;"	d
DisplayString	stubs/xlibstub.c	84;"	d
DisplayWidth	stubs/xlibstub.c	87;"	d
DisplayWidthMM	stubs/xlibstub.c	90;"	d
DoesBackingStore	stubs/xlibstub.c	93;"	d
DoesSaveUnders	stubs/xlibstub.c	96;"	d
Drawable	stubs/xlibstub.c	/^typedef XID Drawable;$/;"	t
E2BIG	stubs/unixstub.c	32;"	d
EACCES	stubs/unixstub.c	53;"	d
EADDRINUSE	stubs/unixstub.c	305;"	d
EADDRNOTAVAIL	stubs/unixstub.c	308;"	d
EADV	stubs/unixstub.c	215;"	d
EAFNOSUPPORT	stubs/unixstub.c	302;"	d
EAGAIN	stubs/unixstub.c	44;"	d
EALREADY	stubs/unixstub.c	353;"	d
EAX	stubs/unixstub.c	5004;"	d
EBADE	stubs/unixstub.c	170;"	d
EBADF	stubs/unixstub.c	38;"	d
EBADFD	stubs/unixstub.c	242;"	d
EBADMSG	stubs/unixstub.c	233;"	d
EBADR	stubs/unixstub.c	173;"	d
EBADRQC	stubs/unixstub.c	182;"	d
EBADSLT	stubs/unixstub.c	185;"	d
EBFONT	stubs/unixstub.c	188;"	d
EBP	stubs/unixstub.c	5007;"	d
EBUSY	stubs/unixstub.c	62;"	d
EBX	stubs/unixstub.c	5010;"	d
ECHILD	stubs/unixstub.c	41;"	d
ECHRNG	stubs/unixstub.c	146;"	d
ECOMM	stubs/unixstub.c	221;"	d
ECONNABORTED	stubs/unixstub.c	320;"	d
ECONNREFUSED	stubs/unixstub.c	344;"	d
ECONNRESET	stubs/unixstub.c	323;"	d
ECX	stubs/unixstub.c	5013;"	d
EDEADLK	stubs/unixstub.c	119;"	d
EDEADLOCK	stubs/unixstub.c	122;"	d
EDESTADDRREQ	stubs/unixstub.c	278;"	d
EDI	stubs/unixstub.c	5016;"	d
EDOM	stubs/unixstub.c	113;"	d
EDOTDOT	stubs/unixstub.c	230;"	d
EDQUOT	stubs/unixstub.c	377;"	d
EDX	stubs/unixstub.c	5019;"	d
EEXIST	stubs/unixstub.c	65;"	d
EFAULT	stubs/unixstub.c	56;"	d
EFBIG	stubs/unixstub.c	95;"	d
EFL	stubs/unixstub.c	5022;"	d
EHOSTDOWN	stubs/unixstub.c	347;"	d
EHOSTUNREACH	stubs/unixstub.c	350;"	d
EIDRM	stubs/unixstub.c	143;"	d
EILSEQ	stubs/unixstub.c	263;"	d
EINPROGRESS	stubs/unixstub.c	356;"	d
EINTR	stubs/unixstub.c	23;"	d
EINVAL	stubs/unixstub.c	80;"	d
EIO	stubs/unixstub.c	26;"	d
EIP	stubs/unixstub.c	5025;"	d
EISCONN	stubs/unixstub.c	329;"	d
EISDIR	stubs/unixstub.c	77;"	d
EISNAM	stubs/unixstub.c	371;"	d
EL2HLT	stubs/unixstub.c	167;"	d
EL2NSYNC	stubs/unixstub.c	149;"	d
EL3HLT	stubs/unixstub.c	152;"	d
EL3RST	stubs/unixstub.c	155;"	d
ELF_NGREG	stubs/unixstub.c	4562;"	d
ELF_PRARGSZ	stubs/unixstub.c	4566;"	d
ELIBACC	stubs/unixstub.c	248;"	d
ELIBBAD	stubs/unixstub.c	251;"	d
ELIBEXEC	stubs/unixstub.c	260;"	d
ELIBMAX	stubs/unixstub.c	257;"	d
ELIBSCN	stubs/unixstub.c	254;"	d
ELNRNG	stubs/unixstub.c	158;"	d
ELOOP	stubs/unixstub.c	137;"	d
EMEDIUMTYPE	stubs/unixstub.c	383;"	d
EMFILE	stubs/unixstub.c	86;"	d
EMLINK	stubs/unixstub.c	107;"	d
EMSGSIZE	stubs/unixstub.c	281;"	d
EMULTIHOP	stubs/unixstub.c	227;"	d
ENAMETOOLONG	stubs/unixstub.c	125;"	d
ENAVAIL	stubs/unixstub.c	368;"	d
ENETDOWN	stubs/unixstub.c	311;"	d
ENETRESET	stubs/unixstub.c	317;"	d
ENETUNREACH	stubs/unixstub.c	314;"	d
ENFILE	stubs/unixstub.c	83;"	d
ENOANO	stubs/unixstub.c	179;"	d
ENOBUFS	stubs/unixstub.c	326;"	d
ENOCSI	stubs/unixstub.c	164;"	d
ENODATA	stubs/unixstub.c	194;"	d
ENODEV	stubs/unixstub.c	71;"	d
ENOENT	stubs/unixstub.c	17;"	d
ENOEXEC	stubs/unixstub.c	35;"	d
ENOLCK	stubs/unixstub.c	128;"	d
ENOLINK	stubs/unixstub.c	212;"	d
ENOMEDIUM	stubs/unixstub.c	380;"	d
ENOMEM	stubs/unixstub.c	50;"	d
ENOMSG	stubs/unixstub.c	140;"	d
ENONET	stubs/unixstub.c	203;"	d
ENOPKG	stubs/unixstub.c	206;"	d
ENOPROTOOPT	stubs/unixstub.c	287;"	d
ENOSPC	stubs/unixstub.c	98;"	d
ENOSR	stubs/unixstub.c	200;"	d
ENOSTR	stubs/unixstub.c	191;"	d
ENOSYS	stubs/unixstub.c	131;"	d
ENOTBLK	stubs/unixstub.c	59;"	d
ENOTCONN	stubs/unixstub.c	332;"	d
ENOTDIR	stubs/unixstub.c	74;"	d
ENOTEMPTY	stubs/unixstub.c	134;"	d
ENOTNAM	stubs/unixstub.c	365;"	d
ENOTSOCK	stubs/unixstub.c	275;"	d
ENOTTY	stubs/unixstub.c	89;"	d
ENOTUNIQ	stubs/unixstub.c	239;"	d
ENXIO	stubs/unixstub.c	29;"	d
EOPNOTSUPP	stubs/unixstub.c	296;"	d
EOVERFLOW	stubs/unixstub.c	236;"	d
EPERM	stubs/unixstub.c	14;"	d
EPFNOSUPPORT	stubs/unixstub.c	299;"	d
EPIPE	stubs/unixstub.c	110;"	d
EPROTO	stubs/unixstub.c	224;"	d
EPROTONOSUPPORT	stubs/unixstub.c	290;"	d
EPROTOTYPE	stubs/unixstub.c	284;"	d
ERANGE	stubs/unixstub.c	116;"	d
EREMCHG	stubs/unixstub.c	245;"	d
EREMOTE	stubs/unixstub.c	209;"	d
EREMOTEIO	stubs/unixstub.c	374;"	d
ERESTART	stubs/unixstub.c	266;"	d
EROFS	stubs/unixstub.c	104;"	d
ES	stubs/unixstub.c	5028;"	d
ESHUTDOWN	stubs/unixstub.c	335;"	d
ESI	stubs/unixstub.c	5031;"	d
ESOCKTNOSUPPORT	stubs/unixstub.c	293;"	d
ESPIPE	stubs/unixstub.c	101;"	d
ESRCH	stubs/unixstub.c	20;"	d
ESRMNT	stubs/unixstub.c	218;"	d
ESTALE	stubs/unixstub.c	359;"	d
ESTRPIPE	stubs/unixstub.c	269;"	d
ETIME	stubs/unixstub.c	197;"	d
ETIMEDOUT	stubs/unixstub.c	341;"	d
ETOOMANYREFS	stubs/unixstub.c	338;"	d
ETXTBSY	stubs/unixstub.c	92;"	d
EUCLEAN	stubs/unixstub.c	362;"	d
EUNATCH	stubs/unixstub.c	161;"	d
EUSERS	stubs/unixstub.c	272;"	d
EWOULDBLOCK	stubs/unixstub.c	47;"	d
EXDEV	stubs/unixstub.c	68;"	d
EXFULL	stubs/unixstub.c	176;"	d
EventMaskOfScreen	stubs/xlibstub.c	99;"	d
FALSE	stubs/glibstub.c	116;"	d
FD_CLOEXEC	stubs/unixstub.c	496;"	d
FD_CLR	stubs/unixstub.c	5087;"	d
FD_ISSET	stubs/unixstub.c	5090;"	d
FD_SET	stubs/unixstub.c	5094;"	d
FD_SETSIZE	stubs/unixstub.c	5098;"	d
FD_ZERO	stubs/unixstub.c	5101;"	d
FILE	stubs/ansistub.c	/^typedef struct _filestruct \*FILE;$/;"	t
FLUSH	stubs/unixstub.c	2242;"	enum:snd_pcm_plugin_action_t
FM	stubs/unixstub.c	/^			   MTEOM positions after the last FM, ready for$/;"	v
FM	stubs/unixstub.c	/^			   MTEOM positions after the last FM, ready for$/;"	v
FM	stubs/unixstub.c	/^			   MTEOM positions after the last FM, ready for$/;"	v
FS	stubs/unixstub.c	5034;"	d
F_DUPFD	stubs/unixstub.c	442;"	d
F_EXLCK	stubs/unixstub.c	508;"	d
F_GETFD	stubs/unixstub.c	445;"	d
F_GETFL	stubs/unixstub.c	451;"	d
F_GETLEASE	stubs/unixstub.c	490;"	d
F_GETLK	stubs/unixstub.c	457;"	d
F_GETLK64	stubs/unixstub.c	466;"	d
F_GETOWN	stubs/unixstub.c	478;"	d
F_GETSIG	stubs/unixstub.c	484;"	d
F_LOCK	stubs/unixstub.c	637;"	d
F_NOTIFY	stubs/unixstub.c	493;"	d
F_OK	stubs/unixstub.c	640;"	d
F_RDLCK	stubs/unixstub.c	499;"	d
F_SETFD	stubs/unixstub.c	448;"	d
F_SETFL	stubs/unixstub.c	454;"	d
F_SETLEASE	stubs/unixstub.c	487;"	d
F_SETLK	stubs/unixstub.c	460;"	d
F_SETLK64	stubs/unixstub.c	469;"	d
F_SETLKW	stubs/unixstub.c	463;"	d
F_SETLKW64	stubs/unixstub.c	472;"	d
F_SETOWN	stubs/unixstub.c	475;"	d
F_SETSIG	stubs/unixstub.c	481;"	d
F_SHLCK	stubs/unixstub.c	511;"	d
F_TEST	stubs/unixstub.c	643;"	d
F_TLOCK	stubs/unixstub.c	646;"	d
F_ULOCK	stubs/unixstub.c	649;"	d
F_UNLCK	stubs/unixstub.c	505;"	d
F_WRLCK	stubs/unixstub.c	502;"	d
FillStippled	stubs/xlibstub.c	312;"	struct:XGCValues
Font	stubs/xlibstub.c	/^typedef XID Font;$/;"	t
GArray	stubs/glibstub.c	/^} GArray;$/;"	t
GByteArray	stubs/glibstub.c	/^} GByteArray;$/;"	t
GC	stubs/xlibstub.c	/^} \*GC;$/;"	t
GCompletion	stubs/glibstub.c	/^} GCompletion;$/;"	t
GContext	stubs/xlibstub.c	/^typedef XID GContext;$/;"	t
GDK_0	stubs/gdkstub.c	2534;"	d
GDK_1	stubs/gdkstub.c	2537;"	d
GDK_2	stubs/gdkstub.c	2540;"	d
GDK_2BUTTON_PRESS	stubs/gdkstub.c	5830;"	enum:GdkEventType
GDK_3	stubs/gdkstub.c	2543;"	d
GDK_3270_AltCursor	stubs/gdkstub.c	2438;"	d
GDK_3270_Attn	stubs/gdkstub.c	2432;"	d
GDK_3270_BackTab	stubs/gdkstub.c	2405;"	d
GDK_3270_ChangeScreen	stubs/gdkstub.c	2465;"	d
GDK_3270_Copy	stubs/gdkstub.c	2453;"	d
GDK_3270_CursorBlink	stubs/gdkstub.c	2435;"	d
GDK_3270_CursorSelect	stubs/gdkstub.c	2474;"	d
GDK_3270_DeleteWord	stubs/gdkstub.c	2468;"	d
GDK_3270_Duplicate	stubs/gdkstub.c	2393;"	d
GDK_3270_Enter	stubs/gdkstub.c	2480;"	d
GDK_3270_EraseEOF	stubs/gdkstub.c	2408;"	d
GDK_3270_EraseInput	stubs/gdkstub.c	2411;"	d
GDK_3270_ExSelect	stubs/gdkstub.c	2471;"	d
GDK_3270_FieldMark	stubs/gdkstub.c	2396;"	d
GDK_3270_Ident	stubs/gdkstub.c	2447;"	d
GDK_3270_Jump	stubs/gdkstub.c	2444;"	d
GDK_3270_KeyClick	stubs/gdkstub.c	2441;"	d
GDK_3270_Left2	stubs/gdkstub.c	2402;"	d
GDK_3270_PA1	stubs/gdkstub.c	2420;"	d
GDK_3270_PA2	stubs/gdkstub.c	2423;"	d
GDK_3270_PA3	stubs/gdkstub.c	2426;"	d
GDK_3270_Play	stubs/gdkstub.c	2456;"	d
GDK_3270_PrintScreen	stubs/gdkstub.c	2477;"	d
GDK_3270_Quit	stubs/gdkstub.c	2417;"	d
GDK_3270_Record	stubs/gdkstub.c	2462;"	d
GDK_3270_Reset	stubs/gdkstub.c	2414;"	d
GDK_3270_Right2	stubs/gdkstub.c	2399;"	d
GDK_3270_Rule	stubs/gdkstub.c	2450;"	d
GDK_3270_Setup	stubs/gdkstub.c	2459;"	d
GDK_3270_Test	stubs/gdkstub.c	2429;"	d
GDK_3BUTTON_PRESS	stubs/gdkstub.c	5830;"	enum:GdkEventType
GDK_4	stubs/gdkstub.c	2546;"	d
GDK_5	stubs/gdkstub.c	2549;"	d
GDK_6	stubs/gdkstub.c	2552;"	d
GDK_7	stubs/gdkstub.c	2555;"	d
GDK_8	stubs/gdkstub.c	2558;"	d
GDK_9	stubs/gdkstub.c	2561;"	d
GDK_A	stubs/gdkstub.c	2585;"	d
GDK_ACTION_ASK	stubs/gdkstub.c	6081;"	enum:GdkDragAction
GDK_ACTION_COPY	stubs/gdkstub.c	6081;"	enum:GdkDragAction
GDK_ACTION_DEFAULT	stubs/gdkstub.c	6081;"	enum:GdkDragAction
GDK_ACTION_LINK	stubs/gdkstub.c	6081;"	enum:GdkDragAction
GDK_ACTION_MOVE	stubs/gdkstub.c	6081;"	enum:GdkDragAction
GDK_ACTION_PRIVATE	stubs/gdkstub.c	6081;"	enum:GdkDragAction
GDK_AE	stubs/gdkstub.c	2888;"	d
GDK_ALL_EVENTS_MASK	stubs/gdkstub.c	5856;"	enum:GdkEventMask
GDK_AND	stubs/gdkstub.c	5721;"	enum:GdkFunction
GDK_AND_INVERT	stubs/gdkstub.c	5721;"	enum:GdkFunction
GDK_AND_REVERSE	stubs/gdkstub.c	5721;"	enum:GdkFunction
GDK_ARROW	stubs/gdkstub.c	5779;"	enum:GdkCursorType
GDK_AXIS_IGNORE	stubs/gdkstub.c	5986;"	enum:GdkAxisUse
GDK_AXIS_LAST	stubs/gdkstub.c	5986;"	enum:GdkAxisUse
GDK_AXIS_LAST	stubs/gtkstub.c	5627;"	struct:GtkInputDialog
GDK_AXIS_PRESSURE	stubs/gdkstub.c	5986;"	enum:GdkAxisUse
GDK_AXIS_X	stubs/gdkstub.c	5986;"	enum:GdkAxisUse
GDK_AXIS_XTILT	stubs/gdkstub.c	5986;"	enum:GdkAxisUse
GDK_AXIS_Y	stubs/gdkstub.c	5986;"	enum:GdkAxisUse
GDK_AXIS_YTILT	stubs/gdkstub.c	5986;"	enum:GdkAxisUse
GDK_Aacute	stubs/gdkstub.c	2873;"	d
GDK_Abreve	stubs/gdkstub.c	3143;"	d
GDK_AccessX_Enable	stubs/gdkstub.c	2270;"	d
GDK_AccessX_Feedback_Enable	stubs/gdkstub.c	2273;"	d
GDK_Acircumflex	stubs/gdkstub.c	2876;"	d
GDK_Adiaeresis	stubs/gdkstub.c	2882;"	d
GDK_Agrave	stubs/gdkstub.c	2870;"	d
GDK_Alt_L	stubs/gdkstub.c	2075;"	d
GDK_Alt_R	stubs/gdkstub.c	2078;"	d
GDK_Amacron	stubs/gdkstub.c	3353;"	d
GDK_Aogonek	stubs/gdkstub.c	3068;"	d
GDK_Arabic_ain	stubs/gdkstub.c	3704;"	d
GDK_Arabic_alef	stubs/gdkstub.c	3650;"	d
GDK_Arabic_alefmaksura	stubs/gdkstub.c	3740;"	d
GDK_Arabic_beh	stubs/gdkstub.c	3653;"	d
GDK_Arabic_comma	stubs/gdkstub.c	3623;"	d
GDK_Arabic_dad	stubs/gdkstub.c	3695;"	d
GDK_Arabic_dal	stubs/gdkstub.c	3674;"	d
GDK_Arabic_damma	stubs/gdkstub.c	3758;"	d
GDK_Arabic_dammatan	stubs/gdkstub.c	3749;"	d
GDK_Arabic_fatha	stubs/gdkstub.c	3755;"	d
GDK_Arabic_fathatan	stubs/gdkstub.c	3746;"	d
GDK_Arabic_feh	stubs/gdkstub.c	3713;"	d
GDK_Arabic_ghain	stubs/gdkstub.c	3707;"	d
GDK_Arabic_ha	stubs/gdkstub.c	3731;"	d
GDK_Arabic_hah	stubs/gdkstub.c	3668;"	d
GDK_Arabic_hamza	stubs/gdkstub.c	3632;"	d
GDK_Arabic_hamzaonalef	stubs/gdkstub.c	3638;"	d
GDK_Arabic_hamzaonwaw	stubs/gdkstub.c	3641;"	d
GDK_Arabic_hamzaonyeh	stubs/gdkstub.c	3647;"	d
GDK_Arabic_hamzaunderalef	stubs/gdkstub.c	3644;"	d
GDK_Arabic_heh	stubs/gdkstub.c	3734;"	d
GDK_Arabic_jeem	stubs/gdkstub.c	3665;"	d
GDK_Arabic_kaf	stubs/gdkstub.c	3719;"	d
GDK_Arabic_kasra	stubs/gdkstub.c	3761;"	d
GDK_Arabic_kasratan	stubs/gdkstub.c	3752;"	d
GDK_Arabic_khah	stubs/gdkstub.c	3671;"	d
GDK_Arabic_lam	stubs/gdkstub.c	3722;"	d
GDK_Arabic_maddaonalef	stubs/gdkstub.c	3635;"	d
GDK_Arabic_meem	stubs/gdkstub.c	3725;"	d
GDK_Arabic_noon	stubs/gdkstub.c	3728;"	d
GDK_Arabic_qaf	stubs/gdkstub.c	3716;"	d
GDK_Arabic_question_mark	stubs/gdkstub.c	3629;"	d
GDK_Arabic_ra	stubs/gdkstub.c	3680;"	d
GDK_Arabic_sad	stubs/gdkstub.c	3692;"	d
GDK_Arabic_seen	stubs/gdkstub.c	3686;"	d
GDK_Arabic_semicolon	stubs/gdkstub.c	3626;"	d
GDK_Arabic_shadda	stubs/gdkstub.c	3764;"	d
GDK_Arabic_sheen	stubs/gdkstub.c	3689;"	d
GDK_Arabic_sukun	stubs/gdkstub.c	3767;"	d
GDK_Arabic_switch	stubs/gdkstub.c	3770;"	d
GDK_Arabic_tah	stubs/gdkstub.c	3698;"	d
GDK_Arabic_tatweel	stubs/gdkstub.c	3710;"	d
GDK_Arabic_teh	stubs/gdkstub.c	3659;"	d
GDK_Arabic_tehmarbuta	stubs/gdkstub.c	3656;"	d
GDK_Arabic_thal	stubs/gdkstub.c	3677;"	d
GDK_Arabic_theh	stubs/gdkstub.c	3662;"	d
GDK_Arabic_waw	stubs/gdkstub.c	3737;"	d
GDK_Arabic_yeh	stubs/gdkstub.c	3743;"	d
GDK_Arabic_zah	stubs/gdkstub.c	3701;"	d
GDK_Arabic_zain	stubs/gdkstub.c	3683;"	d
GDK_Aring	stubs/gdkstub.c	2885;"	d
GDK_Atilde	stubs/gdkstub.c	2879;"	d
GDK_AudibleBell_Enable	stubs/gdkstub.c	2300;"	d
GDK_B	stubs/gdkstub.c	2588;"	d
GDK_BASED_ARROW_DOWN	stubs/gdkstub.c	5779;"	enum:GdkCursorType
GDK_BASED_ARROW_UP	stubs/gdkstub.c	5779;"	enum:GdkCursorType
GDK_BOAT	stubs/gdkstub.c	5779;"	enum:GdkCursorType
GDK_BOGOSITY	stubs/gdkstub.c	5779;"	enum:GdkCursorType
GDK_BOTTOM_LEFT_CORNER	stubs/gdkstub.c	5779;"	enum:GdkCursorType
GDK_BOTTOM_RIGHT_CORNER	stubs/gdkstub.c	5779;"	enum:GdkCursorType
GDK_BOTTOM_SIDE	stubs/gdkstub.c	5779;"	enum:GdkCursorType
GDK_BOTTOM_TEE	stubs/gdkstub.c	5779;"	enum:GdkCursorType
GDK_BOX_SPIRAL	stubs/gdkstub.c	5779;"	enum:GdkCursorType
GDK_BUTTON1_MASK	stubs/gdkstub.c	5895;"	enum:GdkModifierType
GDK_BUTTON1_MOTION_MASK	stubs/gdkstub.c	5856;"	enum:GdkEventMask
GDK_BUTTON2_MASK	stubs/gdkstub.c	5895;"	enum:GdkModifierType
GDK_BUTTON2_MOTION_MASK	stubs/gdkstub.c	5856;"	enum:GdkEventMask
GDK_BUTTON3_MASK	stubs/gdkstub.c	5895;"	enum:GdkModifierType
GDK_BUTTON3_MOTION_MASK	stubs/gdkstub.c	5856;"	enum:GdkEventMask
GDK_BUTTON4_MASK	stubs/gdkstub.c	5895;"	enum:GdkModifierType
GDK_BUTTON5_MASK	stubs/gdkstub.c	5895;"	enum:GdkModifierType
GDK_BUTTON_MOTION_MASK	stubs/gdkstub.c	5856;"	enum:GdkEventMask
GDK_BUTTON_PRESS	stubs/gdkstub.c	5830;"	enum:GdkEventType
GDK_BUTTON_PRESS_MASK	stubs/gdkstub.c	5856;"	enum:GdkEventMask
GDK_BUTTON_RELEASE	stubs/gdkstub.c	5830;"	enum:GdkEventType
GDK_BUTTON_RELEASE_MASK	stubs/gdkstub.c	5856;"	enum:GdkEventMask
GDK_BackSpace	stubs/gdkstub.c	1586;"	d
GDK_Begin	stubs/gdkstub.c	1715;"	d
GDK_BounceKeys_Enable	stubs/gdkstub.c	2282;"	d
GDK_Break	stubs/gdkstub.c	1748;"	d
GDK_Byelorussian_SHORTU	stubs/gdkstub.c	3893;"	d
GDK_Byelorussian_shortu	stubs/gdkstub.c	3827;"	d
GDK_C	stubs/gdkstub.c	2591;"	d
GDK_CAP_BUTT	stubs/gdkstub.c	5745;"	enum:GdkCapStyle
GDK_CAP_NOT_LAST	stubs/gdkstub.c	5745;"	enum:GdkCapStyle
GDK_CAP_PROJECTING	stubs/gdkstub.c	5745;"	enum:GdkCapStyle
GDK_CAP_ROUND	stubs/gdkstub.c	5745;"	enum:GdkCapStyle
GDK_CC_MODE_BW	stubs/gdkstub.c	6068;"	enum:GdkColorContextMode
GDK_CC_MODE_MY_GRAY	stubs/gdkstub.c	6068;"	enum:GdkColorContextMode
GDK_CC_MODE_PALETTE	stubs/gdkstub.c	6068;"	enum:GdkColorContextMode
GDK_CC_MODE_STD_CMAP	stubs/gdkstub.c	6068;"	enum:GdkColorContextMode
GDK_CC_MODE_TRUE	stubs/gdkstub.c	6068;"	enum:GdkColorContextMode
GDK_CC_MODE_UNDEFINED	stubs/gdkstub.c	6068;"	enum:GdkColorContextMode
GDK_CENTER_PTR	stubs/gdkstub.c	5779;"	enum:GdkCursorType
GDK_CIRCLE	stubs/gdkstub.c	5779;"	enum:GdkCursorType
GDK_CLEAR	stubs/gdkstub.c	5721;"	enum:GdkFunction
GDK_CLIENT_EVENT	stubs/gdkstub.c	5830;"	enum:GdkEventType
GDK_CLIP_BY_CHILDREN	stubs/gdkstub.c	5901;"	enum:GdkSubwindowMode
GDK_CLOCK	stubs/gdkstub.c	5779;"	enum:GdkCursorType
GDK_COFFEE_MUG	stubs/gdkstub.c	5779;"	enum:GdkCursorType
GDK_COLORMAP_XCOLORMAP	stubs/gdkstub.c	6606;"	d
GDK_COLORMAP_XDISPLAY	stubs/gdkstub.c	6603;"	d
GDK_CONFIGURE	stubs/gdkstub.c	5830;"	enum:GdkEventType
GDK_CONTROL_MASK	stubs/gdkstub.c	5895;"	enum:GdkModifierType
GDK_COPY	stubs/gdkstub.c	5721;"	enum:GdkFunction
GDK_COPY_INVERT	stubs/gdkstub.c	5721;"	enum:GdkFunction
GDK_CORE_POINTER	stubs/gdkstub.c	5642;"	d
GDK_CROSS	stubs/gdkstub.c	5779;"	enum:GdkCursorType
GDK_CROSSHAIR	stubs/gdkstub.c	5779;"	enum:GdkCursorType
GDK_CROSSING_GRAB	stubs/gdkstub.c	5875;"	enum:GdkCrossingMode
GDK_CROSSING_NORMAL	stubs/gdkstub.c	5875;"	enum:GdkCrossingMode
GDK_CROSSING_UNGRAB	stubs/gdkstub.c	5875;"	enum:GdkCrossingMode
GDK_CROSS_REVERSE	stubs/gdkstub.c	5779;"	enum:GdkCursorType
GDK_CURRENT_TIME	stubs/gdkstub.c	5636;"	d
GDK_CURSOR_IS_PIXMAP	stubs/gdkstub.c	5779;"	enum:GdkCursorType
GDK_Cabovedot	stubs/gdkstub.c	3269;"	d
GDK_Cacute	stubs/gdkstub.c	3149;"	d
GDK_Cancel	stubs/gdkstub.c	1742;"	d
GDK_Caps_Lock	stubs/gdkstub.c	2063;"	d
GDK_Ccaron	stubs/gdkstub.c	3152;"	d
GDK_Ccedilla	stubs/gdkstub.c	2891;"	d
GDK_Ccircumflex	stubs/gdkstub.c	3272;"	d
GDK_Clear	stubs/gdkstub.c	1595;"	d
GDK_Control_L	stubs/gdkstub.c	2057;"	d
GDK_Control_R	stubs/gdkstub.c	2060;"	d
GDK_Cyrillic_A	stubs/gdkstub.c	4001;"	d
GDK_Cyrillic_BE	stubs/gdkstub.c	4004;"	d
GDK_Cyrillic_CHE	stubs/gdkstub.c	4088;"	d
GDK_Cyrillic_DE	stubs/gdkstub.c	4010;"	d
GDK_Cyrillic_DZHE	stubs/gdkstub.c	3896;"	d
GDK_Cyrillic_E	stubs/gdkstub.c	4082;"	d
GDK_Cyrillic_EF	stubs/gdkstub.c	4016;"	d
GDK_Cyrillic_EL	stubs/gdkstub.c	4034;"	d
GDK_Cyrillic_EM	stubs/gdkstub.c	4037;"	d
GDK_Cyrillic_EN	stubs/gdkstub.c	4040;"	d
GDK_Cyrillic_ER	stubs/gdkstub.c	4052;"	d
GDK_Cyrillic_ES	stubs/gdkstub.c	4055;"	d
GDK_Cyrillic_GHE	stubs/gdkstub.c	4019;"	d
GDK_Cyrillic_HA	stubs/gdkstub.c	4022;"	d
GDK_Cyrillic_HARDSIGN	stubs/gdkstub.c	4091;"	d
GDK_Cyrillic_I	stubs/gdkstub.c	4025;"	d
GDK_Cyrillic_IE	stubs/gdkstub.c	4013;"	d
GDK_Cyrillic_IO	stubs/gdkstub.c	3845;"	d
GDK_Cyrillic_JE	stubs/gdkstub.c	3869;"	d
GDK_Cyrillic_KA	stubs/gdkstub.c	4031;"	d
GDK_Cyrillic_LJE	stubs/gdkstub.c	3875;"	d
GDK_Cyrillic_NJE	stubs/gdkstub.c	3881;"	d
GDK_Cyrillic_O	stubs/gdkstub.c	4043;"	d
GDK_Cyrillic_PE	stubs/gdkstub.c	4046;"	d
GDK_Cyrillic_SHA	stubs/gdkstub.c	4079;"	d
GDK_Cyrillic_SHCHA	stubs/gdkstub.c	4085;"	d
GDK_Cyrillic_SHORTI	stubs/gdkstub.c	4028;"	d
GDK_Cyrillic_SOFTSIGN	stubs/gdkstub.c	4070;"	d
GDK_Cyrillic_TE	stubs/gdkstub.c	4058;"	d
GDK_Cyrillic_TSE	stubs/gdkstub.c	4007;"	d
GDK_Cyrillic_U	stubs/gdkstub.c	4061;"	d
GDK_Cyrillic_VE	stubs/gdkstub.c	4067;"	d
GDK_Cyrillic_YA	stubs/gdkstub.c	4049;"	d
GDK_Cyrillic_YERU	stubs/gdkstub.c	4073;"	d
GDK_Cyrillic_YU	stubs/gdkstub.c	3998;"	d
GDK_Cyrillic_ZE	stubs/gdkstub.c	4076;"	d
GDK_Cyrillic_ZHE	stubs/gdkstub.c	4064;"	d
GDK_Cyrillic_a	stubs/gdkstub.c	3905;"	d
GDK_Cyrillic_be	stubs/gdkstub.c	3908;"	d
GDK_Cyrillic_che	stubs/gdkstub.c	3992;"	d
GDK_Cyrillic_de	stubs/gdkstub.c	3914;"	d
GDK_Cyrillic_dzhe	stubs/gdkstub.c	3830;"	d
GDK_Cyrillic_e	stubs/gdkstub.c	3986;"	d
GDK_Cyrillic_ef	stubs/gdkstub.c	3920;"	d
GDK_Cyrillic_el	stubs/gdkstub.c	3938;"	d
GDK_Cyrillic_em	stubs/gdkstub.c	3941;"	d
GDK_Cyrillic_en	stubs/gdkstub.c	3944;"	d
GDK_Cyrillic_er	stubs/gdkstub.c	3956;"	d
GDK_Cyrillic_es	stubs/gdkstub.c	3959;"	d
GDK_Cyrillic_ghe	stubs/gdkstub.c	3923;"	d
GDK_Cyrillic_ha	stubs/gdkstub.c	3926;"	d
GDK_Cyrillic_hardsign	stubs/gdkstub.c	3995;"	d
GDK_Cyrillic_i	stubs/gdkstub.c	3929;"	d
GDK_Cyrillic_ie	stubs/gdkstub.c	3917;"	d
GDK_Cyrillic_io	stubs/gdkstub.c	3779;"	d
GDK_Cyrillic_je	stubs/gdkstub.c	3803;"	d
GDK_Cyrillic_ka	stubs/gdkstub.c	3935;"	d
GDK_Cyrillic_lje	stubs/gdkstub.c	3809;"	d
GDK_Cyrillic_nje	stubs/gdkstub.c	3815;"	d
GDK_Cyrillic_o	stubs/gdkstub.c	3947;"	d
GDK_Cyrillic_pe	stubs/gdkstub.c	3950;"	d
GDK_Cyrillic_sha	stubs/gdkstub.c	3983;"	d
GDK_Cyrillic_shcha	stubs/gdkstub.c	3989;"	d
GDK_Cyrillic_shorti	stubs/gdkstub.c	3932;"	d
GDK_Cyrillic_softsign	stubs/gdkstub.c	3974;"	d
GDK_Cyrillic_te	stubs/gdkstub.c	3962;"	d
GDK_Cyrillic_tse	stubs/gdkstub.c	3911;"	d
GDK_Cyrillic_u	stubs/gdkstub.c	3965;"	d
GDK_Cyrillic_ve	stubs/gdkstub.c	3971;"	d
GDK_Cyrillic_ya	stubs/gdkstub.c	3953;"	d
GDK_Cyrillic_yeru	stubs/gdkstub.c	3977;"	d
GDK_Cyrillic_yu	stubs/gdkstub.c	3902;"	d
GDK_Cyrillic_ze	stubs/gdkstub.c	3980;"	d
GDK_Cyrillic_zhe	stubs/gdkstub.c	3968;"	d
GDK_D	stubs/gdkstub.c	2594;"	d
GDK_DECOR_ALL	stubs/gdkstub.c	6048;"	enum:GdkWMDecoration
GDK_DECOR_BORDER	stubs/gdkstub.c	6048;"	enum:GdkWMDecoration
GDK_DECOR_MAXIMIZE	stubs/gdkstub.c	6048;"	enum:GdkWMDecoration
GDK_DECOR_MENU	stubs/gdkstub.c	6048;"	enum:GdkWMDecoration
GDK_DECOR_MINIMIZE	stubs/gdkstub.c	6048;"	enum:GdkWMDecoration
GDK_DECOR_RESIZEH	stubs/gdkstub.c	6048;"	enum:GdkWMDecoration
GDK_DECOR_TITLE	stubs/gdkstub.c	6048;"	enum:GdkWMDecoration
GDK_DELETE	stubs/gdkstub.c	5830;"	enum:GdkEventType
GDK_DESTROY	stubs/gdkstub.c	5830;"	enum:GdkEventType
GDK_DIAMOND_CROSS	stubs/gdkstub.c	5779;"	enum:GdkCursorType
GDK_DISPLAY	stubs/gdkstub.c	6582;"	d
GDK_DOT	stubs/gdkstub.c	5779;"	enum:GdkCursorType
GDK_DOTBOX	stubs/gdkstub.c	5779;"	enum:GdkCursorType
GDK_DOUBLE_ARROW	stubs/gdkstub.c	5779;"	enum:GdkCursorType
GDK_DRAFT_LARGE	stubs/gdkstub.c	5779;"	enum:GdkCursorType
GDK_DRAFT_SMALL	stubs/gdkstub.c	5779;"	enum:GdkCursorType
GDK_DRAG_ENTER	stubs/gdkstub.c	5830;"	enum:GdkEventType
GDK_DRAG_LEAVE	stubs/gdkstub.c	5830;"	enum:GdkEventType
GDK_DRAG_MOTION	stubs/gdkstub.c	5830;"	enum:GdkEventType
GDK_DRAG_PROTO_MOTIF	stubs/gdkstub.c	6087;"	enum:GdkDragProtocol
GDK_DRAG_PROTO_NONE	stubs/gdkstub.c	6087;"	enum:GdkDragProtocol
GDK_DRAG_PROTO_ROOTWIN	stubs/gdkstub.c	6087;"	enum:GdkDragProtocol
GDK_DRAG_PROTO_XDND	stubs/gdkstub.c	6087;"	enum:GdkDragProtocol
GDK_DRAG_STATUS	stubs/gdkstub.c	5830;"	enum:GdkEventType
GDK_DRAPED_BOX	stubs/gdkstub.c	5779;"	enum:GdkCursorType
GDK_DROP_FINISHED	stubs/gdkstub.c	5830;"	enum:GdkEventType
GDK_DROP_START	stubs/gdkstub.c	5830;"	enum:GdkEventType
GDK_Dcaron	stubs/gdkstub.c	3161;"	d
GDK_Delete	stubs/gdkstub.c	1613;"	d
GDK_Down	stubs/gdkstub.c	1697;"	d
GDK_Dstroke	stubs/gdkstub.c	3164;"	d
GDK_E	stubs/gdkstub.c	2597;"	d
GDK_ENG	stubs/gdkstub.c	3347;"	d
GDK_ENTER_NOTIFY	stubs/gdkstub.c	5830;"	enum:GdkEventType
GDK_ENTER_NOTIFY_MASK	stubs/gdkstub.c	5856;"	enum:GdkEventMask
GDK_EQUIV	stubs/gdkstub.c	5721;"	enum:GdkFunction
GDK_ERROR	stubs/gdkstub.c	5919;"	enum:GdkStatus
GDK_ERROR_FILE	stubs/gdkstub.c	5919;"	enum:GdkStatus
GDK_ERROR_MEM	stubs/gdkstub.c	5919;"	enum:GdkStatus
GDK_ERROR_PARAM	stubs/gdkstub.c	5919;"	enum:GdkStatus
GDK_ETH	stubs/gdkstub.c	2918;"	d
GDK_EVEN_ODD_RULE	stubs/gdkstub.c	5733;"	enum:GdkFillRule
GDK_EXCHANGE	stubs/gdkstub.c	5779;"	enum:GdkCursorType
GDK_EXPOSE	stubs/gdkstub.c	5830;"	enum:GdkEventType
GDK_EXPOSURE_MASK	stubs/gdkstub.c	5856;"	enum:GdkEventMask
GDK_EXTENSION_EVENTS_ALL	stubs/gdkstub.c	6017;"	enum:GdkExtensionMode
GDK_EXTENSION_EVENTS_CURSOR	stubs/gdkstub.c	6017;"	enum:GdkExtensionMode
GDK_EXTENSION_EVENTS_NONE	stubs/gdkstub.c	6017;"	enum:GdkExtensionMode
GDK_Eabovedot	stubs/gdkstub.c	3359;"	d
GDK_Eacute	stubs/gdkstub.c	2897;"	d
GDK_Ecaron	stubs/gdkstub.c	3158;"	d
GDK_Ecircumflex	stubs/gdkstub.c	2900;"	d
GDK_Ediaeresis	stubs/gdkstub.c	2903;"	d
GDK_Egrave	stubs/gdkstub.c	2894;"	d
GDK_Eisu_Shift	stubs/gdkstub.c	1673;"	d
GDK_Eisu_toggle	stubs/gdkstub.c	1676;"	d
GDK_Emacron	stubs/gdkstub.c	3320;"	d
GDK_End	stubs/gdkstub.c	1712;"	d
GDK_Eogonek	stubs/gdkstub.c	3155;"	d
GDK_Escape	stubs/gdkstub.c	1610;"	d
GDK_Eth	stubs/gdkstub.c	2921;"	d
GDK_Execute	stubs/gdkstub.c	1724;"	d
GDK_F	stubs/gdkstub.c	2600;"	d
GDK_F1	stubs/gdkstub.c	1871;"	d
GDK_F10	stubs/gdkstub.c	1898;"	d
GDK_F11	stubs/gdkstub.c	1901;"	d
GDK_F12	stubs/gdkstub.c	1907;"	d
GDK_F13	stubs/gdkstub.c	1913;"	d
GDK_F14	stubs/gdkstub.c	1919;"	d
GDK_F15	stubs/gdkstub.c	1925;"	d
GDK_F16	stubs/gdkstub.c	1931;"	d
GDK_F17	stubs/gdkstub.c	1937;"	d
GDK_F18	stubs/gdkstub.c	1943;"	d
GDK_F19	stubs/gdkstub.c	1949;"	d
GDK_F2	stubs/gdkstub.c	1874;"	d
GDK_F20	stubs/gdkstub.c	1955;"	d
GDK_F21	stubs/gdkstub.c	1961;"	d
GDK_F22	stubs/gdkstub.c	1967;"	d
GDK_F23	stubs/gdkstub.c	1973;"	d
GDK_F24	stubs/gdkstub.c	1979;"	d
GDK_F25	stubs/gdkstub.c	1985;"	d
GDK_F26	stubs/gdkstub.c	1991;"	d
GDK_F27	stubs/gdkstub.c	1997;"	d
GDK_F28	stubs/gdkstub.c	2003;"	d
GDK_F29	stubs/gdkstub.c	2009;"	d
GDK_F3	stubs/gdkstub.c	1877;"	d
GDK_F30	stubs/gdkstub.c	2015;"	d
GDK_F31	stubs/gdkstub.c	2021;"	d
GDK_F32	stubs/gdkstub.c	2027;"	d
GDK_F33	stubs/gdkstub.c	2033;"	d
GDK_F34	stubs/gdkstub.c	2039;"	d
GDK_F35	stubs/gdkstub.c	2045;"	d
GDK_F4	stubs/gdkstub.c	1880;"	d
GDK_F5	stubs/gdkstub.c	1883;"	d
GDK_F6	stubs/gdkstub.c	1886;"	d
GDK_F7	stubs/gdkstub.c	1889;"	d
GDK_F8	stubs/gdkstub.c	1892;"	d
GDK_F9	stubs/gdkstub.c	1895;"	d
GDK_FILTER_CONTINUE	stubs/gdkstub.c	5786;"	enum:GdkFilterReturn
GDK_FILTER_REMOVE	stubs/gdkstub.c	5786;"	enum:GdkFilterReturn
GDK_FILTER_TRANSLATE	stubs/gdkstub.c	5786;"	enum:GdkFilterReturn
GDK_FLEUR	stubs/gdkstub.c	5779;"	enum:GdkCursorType
GDK_FOCUS_CHANGE	stubs/gdkstub.c	5830;"	enum:GdkEventType
GDK_FOCUS_CHANGE_MASK	stubs/gdkstub.c	5856;"	enum:GdkEventMask
GDK_FONT_FONT	stubs/gdkstub.c	5689;"	enum:GdkFontType
GDK_FONT_FONTSET	stubs/gdkstub.c	5689;"	enum:GdkFontType
GDK_FONT_XDISPLAY	stubs/gdkstub.c	6612;"	d
GDK_FONT_XFONT	stubs/gdkstub.c	6615;"	d
GDK_FUNC_ALL	stubs/gdkstub.c	6055;"	enum:GdkWMFunction
GDK_FUNC_CLOS	stubs/gdkstub.c	6055;"	enum:GdkWMFunction
GDK_FUNC_MAXIMIZE	stubs/gdkstub.c	6055;"	enum:GdkWMFunction
GDK_FUNC_MINIMIZE	stubs/gdkstub.c	6055;"	enum:GdkWMFunction
GDK_FUNC_MOVE	stubs/gdkstub.c	6055;"	enum:GdkWMFunction
GDK_FUNC_RESIZE	stubs/gdkstub.c	6055;"	enum:GdkWMFunction
GDK_Find	stubs/gdkstub.c	1739;"	d
GDK_First_Virtual_Screen	stubs/gdkstub.c	2255;"	d
GDK_G	stubs/gdkstub.c	2603;"	d
GDK_GC_BACKGROUND	stubs/gdkstub.c	5948;"	enum:GdkGCValuesMask
GDK_GC_CAP_STYLE	stubs/gdkstub.c	5948;"	enum:GdkGCValuesMask
GDK_GC_CLIP_MASK	stubs/gdkstub.c	5948;"	enum:GdkGCValuesMask
GDK_GC_CLIP_X_ORIGIN	stubs/gdkstub.c	5948;"	enum:GdkGCValuesMask
GDK_GC_CLIP_Y_ORIGIN	stubs/gdkstub.c	5948;"	enum:GdkGCValuesMask
GDK_GC_EXPOSURES	stubs/gdkstub.c	5948;"	enum:GdkGCValuesMask
GDK_GC_FILL	stubs/gdkstub.c	5948;"	enum:GdkGCValuesMask
GDK_GC_FONT	stubs/gdkstub.c	5948;"	enum:GdkGCValuesMask
GDK_GC_FOREGROUND	stubs/gdkstub.c	5948;"	enum:GdkGCValuesMask
GDK_GC_FUNCTION	stubs/gdkstub.c	5948;"	enum:GdkGCValuesMask
GDK_GC_JOIN_STYLE	stubs/gdkstub.c	5948;"	enum:GdkGCValuesMask
GDK_GC_LINE_STYLE	stubs/gdkstub.c	5948;"	enum:GdkGCValuesMask
GDK_GC_LINE_WIDTH	stubs/gdkstub.c	5948;"	enum:GdkGCValuesMask
GDK_GC_STIPPLE	stubs/gdkstub.c	5948;"	enum:GdkGCValuesMask
GDK_GC_SUBWINDOW	stubs/gdkstub.c	5948;"	enum:GdkGCValuesMask
GDK_GC_TILE	stubs/gdkstub.c	5948;"	enum:GdkGCValuesMask
GDK_GC_TS_X_ORIGIN	stubs/gdkstub.c	5948;"	enum:GdkGCValuesMask
GDK_GC_TS_Y_ORIGIN	stubs/gdkstub.c	5948;"	enum:GdkGCValuesMask
GDK_GC_XDISPLAY	stubs/gdkstub.c	6597;"	d
GDK_GC_XGC	stubs/gdkstub.c	6600;"	d
GDK_GOBBLER	stubs/gdkstub.c	5779;"	enum:GdkCursorType
GDK_GUMBY	stubs/gdkstub.c	5779;"	enum:GdkCursorType
GDK_Gabovedot	stubs/gdkstub.c	3275;"	d
GDK_Gbreve	stubs/gdkstub.c	3248;"	d
GDK_Gcedilla	stubs/gdkstub.c	3323;"	d
GDK_Gcircumflex	stubs/gdkstub.c	3278;"	d
GDK_Greek_ALPHA	stubs/gdkstub.c	4160;"	d
GDK_Greek_ALPHAaccent	stubs/gdkstub.c	4094;"	d
GDK_Greek_BETA	stubs/gdkstub.c	4163;"	d
GDK_Greek_CHI	stubs/gdkstub.c	4226;"	d
GDK_Greek_DELTA	stubs/gdkstub.c	4169;"	d
GDK_Greek_EPSILON	stubs/gdkstub.c	4172;"	d
GDK_Greek_EPSILONaccent	stubs/gdkstub.c	4097;"	d
GDK_Greek_ETA	stubs/gdkstub.c	4178;"	d
GDK_Greek_ETAaccent	stubs/gdkstub.c	4100;"	d
GDK_Greek_GAMMA	stubs/gdkstub.c	4166;"	d
GDK_Greek_IOTA	stubs/gdkstub.c	4184;"	d
GDK_Greek_IOTAaccent	stubs/gdkstub.c	4103;"	d
GDK_Greek_IOTAdiaeresis	stubs/gdkstub.c	4106;"	d
GDK_Greek_KAPPA	stubs/gdkstub.c	4187;"	d
GDK_Greek_LAMBDA	stubs/gdkstub.c	4193;"	d
GDK_Greek_LAMDA	stubs/gdkstub.c	4190;"	d
GDK_Greek_MU	stubs/gdkstub.c	4196;"	d
GDK_Greek_NU	stubs/gdkstub.c	4199;"	d
GDK_Greek_OMEGA	stubs/gdkstub.c	4232;"	d
GDK_Greek_OMEGAaccent	stubs/gdkstub.c	4118;"	d
GDK_Greek_OMICRON	stubs/gdkstub.c	4205;"	d
GDK_Greek_OMICRONaccent	stubs/gdkstub.c	4109;"	d
GDK_Greek_PHI	stubs/gdkstub.c	4223;"	d
GDK_Greek_PI	stubs/gdkstub.c	4208;"	d
GDK_Greek_PSI	stubs/gdkstub.c	4229;"	d
GDK_Greek_RHO	stubs/gdkstub.c	4211;"	d
GDK_Greek_SIGMA	stubs/gdkstub.c	4214;"	d
GDK_Greek_TAU	stubs/gdkstub.c	4217;"	d
GDK_Greek_THETA	stubs/gdkstub.c	4181;"	d
GDK_Greek_UPSILON	stubs/gdkstub.c	4220;"	d
GDK_Greek_UPSILONaccent	stubs/gdkstub.c	4112;"	d
GDK_Greek_UPSILONdieresis	stubs/gdkstub.c	4115;"	d
GDK_Greek_XI	stubs/gdkstub.c	4202;"	d
GDK_Greek_ZETA	stubs/gdkstub.c	4175;"	d
GDK_Greek_accentdieresis	stubs/gdkstub.c	4121;"	d
GDK_Greek_alpha	stubs/gdkstub.c	4235;"	d
GDK_Greek_alphaaccent	stubs/gdkstub.c	4127;"	d
GDK_Greek_beta	stubs/gdkstub.c	4238;"	d
GDK_Greek_chi	stubs/gdkstub.c	4304;"	d
GDK_Greek_delta	stubs/gdkstub.c	4244;"	d
GDK_Greek_epsilon	stubs/gdkstub.c	4247;"	d
GDK_Greek_epsilonaccent	stubs/gdkstub.c	4130;"	d
GDK_Greek_eta	stubs/gdkstub.c	4253;"	d
GDK_Greek_etaaccent	stubs/gdkstub.c	4133;"	d
GDK_Greek_finalsmallsigma	stubs/gdkstub.c	4292;"	d
GDK_Greek_gamma	stubs/gdkstub.c	4241;"	d
GDK_Greek_horizbar	stubs/gdkstub.c	4124;"	d
GDK_Greek_iota	stubs/gdkstub.c	4259;"	d
GDK_Greek_iotaaccent	stubs/gdkstub.c	4136;"	d
GDK_Greek_iotaaccentdieresis	stubs/gdkstub.c	4142;"	d
GDK_Greek_iotadieresis	stubs/gdkstub.c	4139;"	d
GDK_Greek_kappa	stubs/gdkstub.c	4262;"	d
GDK_Greek_lambda	stubs/gdkstub.c	4268;"	d
GDK_Greek_lamda	stubs/gdkstub.c	4265;"	d
GDK_Greek_mu	stubs/gdkstub.c	4271;"	d
GDK_Greek_nu	stubs/gdkstub.c	4274;"	d
GDK_Greek_omega	stubs/gdkstub.c	4310;"	d
GDK_Greek_omegaaccent	stubs/gdkstub.c	4157;"	d
GDK_Greek_omicron	stubs/gdkstub.c	4280;"	d
GDK_Greek_omicronaccent	stubs/gdkstub.c	4145;"	d
GDK_Greek_phi	stubs/gdkstub.c	4301;"	d
GDK_Greek_pi	stubs/gdkstub.c	4283;"	d
GDK_Greek_psi	stubs/gdkstub.c	4307;"	d
GDK_Greek_rho	stubs/gdkstub.c	4286;"	d
GDK_Greek_sigma	stubs/gdkstub.c	4289;"	d
GDK_Greek_switch	stubs/gdkstub.c	4313;"	d
GDK_Greek_tau	stubs/gdkstub.c	4295;"	d
GDK_Greek_theta	stubs/gdkstub.c	4256;"	d
GDK_Greek_upsilon	stubs/gdkstub.c	4298;"	d
GDK_Greek_upsilonaccent	stubs/gdkstub.c	4148;"	d
GDK_Greek_upsilonaccentdieresis	stubs/gdkstub.c	4154;"	d
GDK_Greek_upsilondieresis	stubs/gdkstub.c	4151;"	d
GDK_Greek_xi	stubs/gdkstub.c	4277;"	d
GDK_Greek_zeta	stubs/gdkstub.c	4250;"	d
GDK_H	stubs/gdkstub.c	2606;"	d
GDK_HAND1	stubs/gdkstub.c	5779;"	enum:GdkCursorType
GDK_HAND2	stubs/gdkstub.c	5779;"	enum:GdkCursorType
GDK_HEART	stubs/gdkstub.c	5779;"	enum:GdkCursorType
GDK_HINT_ASPECT	stubs/gdkstub.c	5713;"	enum:GdkWindowHints
GDK_HINT_BASE_SIZE	stubs/gdkstub.c	5713;"	enum:GdkWindowHints
GDK_HINT_MAX_SIZE	stubs/gdkstub.c	5713;"	enum:GdkWindowHints
GDK_HINT_MIN_SIZE	stubs/gdkstub.c	5713;"	enum:GdkWindowHints
GDK_HINT_POS	stubs/gdkstub.c	5713;"	enum:GdkWindowHints
GDK_HINT_RESIZE_INC	stubs/gdkstub.c	5713;"	enum:GdkWindowHints
GDK_Hangul	stubs/gdkstub.c	5213;"	d
GDK_Hangul_A	stubs/gdkstub.c	5351;"	d
GDK_Hangul_AE	stubs/gdkstub.c	5354;"	d
GDK_Hangul_AraeA	stubs/gdkstub.c	5516;"	d
GDK_Hangul_AraeAE	stubs/gdkstub.c	5519;"	d
GDK_Hangul_Banja	stubs/gdkstub.c	5237;"	d
GDK_Hangul_Cieuc	stubs/gdkstub.c	5336;"	d
GDK_Hangul_Codeinput	stubs/gdkstub.c	5231;"	d
GDK_Hangul_Dikeud	stubs/gdkstub.c	5279;"	d
GDK_Hangul_E	stubs/gdkstub.c	5366;"	d
GDK_Hangul_EO	stubs/gdkstub.c	5363;"	d
GDK_Hangul_EU	stubs/gdkstub.c	5405;"	d
GDK_Hangul_End	stubs/gdkstub.c	5219;"	d
GDK_Hangul_Hanja	stubs/gdkstub.c	5222;"	d
GDK_Hangul_Hieuh	stubs/gdkstub.c	5348;"	d
GDK_Hangul_I	stubs/gdkstub.c	5411;"	d
GDK_Hangul_Ieung	stubs/gdkstub.c	5327;"	d
GDK_Hangul_J_Cieuc	stubs/gdkstub.c	5480;"	d
GDK_Hangul_J_Dikeud	stubs/gdkstub.c	5432;"	d
GDK_Hangul_J_Hieuh	stubs/gdkstub.c	5492;"	d
GDK_Hangul_J_Ieung	stubs/gdkstub.c	5474;"	d
GDK_Hangul_J_Jieuj	stubs/gdkstub.c	5477;"	d
GDK_Hangul_J_Khieuq	stubs/gdkstub.c	5483;"	d
GDK_Hangul_J_Kiyeog	stubs/gdkstub.c	5414;"	d
GDK_Hangul_J_KiyeogSios	stubs/gdkstub.c	5420;"	d
GDK_Hangul_J_KkogjiDalrinIeung	stubs/gdkstub.c	5525;"	d
GDK_Hangul_J_Mieum	stubs/gdkstub.c	5459;"	d
GDK_Hangul_J_Nieun	stubs/gdkstub.c	5423;"	d
GDK_Hangul_J_NieunHieuh	stubs/gdkstub.c	5429;"	d
GDK_Hangul_J_NieunJieuj	stubs/gdkstub.c	5426;"	d
GDK_Hangul_J_PanSios	stubs/gdkstub.c	5522;"	d
GDK_Hangul_J_Phieuf	stubs/gdkstub.c	5489;"	d
GDK_Hangul_J_Pieub	stubs/gdkstub.c	5462;"	d
GDK_Hangul_J_PieubSios	stubs/gdkstub.c	5465;"	d
GDK_Hangul_J_Rieul	stubs/gdkstub.c	5435;"	d
GDK_Hangul_J_RieulHieuh	stubs/gdkstub.c	5456;"	d
GDK_Hangul_J_RieulKiyeog	stubs/gdkstub.c	5438;"	d
GDK_Hangul_J_RieulMieum	stubs/gdkstub.c	5441;"	d
GDK_Hangul_J_RieulPhieuf	stubs/gdkstub.c	5453;"	d
GDK_Hangul_J_RieulPieub	stubs/gdkstub.c	5444;"	d
GDK_Hangul_J_RieulSios	stubs/gdkstub.c	5447;"	d
GDK_Hangul_J_RieulTieut	stubs/gdkstub.c	5450;"	d
GDK_Hangul_J_Sios	stubs/gdkstub.c	5468;"	d
GDK_Hangul_J_SsangKiyeog	stubs/gdkstub.c	5417;"	d
GDK_Hangul_J_SsangSios	stubs/gdkstub.c	5471;"	d
GDK_Hangul_J_Tieut	stubs/gdkstub.c	5486;"	d
GDK_Hangul_J_YeorinHieuh	stubs/gdkstub.c	5528;"	d
GDK_Hangul_Jamo	stubs/gdkstub.c	5225;"	d
GDK_Hangul_Jeonja	stubs/gdkstub.c	5234;"	d
GDK_Hangul_Jieuj	stubs/gdkstub.c	5330;"	d
GDK_Hangul_Khieuq	stubs/gdkstub.c	5339;"	d
GDK_Hangul_Kiyeog	stubs/gdkstub.c	5261;"	d
GDK_Hangul_KiyeogSios	stubs/gdkstub.c	5267;"	d
GDK_Hangul_KkogjiDalrinIeung	stubs/gdkstub.c	5507;"	d
GDK_Hangul_Mieum	stubs/gdkstub.c	5309;"	d
GDK_Hangul_MultipleCandidate	stubs/gdkstub.c	5249;"	d
GDK_Hangul_Nieun	stubs/gdkstub.c	5270;"	d
GDK_Hangul_NieunHieuh	stubs/gdkstub.c	5276;"	d
GDK_Hangul_NieunJieuj	stubs/gdkstub.c	5273;"	d
GDK_Hangul_O	stubs/gdkstub.c	5375;"	d
GDK_Hangul_OE	stubs/gdkstub.c	5384;"	d
GDK_Hangul_PanSios	stubs/gdkstub.c	5504;"	d
GDK_Hangul_Phieuf	stubs/gdkstub.c	5345;"	d
GDK_Hangul_Pieub	stubs/gdkstub.c	5312;"	d
GDK_Hangul_PieubSios	stubs/gdkstub.c	5318;"	d
GDK_Hangul_PostHanja	stubs/gdkstub.c	5243;"	d
GDK_Hangul_PreHanja	stubs/gdkstub.c	5240;"	d
GDK_Hangul_PreviousCandidate	stubs/gdkstub.c	5252;"	d
GDK_Hangul_Rieul	stubs/gdkstub.c	5285;"	d
GDK_Hangul_RieulHieuh	stubs/gdkstub.c	5306;"	d
GDK_Hangul_RieulKiyeog	stubs/gdkstub.c	5288;"	d
GDK_Hangul_RieulMieum	stubs/gdkstub.c	5291;"	d
GDK_Hangul_RieulPhieuf	stubs/gdkstub.c	5303;"	d
GDK_Hangul_RieulPieub	stubs/gdkstub.c	5294;"	d
GDK_Hangul_RieulSios	stubs/gdkstub.c	5297;"	d
GDK_Hangul_RieulTieut	stubs/gdkstub.c	5300;"	d
GDK_Hangul_RieulYeorinHieuh	stubs/gdkstub.c	5495;"	d
GDK_Hangul_Romaja	stubs/gdkstub.c	5228;"	d
GDK_Hangul_SingleCandidate	stubs/gdkstub.c	5246;"	d
GDK_Hangul_Sios	stubs/gdkstub.c	5321;"	d
GDK_Hangul_Special	stubs/gdkstub.c	5255;"	d
GDK_Hangul_SsangDikeud	stubs/gdkstub.c	5282;"	d
GDK_Hangul_SsangJieuj	stubs/gdkstub.c	5333;"	d
GDK_Hangul_SsangKiyeog	stubs/gdkstub.c	5264;"	d
GDK_Hangul_SsangPieub	stubs/gdkstub.c	5315;"	d
GDK_Hangul_SsangSios	stubs/gdkstub.c	5324;"	d
GDK_Hangul_Start	stubs/gdkstub.c	5216;"	d
GDK_Hangul_SunkyeongeumMieum	stubs/gdkstub.c	5498;"	d
GDK_Hangul_SunkyeongeumPhieuf	stubs/gdkstub.c	5510;"	d
GDK_Hangul_SunkyeongeumPieub	stubs/gdkstub.c	5501;"	d
GDK_Hangul_Tieut	stubs/gdkstub.c	5342;"	d
GDK_Hangul_U	stubs/gdkstub.c	5390;"	d
GDK_Hangul_WA	stubs/gdkstub.c	5378;"	d
GDK_Hangul_WAE	stubs/gdkstub.c	5381;"	d
GDK_Hangul_WE	stubs/gdkstub.c	5396;"	d
GDK_Hangul_WEO	stubs/gdkstub.c	5393;"	d
GDK_Hangul_WI	stubs/gdkstub.c	5399;"	d
GDK_Hangul_YA	stubs/gdkstub.c	5357;"	d
GDK_Hangul_YAE	stubs/gdkstub.c	5360;"	d
GDK_Hangul_YE	stubs/gdkstub.c	5372;"	d
GDK_Hangul_YEO	stubs/gdkstub.c	5369;"	d
GDK_Hangul_YI	stubs/gdkstub.c	5408;"	d
GDK_Hangul_YO	stubs/gdkstub.c	5387;"	d
GDK_Hangul_YU	stubs/gdkstub.c	5402;"	d
GDK_Hangul_YeorinHieuh	stubs/gdkstub.c	5513;"	d
GDK_Hangul_switch	stubs/gdkstub.c	5258;"	d
GDK_Hankaku	stubs/gdkstub.c	1655;"	d
GDK_Hcircumflex	stubs/gdkstub.c	3242;"	d
GDK_Hebrew_switch	stubs/gdkstub.c	4958;"	d
GDK_Help	stubs/gdkstub.c	1745;"	d
GDK_Henkan	stubs/gdkstub.c	1637;"	d
GDK_Henkan_Mode	stubs/gdkstub.c	1634;"	d
GDK_Hiragana	stubs/gdkstub.c	1643;"	d
GDK_Hiragana_Katakana	stubs/gdkstub.c	1649;"	d
GDK_Home	stubs/gdkstub.c	1685;"	d
GDK_Hstroke	stubs/gdkstub.c	3239;"	d
GDK_Hyper_L	stubs/gdkstub.c	2087;"	d
GDK_Hyper_R	stubs/gdkstub.c	2090;"	d
GDK_I	stubs/gdkstub.c	2609;"	d
GDK_ICON	stubs/gdkstub.c	5779;"	enum:GdkCursorType
GDK_IC_ALL_REQ	stubs/gdkstub.c	6041;"	enum:GdkICAttributesType
GDK_IC_CLIENT_WINDOW	stubs/gdkstub.c	6041;"	enum:GdkICAttributesType
GDK_IC_CURSOR	stubs/gdkstub.c	6041;"	enum:GdkICAttributesType
GDK_IC_FILTER_EVENTS	stubs/gdkstub.c	6041;"	enum:GdkICAttributesType
GDK_IC_FOCUS_WINDOW	stubs/gdkstub.c	6041;"	enum:GdkICAttributesType
GDK_IC_LINE_SPACING	stubs/gdkstub.c	6041;"	enum:GdkICAttributesType
GDK_IC_PREEDIT_AREA	stubs/gdkstub.c	6041;"	enum:GdkICAttributesType
GDK_IC_PREEDIT_AREA_NEEDED	stubs/gdkstub.c	6041;"	enum:GdkICAttributesType
GDK_IC_PREEDIT_AREA_REQ	stubs/gdkstub.c	6041;"	enum:GdkICAttributesType
GDK_IC_PREEDIT_BACKGROUND	stubs/gdkstub.c	6041;"	enum:GdkICAttributesType
GDK_IC_PREEDIT_COLORMAP	stubs/gdkstub.c	6041;"	enum:GdkICAttributesType
GDK_IC_PREEDIT_FONTSET	stubs/gdkstub.c	6041;"	enum:GdkICAttributesType
GDK_IC_PREEDIT_FOREGROUND	stubs/gdkstub.c	6041;"	enum:GdkICAttributesType
GDK_IC_PREEDIT_PIXMAP	stubs/gdkstub.c	6041;"	enum:GdkICAttributesType
GDK_IC_PREEDIT_POSITION_REQ	stubs/gdkstub.c	6041;"	enum:GdkICAttributesType
GDK_IC_SPOT_LOCATION	stubs/gdkstub.c	6041;"	enum:GdkICAttributesType
GDK_IC_STATUS_AREA	stubs/gdkstub.c	6041;"	enum:GdkICAttributesType
GDK_IC_STATUS_AREA_NEEDED	stubs/gdkstub.c	6041;"	enum:GdkICAttributesType
GDK_IC_STATUS_AREA_REQ	stubs/gdkstub.c	6041;"	enum:GdkICAttributesType
GDK_IC_STATUS_BACKGROUND	stubs/gdkstub.c	6041;"	enum:GdkICAttributesType
GDK_IC_STATUS_COLORMAP	stubs/gdkstub.c	6041;"	enum:GdkICAttributesType
GDK_IC_STATUS_FONTSET	stubs/gdkstub.c	6041;"	enum:GdkICAttributesType
GDK_IC_STATUS_FOREGROUND	stubs/gdkstub.c	6041;"	enum:GdkICAttributesType
GDK_IC_STATUS_PIXMAP	stubs/gdkstub.c	6041;"	enum:GdkICAttributesType
GDK_IC_STYLE	stubs/gdkstub.c	6041;"	enum:GdkICAttributesType
GDK_IMAGE_FASTEST	stubs/gdkstub.c	5675;"	enum:GdkImageType
GDK_IMAGE_NORMAL	stubs/gdkstub.c	5675;"	enum:GdkImageType
GDK_IMAGE_SHARED	stubs/gdkstub.c	5675;"	enum:GdkImageType
GDK_IMAGE_XDISPLAY	stubs/gdkstub.c	6591;"	d
GDK_IMAGE_XIMAGE	stubs/gdkstub.c	6594;"	d
GDK_IM_PREEDIT_AREA	stubs/gdkstub.c	6026;"	enum:GdkIMStyle
GDK_IM_PREEDIT_CALLBACKS	stubs/gdkstub.c	6026;"	enum:GdkIMStyle
GDK_IM_PREEDIT_MASK	stubs/gdkstub.c	6026;"	enum:GdkIMStyle
GDK_IM_PREEDIT_NONE	stubs/gdkstub.c	6026;"	enum:GdkIMStyle
GDK_IM_PREEDIT_NOTHING	stubs/gdkstub.c	6026;"	enum:GdkIMStyle
GDK_IM_PREEDIT_POSITION	stubs/gdkstub.c	6026;"	enum:GdkIMStyle
GDK_IM_STATUS_AREA	stubs/gdkstub.c	6026;"	enum:GdkIMStyle
GDK_IM_STATUS_CALLBACKS	stubs/gdkstub.c	6026;"	enum:GdkIMStyle
GDK_IM_STATUS_MASK	stubs/gdkstub.c	6026;"	enum:GdkIMStyle
GDK_IM_STATUS_NONE	stubs/gdkstub.c	6026;"	enum:GdkIMStyle
GDK_IM_STATUS_NOTHING	stubs/gdkstub.c	6026;"	enum:GdkIMStyle
GDK_INCLUDE_INFERIORS	stubs/gdkstub.c	5901;"	enum:GdkSubwindowMode
GDK_INPUT_EXCEPTION	stubs/gdkstub.c	5909;"	enum:GdkInputCondition
GDK_INPUT_ONLY	stubs/gdkstub.c	5669;"	enum:GdkWindowClass
GDK_INPUT_OUTPUT	stubs/gdkstub.c	5669;"	enum:GdkWindowClass
GDK_INPUT_READ	stubs/gdkstub.c	5909;"	enum:GdkInputCondition
GDK_INPUT_WRITE	stubs/gdkstub.c	5909;"	enum:GdkInputCondition
GDK_INVERT	stubs/gdkstub.c	5721;"	enum:GdkFunction
GDK_IRON_CROSS	stubs/gdkstub.c	5779;"	enum:GdkCursorType
GDK_ISO_Center_Object	stubs/gdkstub.c	2198;"	d
GDK_ISO_Continuous_Underline	stubs/gdkstub.c	2189;"	d
GDK_ISO_Discontinuous_Underline	stubs/gdkstub.c	2192;"	d
GDK_ISO_Emphasize	stubs/gdkstub.c	2195;"	d
GDK_ISO_Enter	stubs/gdkstub.c	2201;"	d
GDK_ISO_Fast_Cursor_Down	stubs/gdkstub.c	2186;"	d
GDK_ISO_Fast_Cursor_Left	stubs/gdkstub.c	2177;"	d
GDK_ISO_Fast_Cursor_Right	stubs/gdkstub.c	2180;"	d
GDK_ISO_Fast_Cursor_Up	stubs/gdkstub.c	2183;"	d
GDK_ISO_First_Group	stubs/gdkstub.c	2129;"	d
GDK_ISO_First_Group_Lock	stubs/gdkstub.c	2132;"	d
GDK_ISO_Group_Latch	stubs/gdkstub.c	2111;"	d
GDK_ISO_Group_Lock	stubs/gdkstub.c	2114;"	d
GDK_ISO_Group_Shift	stubs/gdkstub.c	2108;"	d
GDK_ISO_Last_Group	stubs/gdkstub.c	2135;"	d
GDK_ISO_Last_Group_Lock	stubs/gdkstub.c	2138;"	d
GDK_ISO_Left_Tab	stubs/gdkstub.c	2141;"	d
GDK_ISO_Level2_Latch	stubs/gdkstub.c	2096;"	d
GDK_ISO_Level3_Latch	stubs/gdkstub.c	2102;"	d
GDK_ISO_Level3_Lock	stubs/gdkstub.c	2105;"	d
GDK_ISO_Level3_Shift	stubs/gdkstub.c	2099;"	d
GDK_ISO_Lock	stubs/gdkstub.c	2093;"	d
GDK_ISO_Move_Line_Down	stubs/gdkstub.c	2147;"	d
GDK_ISO_Move_Line_Up	stubs/gdkstub.c	2144;"	d
GDK_ISO_Next_Group	stubs/gdkstub.c	2117;"	d
GDK_ISO_Next_Group_Lock	stubs/gdkstub.c	2120;"	d
GDK_ISO_Partial_Line_Down	stubs/gdkstub.c	2153;"	d
GDK_ISO_Partial_Line_Up	stubs/gdkstub.c	2150;"	d
GDK_ISO_Partial_Space_Left	stubs/gdkstub.c	2156;"	d
GDK_ISO_Partial_Space_Right	stubs/gdkstub.c	2159;"	d
GDK_ISO_Prev_Group	stubs/gdkstub.c	2123;"	d
GDK_ISO_Prev_Group_Lock	stubs/gdkstub.c	2126;"	d
GDK_ISO_Release_Both_Margins	stubs/gdkstub.c	2174;"	d
GDK_ISO_Release_Margin_Left	stubs/gdkstub.c	2168;"	d
GDK_ISO_Release_Margin_Right	stubs/gdkstub.c	2171;"	d
GDK_ISO_Set_Margin_Left	stubs/gdkstub.c	2162;"	d
GDK_ISO_Set_Margin_Right	stubs/gdkstub.c	2165;"	d
GDK_Iabovedot	stubs/gdkstub.c	3245;"	d
GDK_Iacute	stubs/gdkstub.c	2909;"	d
GDK_Icircumflex	stubs/gdkstub.c	2912;"	d
GDK_Idiaeresis	stubs/gdkstub.c	2915;"	d
GDK_Igrave	stubs/gdkstub.c	2906;"	d
GDK_Imacron	stubs/gdkstub.c	3362;"	d
GDK_Insert	stubs/gdkstub.c	1727;"	d
GDK_Iogonek	stubs/gdkstub.c	3356;"	d
GDK_Itilde	stubs/gdkstub.c	3314;"	d
GDK_J	stubs/gdkstub.c	2612;"	d
GDK_JOIN_BEVEL	stubs/gdkstub.c	5751;"	enum:GdkJoinStyle
GDK_JOIN_MITER	stubs/gdkstub.c	5751;"	enum:GdkJoinStyle
GDK_JOIN_ROUND	stubs/gdkstub.c	5751;"	enum:GdkJoinStyle
GDK_Jcircumflex	stubs/gdkstub.c	3251;"	d
GDK_K	stubs/gdkstub.c	2615;"	d
GDK_KEY_PRESS	stubs/gdkstub.c	5830;"	enum:GdkEventType
GDK_KEY_PRESS_MASK	stubs/gdkstub.c	5856;"	enum:GdkEventMask
GDK_KEY_RELEASE	stubs/gdkstub.c	5830;"	enum:GdkEventType
GDK_KEY_RELEASE_MASK	stubs/gdkstub.c	5856;"	enum:GdkEventMask
GDK_KP_0	stubs/gdkstub.c	1841;"	d
GDK_KP_1	stubs/gdkstub.c	1844;"	d
GDK_KP_2	stubs/gdkstub.c	1847;"	d
GDK_KP_3	stubs/gdkstub.c	1850;"	d
GDK_KP_4	stubs/gdkstub.c	1853;"	d
GDK_KP_5	stubs/gdkstub.c	1856;"	d
GDK_KP_6	stubs/gdkstub.c	1859;"	d
GDK_KP_7	stubs/gdkstub.c	1862;"	d
GDK_KP_8	stubs/gdkstub.c	1865;"	d
GDK_KP_9	stubs/gdkstub.c	1868;"	d
GDK_KP_Add	stubs/gdkstub.c	1826;"	d
GDK_KP_Begin	stubs/gdkstub.c	1811;"	d
GDK_KP_Decimal	stubs/gdkstub.c	1835;"	d
GDK_KP_Delete	stubs/gdkstub.c	1817;"	d
GDK_KP_Divide	stubs/gdkstub.c	1838;"	d
GDK_KP_Down	stubs/gdkstub.c	1793;"	d
GDK_KP_End	stubs/gdkstub.c	1808;"	d
GDK_KP_Enter	stubs/gdkstub.c	1766;"	d
GDK_KP_Equal	stubs/gdkstub.c	1820;"	d
GDK_KP_F1	stubs/gdkstub.c	1769;"	d
GDK_KP_F2	stubs/gdkstub.c	1772;"	d
GDK_KP_F3	stubs/gdkstub.c	1775;"	d
GDK_KP_F4	stubs/gdkstub.c	1778;"	d
GDK_KP_Home	stubs/gdkstub.c	1781;"	d
GDK_KP_Insert	stubs/gdkstub.c	1814;"	d
GDK_KP_Left	stubs/gdkstub.c	1784;"	d
GDK_KP_Multiply	stubs/gdkstub.c	1823;"	d
GDK_KP_Next	stubs/gdkstub.c	1802;"	d
GDK_KP_Page_Down	stubs/gdkstub.c	1805;"	d
GDK_KP_Page_Up	stubs/gdkstub.c	1799;"	d
GDK_KP_Prior	stubs/gdkstub.c	1796;"	d
GDK_KP_Right	stubs/gdkstub.c	1790;"	d
GDK_KP_Separator	stubs/gdkstub.c	1829;"	d
GDK_KP_Space	stubs/gdkstub.c	1760;"	d
GDK_KP_Subtract	stubs/gdkstub.c	1832;"	d
GDK_KP_Tab	stubs/gdkstub.c	1763;"	d
GDK_KP_Up	stubs/gdkstub.c	1787;"	d
GDK_Kana_Lock	stubs/gdkstub.c	1667;"	d
GDK_Kana_Shift	stubs/gdkstub.c	1670;"	d
GDK_Kanji	stubs/gdkstub.c	1628;"	d
GDK_Katakana	stubs/gdkstub.c	1646;"	d
GDK_Kcedilla	stubs/gdkstub.c	3371;"	d
GDK_Korean_Won	stubs/gdkstub.c	5531;"	d
GDK_L	stubs/gdkstub.c	2618;"	d
GDK_L1	stubs/gdkstub.c	1904;"	d
GDK_L10	stubs/gdkstub.c	1958;"	d
GDK_L2	stubs/gdkstub.c	1910;"	d
GDK_L3	stubs/gdkstub.c	1916;"	d
GDK_L4	stubs/gdkstub.c	1922;"	d
GDK_L5	stubs/gdkstub.c	1928;"	d
GDK_L6	stubs/gdkstub.c	1934;"	d
GDK_L7	stubs/gdkstub.c	1940;"	d
GDK_L8	stubs/gdkstub.c	1946;"	d
GDK_L9	stubs/gdkstub.c	1952;"	d
GDK_LAST_CURSOR	stubs/gdkstub.c	5779;"	enum:GdkCursorType
GDK_LEAVE_NOTIFY	stubs/gdkstub.c	5830;"	enum:GdkEventType
GDK_LEAVE_NOTIFY_MASK	stubs/gdkstub.c	5856;"	enum:GdkEventMask
GDK_LEFTBUTTON	stubs/gdkstub.c	5779;"	enum:GdkCursorType
GDK_LEFT_PTR	stubs/gdkstub.c	5779;"	enum:GdkCursorType
GDK_LEFT_SIDE	stubs/gdkstub.c	5779;"	enum:GdkCursorType
GDK_LEFT_TEE	stubs/gdkstub.c	5779;"	enum:GdkCursorType
GDK_LINE_DOUBLE_DASH	stubs/gdkstub.c	5739;"	enum:GdkLineStyle
GDK_LINE_ON_OFF_DASH	stubs/gdkstub.c	5739;"	enum:GdkLineStyle
GDK_LINE_SOLID	stubs/gdkstub.c	5739;"	enum:GdkLineStyle
GDK_LL_ANGLE	stubs/gdkstub.c	5779;"	enum:GdkCursorType
GDK_LOCK_MASK	stubs/gdkstub.c	5895;"	enum:GdkModifierType
GDK_LR_ANGLE	stubs/gdkstub.c	5779;"	enum:GdkCursorType
GDK_LSB_FIRST	stubs/gdkstub.c	5925;"	enum:GdkByteOrder
GDK_Lacute	stubs/gdkstub.c	3146;"	d
GDK_Last_Virtual_Screen	stubs/gdkstub.c	2264;"	d
GDK_Lcaron	stubs/gdkstub.c	3077;"	d
GDK_Lcedilla	stubs/gdkstub.c	3317;"	d
GDK_Left	stubs/gdkstub.c	1688;"	d
GDK_Linefeed	stubs/gdkstub.c	1592;"	d
GDK_Lstroke	stubs/gdkstub.c	3074;"	d
GDK_M	stubs/gdkstub.c	2621;"	d
GDK_MAN	stubs/gdkstub.c	5779;"	enum:GdkCursorType
GDK_MAP	stubs/gdkstub.c	5830;"	enum:GdkEventType
GDK_MIDDLEBUTTON	stubs/gdkstub.c	5779;"	enum:GdkCursorType
GDK_MOD1_MASK	stubs/gdkstub.c	5895;"	enum:GdkModifierType
GDK_MOD2_MASK	stubs/gdkstub.c	5895;"	enum:GdkModifierType
GDK_MOD3_MASK	stubs/gdkstub.c	5895;"	enum:GdkModifierType
GDK_MOD4_MASK	stubs/gdkstub.c	5895;"	enum:GdkModifierType
GDK_MOD5_MASK	stubs/gdkstub.c	5895;"	enum:GdkModifierType
GDK_MODE_DISABLED	stubs/gdkstub.c	5979;"	enum:GdkInputMode
GDK_MODE_SCREEN	stubs/gdkstub.c	5979;"	enum:GdkInputMode
GDK_MODE_WINDOW	stubs/gdkstub.c	5979;"	enum:GdkInputMode
GDK_MODIFIER_MASK	stubs/gdkstub.c	5895;"	enum:GdkModifierType
GDK_MOTION_NOTIFY	stubs/gdkstub.c	5830;"	enum:GdkEventType
GDK_MOUSE	stubs/gdkstub.c	5779;"	enum:GdkCursorType
GDK_MSB_FIRST	stubs/gdkstub.c	5925;"	enum:GdkByteOrder
GDK_Macedonia_DSE	stubs/gdkstub.c	3854;"	d
GDK_Macedonia_GJE	stubs/gdkstub.c	3842;"	d
GDK_Macedonia_KJE	stubs/gdkstub.c	3890;"	d
GDK_Macedonia_dse	stubs/gdkstub.c	3788;"	d
GDK_Macedonia_gje	stubs/gdkstub.c	3776;"	d
GDK_Macedonia_kje	stubs/gdkstub.c	3824;"	d
GDK_Mae_Koho	stubs/gdkstub.c	1682;"	d
GDK_Massyo	stubs/gdkstub.c	1664;"	d
GDK_Menu	stubs/gdkstub.c	1736;"	d
GDK_Meta_L	stubs/gdkstub.c	2069;"	d
GDK_Meta_R	stubs/gdkstub.c	2072;"	d
GDK_Mode_switch	stubs/gdkstub.c	1751;"	d
GDK_MouseKeys_Accel_Enable	stubs/gdkstub.c	2291;"	d
GDK_MouseKeys_Enable	stubs/gdkstub.c	2288;"	d
GDK_Muhenkan	stubs/gdkstub.c	1631;"	d
GDK_Multi_key	stubs/gdkstub.c	1616;"	d
GDK_MultipleCandidate	stubs/gdkstub.c	1622;"	d
GDK_N	stubs/gdkstub.c	2624;"	d
GDK_NAND	stubs/gdkstub.c	5721;"	enum:GdkFunction
GDK_NONE	stubs/gdkstub.c	5633;"	d
GDK_NOOP	stubs/gdkstub.c	5721;"	enum:GdkFunction
GDK_NOTHING	stubs/gdkstub.c	5830;"	enum:GdkEventType
GDK_NOTIFY_ANCESTOR	stubs/gdkstub.c	5867;"	enum:GdkNotifyType
GDK_NOTIFY_INFERIOR	stubs/gdkstub.c	5867;"	enum:GdkNotifyType
GDK_NOTIFY_NONLINEAR	stubs/gdkstub.c	5867;"	enum:GdkNotifyType
GDK_NOTIFY_NONLINEAR_VIRTUAL	stubs/gdkstub.c	5867;"	enum:GdkNotifyType
GDK_NOTIFY_UNKNOWN	stubs/gdkstub.c	5867;"	enum:GdkNotifyType
GDK_NOTIFY_VIRTUAL	stubs/gdkstub.c	5867;"	enum:GdkNotifyType
GDK_NO_EXPOSE	stubs/gdkstub.c	5830;"	enum:GdkEventType
GDK_NUM_GLYPHS	stubs/gdkstub.c	5779;"	enum:GdkCursorType
GDK_Nacute	stubs/gdkstub.c	3167;"	d
GDK_Ncaron	stubs/gdkstub.c	3170;"	d
GDK_Ncedilla	stubs/gdkstub.c	3365;"	d
GDK_Next	stubs/gdkstub.c	1706;"	d
GDK_Next_Virtual_Screen	stubs/gdkstub.c	2261;"	d
GDK_Ntilde	stubs/gdkstub.c	2924;"	d
GDK_Num_Lock	stubs/gdkstub.c	1757;"	d
GDK_O	stubs/gdkstub.c	2627;"	d
GDK_OK	stubs/gdkstub.c	5919;"	enum:GdkStatus
GDK_OPAQUE_STIPPLED	stubs/gdkstub.c	5727;"	enum:GdkFill
GDK_OR	stubs/gdkstub.c	5721;"	enum:GdkFunction
GDK_OR_INVERT	stubs/gdkstub.c	5721;"	enum:GdkFunction
GDK_OR_REVERSE	stubs/gdkstub.c	5721;"	enum:GdkFunction
GDK_OVERLAP_RECTANGLE_IN	stubs/gdkstub.c	6075;"	enum:GdkOverlapType
GDK_OVERLAP_RECTANGLE_OUT	stubs/gdkstub.c	6075;"	enum:GdkOverlapType
GDK_OVERLAP_RECTANGLE_PART	stubs/gdkstub.c	6075;"	enum:GdkOverlapType
GDK_Oacute	stubs/gdkstub.c	2930;"	d
GDK_Ocircumflex	stubs/gdkstub.c	2933;"	d
GDK_Odiaeresis	stubs/gdkstub.c	2939;"	d
GDK_Odoubleacute	stubs/gdkstub.c	3173;"	d
GDK_Ograve	stubs/gdkstub.c	2927;"	d
GDK_Omacron	stubs/gdkstub.c	3368;"	d
GDK_Ooblique	stubs/gdkstub.c	2945;"	d
GDK_Otilde	stubs/gdkstub.c	2936;"	d
GDK_Overlay1_Enable	stubs/gdkstub.c	2294;"	d
GDK_Overlay2_Enable	stubs/gdkstub.c	2297;"	d
GDK_P	stubs/gdkstub.c	2630;"	d
GDK_PARENT_RELATIVE	stubs/gdkstub.c	5639;"	d
GDK_PENCIL	stubs/gdkstub.c	5779;"	enum:GdkCursorType
GDK_PIRATE	stubs/gdkstub.c	5779;"	enum:GdkCursorType
GDK_PLUS	stubs/gdkstub.c	5779;"	enum:GdkCursorType
GDK_POINTER_MOTION_HINT_MASK	stubs/gdkstub.c	5856;"	enum:GdkEventMask
GDK_POINTER_MOTION_MASK	stubs/gdkstub.c	5856;"	enum:GdkEventMask
GDK_PRIORITY_EVENTS	stubs/gdkstub.c	28;"	d
GDK_PROPERTY_CHANGE_MASK	stubs/gdkstub.c	5856;"	enum:GdkEventMask
GDK_PROPERTY_DELETE	stubs/gdkstub.c	5961;"	enum:GdkPropertyState
GDK_PROPERTY_NEW_VALUE	stubs/gdkstub.c	5961;"	enum:GdkPropertyState
GDK_PROPERTY_NOTIFY	stubs/gdkstub.c	5830;"	enum:GdkEventType
GDK_PROP_MODE_APPEND	stubs/gdkstub.c	5967;"	enum:GdkPropMode
GDK_PROP_MODE_PREPEND	stubs/gdkstub.c	5967;"	enum:GdkPropMode
GDK_PROP_MODE_REPLACE	stubs/gdkstub.c	5967;"	enum:GdkPropMode
GDK_PROXIMITY_IN	stubs/gdkstub.c	5830;"	enum:GdkEventType
GDK_PROXIMITY_IN_MASK	stubs/gdkstub.c	5856;"	enum:GdkEventMask
GDK_PROXIMITY_OUT	stubs/gdkstub.c	5830;"	enum:GdkEventType
GDK_PROXIMITY_OUT_MASK	stubs/gdkstub.c	5856;"	enum:GdkEventMask
GDK_Page_Down	stubs/gdkstub.c	1709;"	d
GDK_Page_Up	stubs/gdkstub.c	1703;"	d
GDK_Pause	stubs/gdkstub.c	1601;"	d
GDK_Pointer_Accelerate	stubs/gdkstub.c	2384;"	d
GDK_Pointer_Button1	stubs/gdkstub.c	2330;"	d
GDK_Pointer_Button2	stubs/gdkstub.c	2333;"	d
GDK_Pointer_Button3	stubs/gdkstub.c	2336;"	d
GDK_Pointer_Button4	stubs/gdkstub.c	2339;"	d
GDK_Pointer_Button5	stubs/gdkstub.c	2342;"	d
GDK_Pointer_Button_Dflt	stubs/gdkstub.c	2327;"	d
GDK_Pointer_DblClick1	stubs/gdkstub.c	2348;"	d
GDK_Pointer_DblClick2	stubs/gdkstub.c	2351;"	d
GDK_Pointer_DblClick3	stubs/gdkstub.c	2354;"	d
GDK_Pointer_DblClick4	stubs/gdkstub.c	2357;"	d
GDK_Pointer_DblClick5	stubs/gdkstub.c	2360;"	d
GDK_Pointer_DblClick_Dflt	stubs/gdkstub.c	2345;"	d
GDK_Pointer_DfltBtnNext	stubs/gdkstub.c	2387;"	d
GDK_Pointer_DfltBtnPrev	stubs/gdkstub.c	2390;"	d
GDK_Pointer_Down	stubs/gdkstub.c	2312;"	d
GDK_Pointer_DownLeft	stubs/gdkstub.c	2321;"	d
GDK_Pointer_DownRight	stubs/gdkstub.c	2324;"	d
GDK_Pointer_Drag1	stubs/gdkstub.c	2366;"	d
GDK_Pointer_Drag2	stubs/gdkstub.c	2369;"	d
GDK_Pointer_Drag3	stubs/gdkstub.c	2372;"	d
GDK_Pointer_Drag4	stubs/gdkstub.c	2375;"	d
GDK_Pointer_Drag5	stubs/gdkstub.c	2378;"	d
GDK_Pointer_Drag_Dflt	stubs/gdkstub.c	2363;"	d
GDK_Pointer_EnableKeys	stubs/gdkstub.c	2381;"	d
GDK_Pointer_Left	stubs/gdkstub.c	2303;"	d
GDK_Pointer_Right	stubs/gdkstub.c	2306;"	d
GDK_Pointer_Up	stubs/gdkstub.c	2309;"	d
GDK_Pointer_UpLeft	stubs/gdkstub.c	2315;"	d
GDK_Pointer_UpRight	stubs/gdkstub.c	2318;"	d
GDK_Prev_Virtual_Screen	stubs/gdkstub.c	2258;"	d
GDK_PreviousCandidate	stubs/gdkstub.c	1625;"	d
GDK_Print	stubs/gdkstub.c	1721;"	d
GDK_Prior	stubs/gdkstub.c	1700;"	d
GDK_Q	stubs/gdkstub.c	2633;"	d
GDK_QUESTION_ARROW	stubs/gdkstub.c	5779;"	enum:GdkCursorType
GDK_R	stubs/gdkstub.c	2636;"	d
GDK_R1	stubs/gdkstub.c	1964;"	d
GDK_R10	stubs/gdkstub.c	2018;"	d
GDK_R11	stubs/gdkstub.c	2024;"	d
GDK_R12	stubs/gdkstub.c	2030;"	d
GDK_R13	stubs/gdkstub.c	2036;"	d
GDK_R14	stubs/gdkstub.c	2042;"	d
GDK_R15	stubs/gdkstub.c	2048;"	d
GDK_R2	stubs/gdkstub.c	1970;"	d
GDK_R3	stubs/gdkstub.c	1976;"	d
GDK_R4	stubs/gdkstub.c	1982;"	d
GDK_R5	stubs/gdkstub.c	1988;"	d
GDK_R6	stubs/gdkstub.c	1994;"	d
GDK_R7	stubs/gdkstub.c	2000;"	d
GDK_R8	stubs/gdkstub.c	2006;"	d
GDK_R9	stubs/gdkstub.c	2012;"	d
GDK_RELEASE_MASK	stubs/gdkstub.c	5895;"	enum:GdkModifierType
GDK_RGB_DITHER_MAX	stubs/gdkstub.c	5545;"	enum:GdkRgbDither
GDK_RGB_DITHER_NONE	stubs/gdkstub.c	5545;"	enum:GdkRgbDither
GDK_RGB_DITHER_NORMAL	stubs/gdkstub.c	5545;"	enum:GdkRgbDither
GDK_RIGHTBUTTON	stubs/gdkstub.c	5779;"	enum:GdkCursorType
GDK_RIGHT_PTR	stubs/gdkstub.c	5779;"	enum:GdkCursorType
GDK_RIGHT_SIDE	stubs/gdkstub.c	5779;"	enum:GdkCursorType
GDK_RIGHT_TEE	stubs/gdkstub.c	5779;"	enum:GdkCursorType
GDK_ROOT_PARENT	stubs/gdkstub.c	6579;"	d
GDK_ROOT_WINDOW	stubs/gdkstub.c	6576;"	d
GDK_RTL_LOGO	stubs/gdkstub.c	5779;"	enum:GdkCursorType
GDK_Racute	stubs/gdkstub.c	3140;"	d
GDK_Rcaron	stubs/gdkstub.c	3176;"	d
GDK_Rcedilla	stubs/gdkstub.c	3311;"	d
GDK_Redo	stubs/gdkstub.c	1733;"	d
GDK_RepeatKeys_Enable	stubs/gdkstub.c	2276;"	d
GDK_Return	stubs/gdkstub.c	1598;"	d
GDK_Right	stubs/gdkstub.c	1694;"	d
GDK_Romaji	stubs/gdkstub.c	1640;"	d
GDK_S	stubs/gdkstub.c	2639;"	d
GDK_SAILBOAT	stubs/gdkstub.c	5779;"	enum:GdkCursorType
GDK_SB_DOWN_ARROW	stubs/gdkstub.c	5779;"	enum:GdkCursorType
GDK_SB_H_DOUBLE_ARROW	stubs/gdkstub.c	5779;"	enum:GdkCursorType
GDK_SB_LEFT_ARROW	stubs/gdkstub.c	5779;"	enum:GdkCursorType
GDK_SB_RIGHT_ARROW	stubs/gdkstub.c	5779;"	enum:GdkCursorType
GDK_SB_UP_ARROW	stubs/gdkstub.c	5779;"	enum:GdkCursorType
GDK_SB_V_DOUBLE_ARROW	stubs/gdkstub.c	5779;"	enum:GdkCursorType
GDK_SELECTION_CLEAR	stubs/gdkstub.c	5830;"	enum:GdkEventType
GDK_SELECTION_NOTIFY	stubs/gdkstub.c	5830;"	enum:GdkEventType
GDK_SELECTION_PRIMARY	stubs/gdkstub.c	5955;"	enum:GdkSelection
GDK_SELECTION_REQUEST	stubs/gdkstub.c	5830;"	enum:GdkEventType
GDK_SELECTION_SECONDARY	stubs/gdkstub.c	5955;"	enum:GdkSelection
GDK_SELECTION_TYPE_ATOM	stubs/gdkstub.c	6009;"	enum:GdkSelectionType
GDK_SELECTION_TYPE_BITMAP	stubs/gdkstub.c	6009;"	enum:GdkSelectionType
GDK_SELECTION_TYPE_COLORMAP	stubs/gdkstub.c	6009;"	enum:GdkSelectionType
GDK_SELECTION_TYPE_DRAWABLE	stubs/gdkstub.c	6009;"	enum:GdkSelectionType
GDK_SELECTION_TYPE_INTEGER	stubs/gdkstub.c	6009;"	enum:GdkSelectionType
GDK_SELECTION_TYPE_PIXMAP	stubs/gdkstub.c	6009;"	enum:GdkSelectionType
GDK_SELECTION_TYPE_STRING	stubs/gdkstub.c	6009;"	enum:GdkSelectionType
GDK_SELECTION_TYPE_WINDOW	stubs/gdkstub.c	6009;"	enum:GdkSelectionType
GDK_SET	stubs/gdkstub.c	5721;"	enum:GdkFunction
GDK_SHIFT_MASK	stubs/gdkstub.c	5895;"	enum:GdkModifierType
GDK_SHUTTLE	stubs/gdkstub.c	5779;"	enum:GdkCursorType
GDK_SIZING	stubs/gdkstub.c	5779;"	enum:GdkCursorType
GDK_SOLID	stubs/gdkstub.c	5727;"	enum:GdkFill
GDK_SOURCE_CURSOR	stubs/gdkstub.c	5973;"	enum:GdkInputSource
GDK_SOURCE_ERASER	stubs/gdkstub.c	5973;"	enum:GdkInputSource
GDK_SOURCE_MOUSE	stubs/gdkstub.c	5973;"	enum:GdkInputSource
GDK_SOURCE_PEN	stubs/gdkstub.c	5973;"	enum:GdkInputSource
GDK_SPIDER	stubs/gdkstub.c	5779;"	enum:GdkCursorType
GDK_SPRAYCAN	stubs/gdkstub.c	5779;"	enum:GdkCursorType
GDK_STAR	stubs/gdkstub.c	5779;"	enum:GdkCursorType
GDK_STIPPLED	stubs/gdkstub.c	5727;"	enum:GdkFill
GDK_STRUCTURE_MASK	stubs/gdkstub.c	5856;"	enum:GdkEventMask
GDK_SUBSTRUCTURE_MASK	stubs/gdkstub.c	5856;"	enum:GdkEventMask
GDK_Sacute	stubs/gdkstub.c	3080;"	d
GDK_Scaron	stubs/gdkstub.c	3083;"	d
GDK_Scedilla	stubs/gdkstub.c	3086;"	d
GDK_Scircumflex	stubs/gdkstub.c	3284;"	d
GDK_Scroll_Lock	stubs/gdkstub.c	1604;"	d
GDK_Select	stubs/gdkstub.c	1718;"	d
GDK_Serbian_DJE	stubs/gdkstub.c	3839;"	d
GDK_Serbian_DZE	stubs/gdkstub.c	3899;"	d
GDK_Serbian_JE	stubs/gdkstub.c	3872;"	d
GDK_Serbian_LJE	stubs/gdkstub.c	3878;"	d
GDK_Serbian_NJE	stubs/gdkstub.c	3884;"	d
GDK_Serbian_TSHE	stubs/gdkstub.c	3887;"	d
GDK_Serbian_dje	stubs/gdkstub.c	3773;"	d
GDK_Serbian_dze	stubs/gdkstub.c	3833;"	d
GDK_Serbian_je	stubs/gdkstub.c	3806;"	d
GDK_Serbian_lje	stubs/gdkstub.c	3812;"	d
GDK_Serbian_nje	stubs/gdkstub.c	3818;"	d
GDK_Serbian_tshe	stubs/gdkstub.c	3821;"	d
GDK_Shift_L	stubs/gdkstub.c	2051;"	d
GDK_Shift_Lock	stubs/gdkstub.c	2066;"	d
GDK_Shift_R	stubs/gdkstub.c	2054;"	d
GDK_SingleCandidate	stubs/gdkstub.c	1619;"	d
GDK_SlowKeys_Enable	stubs/gdkstub.c	2279;"	d
GDK_StickyKeys_Enable	stubs/gdkstub.c	2285;"	d
GDK_Super_L	stubs/gdkstub.c	2081;"	d
GDK_Super_R	stubs/gdkstub.c	2084;"	d
GDK_Sys_Req	stubs/gdkstub.c	1607;"	d
GDK_T	stubs/gdkstub.c	2642;"	d
GDK_TARGET	stubs/gdkstub.c	5779;"	enum:GdkCursorType
GDK_TARGET_BITMAP	stubs/gdkstub.c	5996;"	enum:GdkTarget
GDK_TARGET_COLORMAP	stubs/gdkstub.c	5996;"	enum:GdkTarget
GDK_TARGET_DRAWABLE	stubs/gdkstub.c	5996;"	enum:GdkTarget
GDK_TARGET_PIXMAP	stubs/gdkstub.c	5996;"	enum:GdkTarget
GDK_TARGET_STRING	stubs/gdkstub.c	5996;"	enum:GdkTarget
GDK_TCROSS	stubs/gdkstub.c	5779;"	enum:GdkCursorType
GDK_THORN	stubs/gdkstub.c	2963;"	d
GDK_THREADS_ENTER	stubs/gdkstub.c	1569;"	d
GDK_THREADS_LEAVE	stubs/gdkstub.c	1572;"	d
GDK_TILED	stubs/gdkstub.c	5727;"	enum:GdkFill
GDK_TOP_LEFT_ARROW	stubs/gdkstub.c	5779;"	enum:GdkCursorType
GDK_TOP_LEFT_CORNER	stubs/gdkstub.c	5779;"	enum:GdkCursorType
GDK_TOP_RIGHT_CORNER	stubs/gdkstub.c	5779;"	enum:GdkCursorType
GDK_TOP_SIDE	stubs/gdkstub.c	5779;"	enum:GdkCursorType
GDK_TOP_TEE	stubs/gdkstub.c	5779;"	enum:GdkCursorType
GDK_TREK	stubs/gdkstub.c	5779;"	enum:GdkCursorType
GDK_Tab	stubs/gdkstub.c	1589;"	d
GDK_Tcaron	stubs/gdkstub.c	3089;"	d
GDK_Tcedilla	stubs/gdkstub.c	3185;"	d
GDK_Terminate_Server	stubs/gdkstub.c	2267;"	d
GDK_Thai_baht	stubs/gdkstub.c	5138;"	d
GDK_Thai_bobaimai	stubs/gdkstub.c	5036;"	d
GDK_Thai_chochan	stubs/gdkstub.c	4982;"	d
GDK_Thai_chochang	stubs/gdkstub.c	4988;"	d
GDK_Thai_choching	stubs/gdkstub.c	4985;"	d
GDK_Thai_chochoe	stubs/gdkstub.c	4994;"	d
GDK_Thai_dochada	stubs/gdkstub.c	5000;"	d
GDK_Thai_dodek	stubs/gdkstub.c	5018;"	d
GDK_Thai_fofa	stubs/gdkstub.c	5045;"	d
GDK_Thai_fofan	stubs/gdkstub.c	5051;"	d
GDK_Thai_hohip	stubs/gdkstub.c	5087;"	d
GDK_Thai_honokhuk	stubs/gdkstub.c	5096;"	d
GDK_Thai_khokhai	stubs/gdkstub.c	4964;"	d
GDK_Thai_khokhon	stubs/gdkstub.c	4973;"	d
GDK_Thai_khokhuat	stubs/gdkstub.c	4967;"	d
GDK_Thai_khokhwai	stubs/gdkstub.c	4970;"	d
GDK_Thai_khorakhang	stubs/gdkstub.c	4976;"	d
GDK_Thai_kokai	stubs/gdkstub.c	4961;"	d
GDK_Thai_lakkhangyao	stubs/gdkstub.c	5156;"	d
GDK_Thai_lekchet	stubs/gdkstub.c	5204;"	d
GDK_Thai_lekha	stubs/gdkstub.c	5198;"	d
GDK_Thai_lekhok	stubs/gdkstub.c	5201;"	d
GDK_Thai_lekkao	stubs/gdkstub.c	5210;"	d
GDK_Thai_leknung	stubs/gdkstub.c	5186;"	d
GDK_Thai_lekpaet	stubs/gdkstub.c	5207;"	d
GDK_Thai_leksam	stubs/gdkstub.c	5192;"	d
GDK_Thai_leksi	stubs/gdkstub.c	5195;"	d
GDK_Thai_leksong	stubs/gdkstub.c	5189;"	d
GDK_Thai_leksun	stubs/gdkstub.c	5183;"	d
GDK_Thai_lochula	stubs/gdkstub.c	5090;"	d
GDK_Thai_loling	stubs/gdkstub.c	5069;"	d
GDK_Thai_lu	stubs/gdkstub.c	5072;"	d
GDK_Thai_maichattawa	stubs/gdkstub.c	5174;"	d
GDK_Thai_maiek	stubs/gdkstub.c	5165;"	d
GDK_Thai_maihanakat	stubs/gdkstub.c	5105;"	d
GDK_Thai_maihanakat_maitho	stubs/gdkstub.c	5135;"	d
GDK_Thai_maitaikhu	stubs/gdkstub.c	5162;"	d
GDK_Thai_maitho	stubs/gdkstub.c	5168;"	d
GDK_Thai_maitri	stubs/gdkstub.c	5171;"	d
GDK_Thai_maiyamok	stubs/gdkstub.c	5159;"	d
GDK_Thai_moma	stubs/gdkstub.c	5057;"	d
GDK_Thai_ngongu	stubs/gdkstub.c	4979;"	d
GDK_Thai_nikhahit	stubs/gdkstub.c	5180;"	d
GDK_Thai_nonen	stubs/gdkstub.c	5015;"	d
GDK_Thai_nonu	stubs/gdkstub.c	5033;"	d
GDK_Thai_oang	stubs/gdkstub.c	5093;"	d
GDK_Thai_paiyannoi	stubs/gdkstub.c	5099;"	d
GDK_Thai_phinthu	stubs/gdkstub.c	5132;"	d
GDK_Thai_phophan	stubs/gdkstub.c	5048;"	d
GDK_Thai_phophung	stubs/gdkstub.c	5042;"	d
GDK_Thai_phosamphao	stubs/gdkstub.c	5054;"	d
GDK_Thai_popla	stubs/gdkstub.c	5039;"	d
GDK_Thai_rorua	stubs/gdkstub.c	5063;"	d
GDK_Thai_ru	stubs/gdkstub.c	5066;"	d
GDK_Thai_saraa	stubs/gdkstub.c	5102;"	d
GDK_Thai_saraaa	stubs/gdkstub.c	5108;"	d
GDK_Thai_saraae	stubs/gdkstub.c	5144;"	d
GDK_Thai_saraaimaimalai	stubs/gdkstub.c	5153;"	d
GDK_Thai_saraaimaimuan	stubs/gdkstub.c	5150;"	d
GDK_Thai_saraam	stubs/gdkstub.c	5111;"	d
GDK_Thai_sarae	stubs/gdkstub.c	5141;"	d
GDK_Thai_sarai	stubs/gdkstub.c	5114;"	d
GDK_Thai_saraii	stubs/gdkstub.c	5117;"	d
GDK_Thai_sarao	stubs/gdkstub.c	5147;"	d
GDK_Thai_sarau	stubs/gdkstub.c	5126;"	d
GDK_Thai_saraue	stubs/gdkstub.c	5120;"	d
GDK_Thai_sarauee	stubs/gdkstub.c	5123;"	d
GDK_Thai_sarauu	stubs/gdkstub.c	5129;"	d
GDK_Thai_sorusi	stubs/gdkstub.c	5081;"	d
GDK_Thai_sosala	stubs/gdkstub.c	5078;"	d
GDK_Thai_soso	stubs/gdkstub.c	4991;"	d
GDK_Thai_sosua	stubs/gdkstub.c	5084;"	d
GDK_Thai_thanthakhat	stubs/gdkstub.c	5177;"	d
GDK_Thai_thonangmontho	stubs/gdkstub.c	5009;"	d
GDK_Thai_thophuthao	stubs/gdkstub.c	5012;"	d
GDK_Thai_thothahan	stubs/gdkstub.c	5027;"	d
GDK_Thai_thothan	stubs/gdkstub.c	5006;"	d
GDK_Thai_thothong	stubs/gdkstub.c	5030;"	d
GDK_Thai_thothung	stubs/gdkstub.c	5024;"	d
GDK_Thai_topatak	stubs/gdkstub.c	5003;"	d
GDK_Thai_totao	stubs/gdkstub.c	5021;"	d
GDK_Thai_wowaen	stubs/gdkstub.c	5075;"	d
GDK_Thai_yoyak	stubs/gdkstub.c	5060;"	d
GDK_Thai_yoying	stubs/gdkstub.c	4997;"	d
GDK_Thorn	stubs/gdkstub.c	2966;"	d
GDK_Touroku	stubs/gdkstub.c	1661;"	d
GDK_Tslash	stubs/gdkstub.c	3326;"	d
GDK_U	stubs/gdkstub.c	2645;"	d
GDK_UL_ANGLE	stubs/gdkstub.c	5779;"	enum:GdkCursorType
GDK_UMBRELLA	stubs/gdkstub.c	5779;"	enum:GdkCursorType
GDK_UNMAP	stubs/gdkstub.c	5830;"	enum:GdkEventType
GDK_UR_ANGLE	stubs/gdkstub.c	5779;"	enum:GdkCursorType
GDK_Uacute	stubs/gdkstub.c	2951;"	d
GDK_Ubreve	stubs/gdkstub.c	3281;"	d
GDK_Ucircumflex	stubs/gdkstub.c	2954;"	d
GDK_Udiaeresis	stubs/gdkstub.c	2957;"	d
GDK_Udoubleacute	stubs/gdkstub.c	3182;"	d
GDK_Ugrave	stubs/gdkstub.c	2948;"	d
GDK_Ukrainian_I	stubs/gdkstub.c	3857;"	d
GDK_Ukrainian_IE	stubs/gdkstub.c	3848;"	d
GDK_Ukrainian_YI	stubs/gdkstub.c	3863;"	d
GDK_Ukrainian_i	stubs/gdkstub.c	3791;"	d
GDK_Ukrainian_ie	stubs/gdkstub.c	3782;"	d
GDK_Ukrainian_yi	stubs/gdkstub.c	3797;"	d
GDK_Ukranian_I	stubs/gdkstub.c	3860;"	d
GDK_Ukranian_JE	stubs/gdkstub.c	3851;"	d
GDK_Ukranian_YI	stubs/gdkstub.c	3866;"	d
GDK_Ukranian_i	stubs/gdkstub.c	3794;"	d
GDK_Ukranian_je	stubs/gdkstub.c	3785;"	d
GDK_Ukranian_yi	stubs/gdkstub.c	3800;"	d
GDK_Umacron	stubs/gdkstub.c	3380;"	d
GDK_Undo	stubs/gdkstub.c	1730;"	d
GDK_Uogonek	stubs/gdkstub.c	3374;"	d
GDK_Up	stubs/gdkstub.c	1691;"	d
GDK_Uring	stubs/gdkstub.c	3179;"	d
GDK_Utilde	stubs/gdkstub.c	3377;"	d
GDK_V	stubs/gdkstub.c	2648;"	d
GDK_VISIBILITY_FULLY_OBSCURED	stubs/gdkstub.c	5793;"	enum:GdkVisibilityState
GDK_VISIBILITY_NOTIFY	stubs/gdkstub.c	5830;"	enum:GdkEventType
GDK_VISIBILITY_NOTIFY_MASK	stubs/gdkstub.c	5856;"	enum:GdkEventMask
GDK_VISIBILITY_PARTIAL	stubs/gdkstub.c	5793;"	enum:GdkVisibilityState
GDK_VISIBILITY_UNOBSCURED	stubs/gdkstub.c	5793;"	enum:GdkVisibilityState
GDK_VISUAL_DIRECT_COLOR	stubs/gdkstub.c	5682;"	enum:GdkVisualType
GDK_VISUAL_GRAYSCALE	stubs/gdkstub.c	5682;"	enum:GdkVisualType
GDK_VISUAL_PSEUDO_COLOR	stubs/gdkstub.c	5682;"	enum:GdkVisualType
GDK_VISUAL_STATIC_COLOR	stubs/gdkstub.c	5682;"	enum:GdkVisualType
GDK_VISUAL_STATIC_GRAY	stubs/gdkstub.c	5682;"	enum:GdkVisualType
GDK_VISUAL_TRUE_COLOR	stubs/gdkstub.c	5682;"	enum:GdkVisualType
GDK_VISUAL_XVISUAL	stubs/gdkstub.c	6609;"	d
GDK_VoidSymbol	stubs/gdkstub.c	1583;"	d
GDK_W	stubs/gdkstub.c	2651;"	d
GDK_WATCH	stubs/gdkstub.c	5779;"	enum:GdkCursorType
GDK_WA_COLORMAP	stubs/gdkstub.c	5702;"	enum:GdkWindowAttributesType
GDK_WA_CURSOR	stubs/gdkstub.c	5702;"	enum:GdkWindowAttributesType
GDK_WA_NOREDIR	stubs/gdkstub.c	5702;"	enum:GdkWindowAttributesType
GDK_WA_TITLE	stubs/gdkstub.c	5702;"	enum:GdkWindowAttributesType
GDK_WA_VISUAL	stubs/gdkstub.c	5702;"	enum:GdkWindowAttributesType
GDK_WA_WMCLASS	stubs/gdkstub.c	5702;"	enum:GdkWindowAttributesType
GDK_WA_X	stubs/gdkstub.c	5702;"	enum:GdkWindowAttributesType
GDK_WA_Y	stubs/gdkstub.c	5702;"	enum:GdkWindowAttributesType
GDK_WINDING_RULE	stubs/gdkstub.c	5733;"	enum:GdkFillRule
GDK_WINDOW_CHILD	stubs/gdkstub.c	5663;"	enum:GdkWindowType
GDK_WINDOW_DIALOG	stubs/gdkstub.c	5663;"	enum:GdkWindowType
GDK_WINDOW_FOREIGN	stubs/gdkstub.c	5663;"	enum:GdkWindowType
GDK_WINDOW_PIXMAP	stubs/gdkstub.c	5663;"	enum:GdkWindowType
GDK_WINDOW_ROOT	stubs/gdkstub.c	5663;"	enum:GdkWindowType
GDK_WINDOW_TEMP	stubs/gdkstub.c	5663;"	enum:GdkWindowType
GDK_WINDOW_TOPLEVEL	stubs/gdkstub.c	5663;"	enum:GdkWindowType
GDK_WINDOW_XDISPLAY	stubs/gdkstub.c	6585;"	d
GDK_WINDOW_XWINDOW	stubs/gdkstub.c	6588;"	d
GDK_X	stubs/gdkstub.c	2654;"	d
GDK_XOR	stubs/gdkstub.c	5721;"	enum:GdkFunction
GDK_XTERM	stubs/gdkstub.c	5779;"	enum:GdkCursorType
GDK_X_CURSOR	stubs/gdkstub.c	5779;"	enum:GdkCursorType
GDK_Y	stubs/gdkstub.c	2657;"	d
GDK_Yacute	stubs/gdkstub.c	2960;"	d
GDK_Z	stubs/gdkstub.c	2660;"	d
GDK_Zabovedot	stubs/gdkstub.c	3098;"	d
GDK_Zacute	stubs/gdkstub.c	3092;"	d
GDK_Zcaron	stubs/gdkstub.c	3095;"	d
GDK_Zen_Koho	stubs/gdkstub.c	1679;"	d
GDK_Zenkaku	stubs/gdkstub.c	1652;"	d
GDK_Zenkaku_Hankaku	stubs/gdkstub.c	1658;"	d
GDK_a	stubs/gdkstub.c	2684;"	d
GDK_aacute	stubs/gdkstub.c	2975;"	d
GDK_abovedot	stubs/gdkstub.c	3236;"	d
GDK_abreve	stubs/gdkstub.c	3191;"	d
GDK_acircumflex	stubs/gdkstub.c	2978;"	d
GDK_acute	stubs/gdkstub.c	2834;"	d
GDK_adiaeresis	stubs/gdkstub.c	2984;"	d
GDK_ae	stubs/gdkstub.c	2990;"	d
GDK_agrave	stubs/gdkstub.c	2972;"	d
GDK_amacron	stubs/gdkstub.c	3383;"	d
GDK_ampersand	stubs/gdkstub.c	2501;"	d
GDK_aogonek	stubs/gdkstub.c	3101;"	d
GDK_apostrophe	stubs/gdkstub.c	2504;"	d
GDK_approximate	stubs/gdkstub.c	4409;"	d
GDK_aring	stubs/gdkstub.c	2987;"	d
GDK_asciicircum	stubs/gdkstub.c	2672;"	d
GDK_asciitilde	stubs/gdkstub.c	2771;"	d
GDK_asterisk	stubs/gdkstub.c	2516;"	d
GDK_at	stubs/gdkstub.c	2582;"	d
GDK_atilde	stubs/gdkstub.c	2981;"	d
GDK_b	stubs/gdkstub.c	2687;"	d
GDK_backslash	stubs/gdkstub.c	2666;"	d
GDK_ballotcross	stubs/gdkstub.c	4748;"	d
GDK_bar	stubs/gdkstub.c	2765;"	d
GDK_blank	stubs/gdkstub.c	4463;"	d
GDK_botintegral	stubs/gdkstub.c	4328;"	d
GDK_botleftparens	stubs/gdkstub.c	4349;"	d
GDK_botleftsqbracket	stubs/gdkstub.c	4337;"	d
GDK_botleftsummation	stubs/gdkstub.c	4367;"	d
GDK_botrightparens	stubs/gdkstub.c	4355;"	d
GDK_botrightsqbracket	stubs/gdkstub.c	4343;"	d
GDK_botrightsummation	stubs/gdkstub.c	4379;"	d
GDK_bott	stubs/gdkstub.c	4526;"	d
GDK_botvertsummationconnector	stubs/gdkstub.c	4373;"	d
GDK_braceleft	stubs/gdkstub.c	2762;"	d
GDK_braceright	stubs/gdkstub.c	2768;"	d
GDK_bracketleft	stubs/gdkstub.c	2663;"	d
GDK_bracketright	stubs/gdkstub.c	2669;"	d
GDK_breve	stubs/gdkstub.c	3071;"	d
GDK_brokenbar	stubs/gdkstub.c	2792;"	d
GDK_c	stubs/gdkstub.c	2690;"	d
GDK_cabovedot	stubs/gdkstub.c	3287;"	d
GDK_cacute	stubs/gdkstub.c	3197;"	d
GDK_careof	stubs/gdkstub.c	4598;"	d
GDK_caret	stubs/gdkstub.c	4772;"	d
GDK_caron	stubs/gdkstub.c	3116;"	d
GDK_ccaron	stubs/gdkstub.c	3200;"	d
GDK_ccedilla	stubs/gdkstub.c	2993;"	d
GDK_ccircumflex	stubs/gdkstub.c	3290;"	d
GDK_cedilla	stubs/gdkstub.c	2846;"	d
GDK_cent	stubs/gdkstub.c	2780;"	d
GDK_checkerboard	stubs/gdkstub.c	4469;"	d
GDK_checkmark	stubs/gdkstub.c	4745;"	d
GDK_circle	stubs/gdkstub.c	4820;"	d
GDK_club	stubs/gdkstub.c	4727;"	d
GDK_colon	stubs/gdkstub.c	2564;"	d
GDK_comma	stubs/gdkstub.c	2522;"	d
GDK_copyright	stubs/gdkstub.c	2801;"	d
GDK_cr	stubs/gdkstub.c	4478;"	d
GDK_crossinglines	stubs/gdkstub.c	4502;"	d
GDK_currency	stubs/gdkstub.c	2786;"	d
GDK_cursor	stubs/gdkstub.c	4781;"	d
GDK_d	stubs/gdkstub.c	2693;"	d
GDK_dagger	stubs/gdkstub.c	4739;"	d
GDK_dcaron	stubs/gdkstub.c	3209;"	d
GDK_dead_abovedot	stubs/gdkstub.c	2222;"	d
GDK_dead_abovering	stubs/gdkstub.c	2228;"	d
GDK_dead_acute	stubs/gdkstub.c	2207;"	d
GDK_dead_belowdot	stubs/gdkstub.c	2252;"	d
GDK_dead_breve	stubs/gdkstub.c	2219;"	d
GDK_dead_caron	stubs/gdkstub.c	2234;"	d
GDK_dead_cedilla	stubs/gdkstub.c	2237;"	d
GDK_dead_circumflex	stubs/gdkstub.c	2210;"	d
GDK_dead_diaeresis	stubs/gdkstub.c	2225;"	d
GDK_dead_doubleacute	stubs/gdkstub.c	2231;"	d
GDK_dead_grave	stubs/gdkstub.c	2204;"	d
GDK_dead_iota	stubs/gdkstub.c	2243;"	d
GDK_dead_macron	stubs/gdkstub.c	2216;"	d
GDK_dead_ogonek	stubs/gdkstub.c	2240;"	d
GDK_dead_semivoiced_sound	stubs/gdkstub.c	2249;"	d
GDK_dead_tilde	stubs/gdkstub.c	2213;"	d
GDK_dead_voiced_sound	stubs/gdkstub.c	2246;"	d
GDK_decimalpoint	stubs/gdkstub.c	4607;"	d
GDK_degree	stubs/gdkstub.c	2822;"	d
GDK_diaeresis	stubs/gdkstub.c	2798;"	d
GDK_diamond	stubs/gdkstub.c	4730;"	d
GDK_digitspace	stubs/gdkstub.c	4547;"	d
GDK_division	stubs/gdkstub.c	3041;"	d
GDK_dollar	stubs/gdkstub.c	2495;"	d
GDK_doubbaselinedot	stubs/gdkstub.c	4571;"	d
GDK_doubleacute	stubs/gdkstub.c	3131;"	d
GDK_doubledagger	stubs/gdkstub.c	4742;"	d
GDK_doublelowquotemark	stubs/gdkstub.c	4778;"	d
GDK_downarrow	stubs/gdkstub.c	4460;"	d
GDK_downcaret	stubs/gdkstub.c	4790;"	d
GDK_downshoe	stubs/gdkstub.c	4826;"	d
GDK_downstile	stubs/gdkstub.c	4805;"	d
GDK_downtack	stubs/gdkstub.c	4799;"	d
GDK_dstroke	stubs/gdkstub.c	3212;"	d
GDK_e	stubs/gdkstub.c	2696;"	d
GDK_eabovedot	stubs/gdkstub.c	3389;"	d
GDK_eacute	stubs/gdkstub.c	2999;"	d
GDK_ecaron	stubs/gdkstub.c	3206;"	d
GDK_ecircumflex	stubs/gdkstub.c	3002;"	d
GDK_ediaeresis	stubs/gdkstub.c	3005;"	d
GDK_egrave	stubs/gdkstub.c	2996;"	d
GDK_ellipsis	stubs/gdkstub.c	4568;"	d
GDK_em3space	stubs/gdkstub.c	4541;"	d
GDK_em4space	stubs/gdkstub.c	4544;"	d
GDK_emacron	stubs/gdkstub.c	3338;"	d
GDK_emdash	stubs/gdkstub.c	4559;"	d
GDK_emfilledcircle	stubs/gdkstub.c	4685;"	d
GDK_emfilledrect	stubs/gdkstub.c	4688;"	d
GDK_emopencircle	stubs/gdkstub.c	4643;"	d
GDK_emopenrectangle	stubs/gdkstub.c	4646;"	d
GDK_emspace	stubs/gdkstub.c	4535;"	d
GDK_endash	stubs/gdkstub.c	4562;"	d
GDK_enfilledcircbullet	stubs/gdkstub.c	4709;"	d
GDK_enfilledsqbullet	stubs/gdkstub.c	4712;"	d
GDK_eng	stubs/gdkstub.c	3350;"	d
GDK_enopencircbullet	stubs/gdkstub.c	4691;"	d
GDK_enopensquarebullet	stubs/gdkstub.c	4694;"	d
GDK_enspace	stubs/gdkstub.c	4538;"	d
GDK_eogonek	stubs/gdkstub.c	3203;"	d
GDK_equal	stubs/gdkstub.c	2573;"	d
GDK_eth	stubs/gdkstub.c	3020;"	d
GDK_exclam	stubs/gdkstub.c	2486;"	d
GDK_exclamdown	stubs/gdkstub.c	2777;"	d
GDK_f	stubs/gdkstub.c	2699;"	d
GDK_femalesymbol	stubs/gdkstub.c	4760;"	d
GDK_ff	stubs/gdkstub.c	4475;"	d
GDK_figdash	stubs/gdkstub.c	4601;"	d
GDK_filledlefttribullet	stubs/gdkstub.c	4679;"	d
GDK_filledrectbullet	stubs/gdkstub.c	4676;"	d
GDK_filledrighttribullet	stubs/gdkstub.c	4682;"	d
GDK_filledtribulletdown	stubs/gdkstub.c	4718;"	d
GDK_filledtribulletup	stubs/gdkstub.c	4715;"	d
GDK_fiveeighths	stubs/gdkstub.c	4622;"	d
GDK_fivesixths	stubs/gdkstub.c	4595;"	d
GDK_fourfifths	stubs/gdkstub.c	4589;"	d
GDK_function	stubs/gdkstub.c	4448;"	d
GDK_g	stubs/gdkstub.c	2702;"	d
GDK_gabovedot	stubs/gdkstub.c	3293;"	d
GDK_gbreve	stubs/gdkstub.c	3263;"	d
GDK_gcedilla	stubs/gdkstub.c	3341;"	d
GDK_gcircumflex	stubs/gdkstub.c	3296;"	d
GDK_grave	stubs/gdkstub.c	2678;"	d
GDK_greater	stubs/gdkstub.c	2576;"	d
GDK_greaterthanequal	stubs/gdkstub.c	4391;"	d
GDK_guillemotleft	stubs/gdkstub.c	2807;"	d
GDK_guillemotright	stubs/gdkstub.c	2855;"	d
GDK_h	stubs/gdkstub.c	2705;"	d
GDK_hairspace	stubs/gdkstub.c	4556;"	d
GDK_hcircumflex	stubs/gdkstub.c	3257;"	d
GDK_heart	stubs/gdkstub.c	4733;"	d
GDK_hebrew_aleph	stubs/gdkstub.c	4844;"	d
GDK_hebrew_ayin	stubs/gdkstub.c	4919;"	d
GDK_hebrew_bet	stubs/gdkstub.c	4847;"	d
GDK_hebrew_beth	stubs/gdkstub.c	4850;"	d
GDK_hebrew_chet	stubs/gdkstub.c	4877;"	d
GDK_hebrew_dalet	stubs/gdkstub.c	4859;"	d
GDK_hebrew_daleth	stubs/gdkstub.c	4862;"	d
GDK_hebrew_doublelowline	stubs/gdkstub.c	4841;"	d
GDK_hebrew_finalkaph	stubs/gdkstub.c	4892;"	d
GDK_hebrew_finalmem	stubs/gdkstub.c	4901;"	d
GDK_hebrew_finalnun	stubs/gdkstub.c	4907;"	d
GDK_hebrew_finalpe	stubs/gdkstub.c	4922;"	d
GDK_hebrew_finalzade	stubs/gdkstub.c	4928;"	d
GDK_hebrew_finalzadi	stubs/gdkstub.c	4931;"	d
GDK_hebrew_gimel	stubs/gdkstub.c	4853;"	d
GDK_hebrew_gimmel	stubs/gdkstub.c	4856;"	d
GDK_hebrew_he	stubs/gdkstub.c	4865;"	d
GDK_hebrew_het	stubs/gdkstub.c	4880;"	d
GDK_hebrew_kaph	stubs/gdkstub.c	4895;"	d
GDK_hebrew_kuf	stubs/gdkstub.c	4943;"	d
GDK_hebrew_lamed	stubs/gdkstub.c	4898;"	d
GDK_hebrew_mem	stubs/gdkstub.c	4904;"	d
GDK_hebrew_nun	stubs/gdkstub.c	4910;"	d
GDK_hebrew_pe	stubs/gdkstub.c	4925;"	d
GDK_hebrew_qoph	stubs/gdkstub.c	4940;"	d
GDK_hebrew_resh	stubs/gdkstub.c	4946;"	d
GDK_hebrew_samech	stubs/gdkstub.c	4913;"	d
GDK_hebrew_samekh	stubs/gdkstub.c	4916;"	d
GDK_hebrew_shin	stubs/gdkstub.c	4949;"	d
GDK_hebrew_taf	stubs/gdkstub.c	4955;"	d
GDK_hebrew_taw	stubs/gdkstub.c	4952;"	d
GDK_hebrew_tet	stubs/gdkstub.c	4883;"	d
GDK_hebrew_teth	stubs/gdkstub.c	4886;"	d
GDK_hebrew_waw	stubs/gdkstub.c	4868;"	d
GDK_hebrew_yod	stubs/gdkstub.c	4889;"	d
GDK_hebrew_zade	stubs/gdkstub.c	4934;"	d
GDK_hebrew_zadi	stubs/gdkstub.c	4937;"	d
GDK_hebrew_zain	stubs/gdkstub.c	4871;"	d
GDK_hebrew_zayin	stubs/gdkstub.c	4874;"	d
GDK_hexagram	stubs/gdkstub.c	4673;"	d
GDK_horizconnector	stubs/gdkstub.c	4322;"	d
GDK_horizlinescan1	stubs/gdkstub.c	4505;"	d
GDK_horizlinescan3	stubs/gdkstub.c	4508;"	d
GDK_horizlinescan5	stubs/gdkstub.c	4511;"	d
GDK_horizlinescan7	stubs/gdkstub.c	4514;"	d
GDK_horizlinescan9	stubs/gdkstub.c	4517;"	d
GDK_hstroke	stubs/gdkstub.c	3254;"	d
GDK_ht	stubs/gdkstub.c	4472;"	d
GDK_hyphen	stubs/gdkstub.c	2813;"	d
GDK_i	stubs/gdkstub.c	2708;"	d
GDK_iacute	stubs/gdkstub.c	3011;"	d
GDK_icircumflex	stubs/gdkstub.c	3014;"	d
GDK_identical	stubs/gdkstub.c	4421;"	d
GDK_idiaeresis	stubs/gdkstub.c	3017;"	d
GDK_idotless	stubs/gdkstub.c	3260;"	d
GDK_ifonlyif	stubs/gdkstub.c	4415;"	d
GDK_igrave	stubs/gdkstub.c	3008;"	d
GDK_imacron	stubs/gdkstub.c	3392;"	d
GDK_implies	stubs/gdkstub.c	4418;"	d
GDK_includedin	stubs/gdkstub.c	4427;"	d
GDK_includes	stubs/gdkstub.c	4430;"	d
GDK_infinity	stubs/gdkstub.c	4403;"	d
GDK_integral	stubs/gdkstub.c	4394;"	d
GDK_intersection	stubs/gdkstub.c	4433;"	d
GDK_iogonek	stubs/gdkstub.c	3386;"	d
GDK_itilde	stubs/gdkstub.c	3332;"	d
GDK_j	stubs/gdkstub.c	2711;"	d
GDK_jcircumflex	stubs/gdkstub.c	3266;"	d
GDK_jot	stubs/gdkstub.c	4811;"	d
GDK_k	stubs/gdkstub.c	2714;"	d
GDK_kana_A	stubs/gdkstub.c	3470;"	d
GDK_kana_CHI	stubs/gdkstub.c	3518;"	d
GDK_kana_E	stubs/gdkstub.c	3479;"	d
GDK_kana_FU	stubs/gdkstub.c	3557;"	d
GDK_kana_HA	stubs/gdkstub.c	3551;"	d
GDK_kana_HE	stubs/gdkstub.c	3563;"	d
GDK_kana_HI	stubs/gdkstub.c	3554;"	d
GDK_kana_HO	stubs/gdkstub.c	3566;"	d
GDK_kana_HU	stubs/gdkstub.c	3560;"	d
GDK_kana_I	stubs/gdkstub.c	3473;"	d
GDK_kana_KA	stubs/gdkstub.c	3485;"	d
GDK_kana_KE	stubs/gdkstub.c	3494;"	d
GDK_kana_KI	stubs/gdkstub.c	3488;"	d
GDK_kana_KO	stubs/gdkstub.c	3497;"	d
GDK_kana_KU	stubs/gdkstub.c	3491;"	d
GDK_kana_MA	stubs/gdkstub.c	3569;"	d
GDK_kana_ME	stubs/gdkstub.c	3578;"	d
GDK_kana_MI	stubs/gdkstub.c	3572;"	d
GDK_kana_MO	stubs/gdkstub.c	3581;"	d
GDK_kana_MU	stubs/gdkstub.c	3575;"	d
GDK_kana_N	stubs/gdkstub.c	3611;"	d
GDK_kana_NA	stubs/gdkstub.c	3536;"	d
GDK_kana_NE	stubs/gdkstub.c	3545;"	d
GDK_kana_NI	stubs/gdkstub.c	3539;"	d
GDK_kana_NO	stubs/gdkstub.c	3548;"	d
GDK_kana_NU	stubs/gdkstub.c	3542;"	d
GDK_kana_O	stubs/gdkstub.c	3482;"	d
GDK_kana_RA	stubs/gdkstub.c	3593;"	d
GDK_kana_RE	stubs/gdkstub.c	3602;"	d
GDK_kana_RI	stubs/gdkstub.c	3596;"	d
GDK_kana_RO	stubs/gdkstub.c	3605;"	d
GDK_kana_RU	stubs/gdkstub.c	3599;"	d
GDK_kana_SA	stubs/gdkstub.c	3500;"	d
GDK_kana_SE	stubs/gdkstub.c	3509;"	d
GDK_kana_SHI	stubs/gdkstub.c	3503;"	d
GDK_kana_SO	stubs/gdkstub.c	3512;"	d
GDK_kana_SU	stubs/gdkstub.c	3506;"	d
GDK_kana_TA	stubs/gdkstub.c	3515;"	d
GDK_kana_TE	stubs/gdkstub.c	3530;"	d
GDK_kana_TI	stubs/gdkstub.c	3521;"	d
GDK_kana_TO	stubs/gdkstub.c	3533;"	d
GDK_kana_TSU	stubs/gdkstub.c	3524;"	d
GDK_kana_TU	stubs/gdkstub.c	3527;"	d
GDK_kana_U	stubs/gdkstub.c	3476;"	d
GDK_kana_WA	stubs/gdkstub.c	3608;"	d
GDK_kana_WO	stubs/gdkstub.c	3434;"	d
GDK_kana_YA	stubs/gdkstub.c	3584;"	d
GDK_kana_YO	stubs/gdkstub.c	3590;"	d
GDK_kana_YU	stubs/gdkstub.c	3587;"	d
GDK_kana_a	stubs/gdkstub.c	3437;"	d
GDK_kana_closingbracket	stubs/gdkstub.c	3422;"	d
GDK_kana_comma	stubs/gdkstub.c	3425;"	d
GDK_kana_conjunctive	stubs/gdkstub.c	3428;"	d
GDK_kana_e	stubs/gdkstub.c	3446;"	d
GDK_kana_fullstop	stubs/gdkstub.c	3416;"	d
GDK_kana_i	stubs/gdkstub.c	3440;"	d
GDK_kana_middledot	stubs/gdkstub.c	3431;"	d
GDK_kana_o	stubs/gdkstub.c	3449;"	d
GDK_kana_openingbracket	stubs/gdkstub.c	3419;"	d
GDK_kana_switch	stubs/gdkstub.c	3620;"	d
GDK_kana_tsu	stubs/gdkstub.c	3461;"	d
GDK_kana_tu	stubs/gdkstub.c	3464;"	d
GDK_kana_u	stubs/gdkstub.c	3443;"	d
GDK_kana_ya	stubs/gdkstub.c	3452;"	d
GDK_kana_yo	stubs/gdkstub.c	3458;"	d
GDK_kana_yu	stubs/gdkstub.c	3455;"	d
GDK_kappa	stubs/gdkstub.c	3308;"	d
GDK_kcedilla	stubs/gdkstub.c	3401;"	d
GDK_kra	stubs/gdkstub.c	3305;"	d
GDK_l	stubs/gdkstub.c	2717;"	d
GDK_lacute	stubs/gdkstub.c	3194;"	d
GDK_latincross	stubs/gdkstub.c	4670;"	d
GDK_lcaron	stubs/gdkstub.c	3110;"	d
GDK_lcedilla	stubs/gdkstub.c	3335;"	d
GDK_leftanglebracket	stubs/gdkstub.c	4604;"	d
GDK_leftarrow	stubs/gdkstub.c	4451;"	d
GDK_leftcaret	stubs/gdkstub.c	4784;"	d
GDK_leftdoublequotemark	stubs/gdkstub.c	4655;"	d
GDK_leftmiddlecurlybrace	stubs/gdkstub.c	4358;"	d
GDK_leftopentriangle	stubs/gdkstub.c	4637;"	d
GDK_leftpointer	stubs/gdkstub.c	4721;"	d
GDK_leftradical	stubs/gdkstub.c	4316;"	d
GDK_leftshoe	stubs/gdkstub.c	4832;"	d
GDK_leftsinglequotemark	stubs/gdkstub.c	4649;"	d
GDK_leftt	stubs/gdkstub.c	4520;"	d
GDK_lefttack	stubs/gdkstub.c	4835;"	d
GDK_less	stubs/gdkstub.c	2570;"	d
GDK_lessthanequal	stubs/gdkstub.c	4385;"	d
GDK_lf	stubs/gdkstub.c	4481;"	d
GDK_logicaland	stubs/gdkstub.c	4439;"	d
GDK_logicalor	stubs/gdkstub.c	4442;"	d
GDK_lowleftcorner	stubs/gdkstub.c	4499;"	d
GDK_lowrightcorner	stubs/gdkstub.c	4490;"	d
GDK_lstroke	stubs/gdkstub.c	3107;"	d
GDK_m	stubs/gdkstub.c	2720;"	d
GDK_macron	stubs/gdkstub.c	2819;"	d
GDK_malesymbol	stubs/gdkstub.c	4757;"	d
GDK_maltesecross	stubs/gdkstub.c	4736;"	d
GDK_marker	stubs/gdkstub.c	4613;"	d
GDK_masculine	stubs/gdkstub.c	2852;"	d
GDK_minus	stubs/gdkstub.c	2525;"	d
GDK_minutes	stubs/gdkstub.c	4664;"	d
GDK_mu	stubs/gdkstub.c	2837;"	d
GDK_multiply	stubs/gdkstub.c	2942;"	d
GDK_musicalflat	stubs/gdkstub.c	4754;"	d
GDK_musicalsharp	stubs/gdkstub.c	4751;"	d
GDK_n	stubs/gdkstub.c	2723;"	d
GDK_nabla	stubs/gdkstub.c	4406;"	d
GDK_nacute	stubs/gdkstub.c	3215;"	d
GDK_ncaron	stubs/gdkstub.c	3218;"	d
GDK_ncedilla	stubs/gdkstub.c	3395;"	d
GDK_nl	stubs/gdkstub.c	4484;"	d
GDK_nobreakspace	stubs/gdkstub.c	2774;"	d
GDK_notequal	stubs/gdkstub.c	4388;"	d
GDK_notsign	stubs/gdkstub.c	2810;"	d
GDK_ntilde	stubs/gdkstub.c	3023;"	d
GDK_numbersign	stubs/gdkstub.c	2492;"	d
GDK_numerosign	stubs/gdkstub.c	3836;"	d
GDK_o	stubs/gdkstub.c	2726;"	d
GDK_oacute	stubs/gdkstub.c	3029;"	d
GDK_ocircumflex	stubs/gdkstub.c	3032;"	d
GDK_odiaeresis	stubs/gdkstub.c	3038;"	d
GDK_odoubleacute	stubs/gdkstub.c	3221;"	d
GDK_ogonek	stubs/gdkstub.c	3104;"	d
GDK_ograve	stubs/gdkstub.c	3026;"	d
GDK_omacron	stubs/gdkstub.c	3398;"	d
GDK_oneeighth	stubs/gdkstub.c	4616;"	d
GDK_onefifth	stubs/gdkstub.c	4580;"	d
GDK_onehalf	stubs/gdkstub.c	2861;"	d
GDK_onequarter	stubs/gdkstub.c	2858;"	d
GDK_onesixth	stubs/gdkstub.c	4592;"	d
GDK_onesuperior	stubs/gdkstub.c	2849;"	d
GDK_onethird	stubs/gdkstub.c	4574;"	d
GDK_openrectbullet	stubs/gdkstub.c	4697;"	d
GDK_openstar	stubs/gdkstub.c	4706;"	d
GDK_opentribulletdown	stubs/gdkstub.c	4703;"	d
GDK_opentribulletup	stubs/gdkstub.c	4700;"	d
GDK_ordfeminine	stubs/gdkstub.c	2804;"	d
GDK_oslash	stubs/gdkstub.c	3044;"	d
GDK_otilde	stubs/gdkstub.c	3035;"	d
GDK_overbar	stubs/gdkstub.c	4796;"	d
GDK_overline	stubs/gdkstub.c	3413;"	d
GDK_p	stubs/gdkstub.c	2729;"	d
GDK_paragraph	stubs/gdkstub.c	2840;"	d
GDK_parenleft	stubs/gdkstub.c	2510;"	d
GDK_parenright	stubs/gdkstub.c	2513;"	d
GDK_partialderivative	stubs/gdkstub.c	4445;"	d
GDK_percent	stubs/gdkstub.c	2498;"	d
GDK_period	stubs/gdkstub.c	2528;"	d
GDK_periodcentered	stubs/gdkstub.c	2843;"	d
GDK_phonographcopyright	stubs/gdkstub.c	4769;"	d
GDK_plus	stubs/gdkstub.c	2519;"	d
GDK_plusminus	stubs/gdkstub.c	2825;"	d
GDK_prescription	stubs/gdkstub.c	4661;"	d
GDK_prolongedsound	stubs/gdkstub.c	3467;"	d
GDK_punctspace	stubs/gdkstub.c	4550;"	d
GDK_q	stubs/gdkstub.c	2732;"	d
GDK_quad	stubs/gdkstub.c	4814;"	d
GDK_question	stubs/gdkstub.c	2579;"	d
GDK_questiondown	stubs/gdkstub.c	2867;"	d
GDK_quotedbl	stubs/gdkstub.c	2489;"	d
GDK_quoteleft	stubs/gdkstub.c	2681;"	d
GDK_quoteright	stubs/gdkstub.c	2507;"	d
GDK_r	stubs/gdkstub.c	2735;"	d
GDK_racute	stubs/gdkstub.c	3188;"	d
GDK_radical	stubs/gdkstub.c	4424;"	d
GDK_rcaron	stubs/gdkstub.c	3227;"	d
GDK_rcedilla	stubs/gdkstub.c	3329;"	d
GDK_registered	stubs/gdkstub.c	2816;"	d
GDK_rightanglebracket	stubs/gdkstub.c	4610;"	d
GDK_rightarrow	stubs/gdkstub.c	4457;"	d
GDK_rightcaret	stubs/gdkstub.c	4787;"	d
GDK_rightdoublequotemark	stubs/gdkstub.c	4658;"	d
GDK_rightmiddlecurlybrace	stubs/gdkstub.c	4361;"	d
GDK_rightmiddlesummation	stubs/gdkstub.c	4382;"	d
GDK_rightopentriangle	stubs/gdkstub.c	4640;"	d
GDK_rightpointer	stubs/gdkstub.c	4724;"	d
GDK_rightshoe	stubs/gdkstub.c	4829;"	d
GDK_rightsinglequotemark	stubs/gdkstub.c	4652;"	d
GDK_rightt	stubs/gdkstub.c	4523;"	d
GDK_righttack	stubs/gdkstub.c	4838;"	d
GDK_s	stubs/gdkstub.c	2738;"	d
GDK_sacute	stubs/gdkstub.c	3113;"	d
GDK_scaron	stubs/gdkstub.c	3119;"	d
GDK_scedilla	stubs/gdkstub.c	3122;"	d
GDK_scircumflex	stubs/gdkstub.c	3302;"	d
GDK_script_switch	stubs/gdkstub.c	1754;"	d
GDK_seconds	stubs/gdkstub.c	4667;"	d
GDK_section	stubs/gdkstub.c	2795;"	d
GDK_semicolon	stubs/gdkstub.c	2567;"	d
GDK_semivoicedsound	stubs/gdkstub.c	3617;"	d
GDK_seveneighths	stubs/gdkstub.c	4625;"	d
GDK_signaturemark	stubs/gdkstub.c	4631;"	d
GDK_signifblank	stubs/gdkstub.c	4565;"	d
GDK_similarequal	stubs/gdkstub.c	4412;"	d
GDK_singlelowquotemark	stubs/gdkstub.c	4775;"	d
GDK_slash	stubs/gdkstub.c	2531;"	d
GDK_soliddiamond	stubs/gdkstub.c	4466;"	d
GDK_space	stubs/gdkstub.c	2483;"	d
GDK_ssharp	stubs/gdkstub.c	2969;"	d
GDK_sterling	stubs/gdkstub.c	2783;"	d
GDK_t	stubs/gdkstub.c	2741;"	d
GDK_tcaron	stubs/gdkstub.c	3125;"	d
GDK_tcedilla	stubs/gdkstub.c	3233;"	d
GDK_telephone	stubs/gdkstub.c	4763;"	d
GDK_telephonerecorder	stubs/gdkstub.c	4766;"	d
GDK_therefore	stubs/gdkstub.c	4397;"	d
GDK_thinspace	stubs/gdkstub.c	4553;"	d
GDK_thorn	stubs/gdkstub.c	3062;"	d
GDK_threeeighths	stubs/gdkstub.c	4619;"	d
GDK_threefifths	stubs/gdkstub.c	4586;"	d
GDK_threequarters	stubs/gdkstub.c	2864;"	d
GDK_threesuperior	stubs/gdkstub.c	2831;"	d
GDK_topintegral	stubs/gdkstub.c	4325;"	d
GDK_topleftparens	stubs/gdkstub.c	4346;"	d
GDK_topleftradical	stubs/gdkstub.c	4319;"	d
GDK_topleftsqbracket	stubs/gdkstub.c	4334;"	d
GDK_topleftsummation	stubs/gdkstub.c	4364;"	d
GDK_toprightparens	stubs/gdkstub.c	4352;"	d
GDK_toprightsqbracket	stubs/gdkstub.c	4340;"	d
GDK_toprightsummation	stubs/gdkstub.c	4376;"	d
GDK_topt	stubs/gdkstub.c	4529;"	d
GDK_topvertsummationconnector	stubs/gdkstub.c	4370;"	d
GDK_trademark	stubs/gdkstub.c	4628;"	d
GDK_trademarkincircle	stubs/gdkstub.c	4634;"	d
GDK_tslash	stubs/gdkstub.c	3344;"	d
GDK_twofifths	stubs/gdkstub.c	4583;"	d
GDK_twosuperior	stubs/gdkstub.c	2828;"	d
GDK_twothirds	stubs/gdkstub.c	4577;"	d
GDK_u	stubs/gdkstub.c	2744;"	d
GDK_uacute	stubs/gdkstub.c	3050;"	d
GDK_ubreve	stubs/gdkstub.c	3299;"	d
GDK_ucircumflex	stubs/gdkstub.c	3053;"	d
GDK_udiaeresis	stubs/gdkstub.c	3056;"	d
GDK_udoubleacute	stubs/gdkstub.c	3224;"	d
GDK_ugrave	stubs/gdkstub.c	3047;"	d
GDK_umacron	stubs/gdkstub.c	3410;"	d
GDK_underbar	stubs/gdkstub.c	4808;"	d
GDK_underscore	stubs/gdkstub.c	2675;"	d
GDK_union	stubs/gdkstub.c	4436;"	d
GDK_uogonek	stubs/gdkstub.c	3404;"	d
GDK_uparrow	stubs/gdkstub.c	4454;"	d
GDK_upcaret	stubs/gdkstub.c	4793;"	d
GDK_upleftcorner	stubs/gdkstub.c	4496;"	d
GDK_uprightcorner	stubs/gdkstub.c	4493;"	d
GDK_upshoe	stubs/gdkstub.c	4802;"	d
GDK_upstile	stubs/gdkstub.c	4823;"	d
GDK_uptack	stubs/gdkstub.c	4817;"	d
GDK_uring	stubs/gdkstub.c	3230;"	d
GDK_utilde	stubs/gdkstub.c	3407;"	d
GDK_v	stubs/gdkstub.c	2747;"	d
GDK_variation	stubs/gdkstub.c	4400;"	d
GDK_vertbar	stubs/gdkstub.c	4532;"	d
GDK_vertconnector	stubs/gdkstub.c	4331;"	d
GDK_voicedsound	stubs/gdkstub.c	3614;"	d
GDK_vt	stubs/gdkstub.c	4487;"	d
GDK_w	stubs/gdkstub.c	2750;"	d
GDK_x	stubs/gdkstub.c	2753;"	d
GDK_y	stubs/gdkstub.c	2756;"	d
GDK_yacute	stubs/gdkstub.c	3059;"	d
GDK_ydiaeresis	stubs/gdkstub.c	3065;"	d
GDK_yen	stubs/gdkstub.c	2789;"	d
GDK_z	stubs/gdkstub.c	2759;"	d
GDK_zabovedot	stubs/gdkstub.c	3137;"	d
GDK_zacute	stubs/gdkstub.c	3128;"	d
GDK_zcaron	stubs/gdkstub.c	3134;"	d
GDate	stubs/glibstub.c	/^typedef struct _GDate GDate;$/;"	t
GDate	stubs/glibstub.c	/^} GDate;$/;"	t
GDateDMY	stubs/glibstub.c	/^} GDateDMY;$/;"	v
GDateDay	stubs/glibstub.c	/^typedef guint8  GDateDay;   \/\* day of the month \*\/$/;"	t
GDateMonth	stubs/glibstub.c	/^} GDateMonth;$/;"	v
GDateWeekday	stubs/glibstub.c	/^} GDateWeekday;$/;"	v
GDateYear	stubs/glibstub.c	/^typedef guint16 GDateYear;$/;"	t
GDebugKey	stubs/glibstub.c	/^} GDebugKey;$/;"	t
GErrorType	stubs/glibstub.c	/^} GErrorType;$/;"	v
GHook	stubs/glibstub.c	/^} GHook;$/;"	t
GHookFlagMask	stubs/glibstub.c	/^} GHookFlagMask;$/;"	v
GHookList	stubs/glibstub.c	/^} GHookList;$/;"	t
GINT16_FROM_BE	stubs/glibstub.c	295;"	d
GINT16_FROM_LE	stubs/glibstub.c	289;"	d
GINT16_TO_BE	stubs/glibstub.c	352;"	d
GINT16_TO_LE	stubs/glibstub.c	346;"	d
GINT32_FROM_BE	stubs/glibstub.c	307;"	d
GINT32_FROM_LE	stubs/glibstub.c	301;"	d
GINT32_TO_BE	stubs/glibstub.c	364;"	d
GINT32_TO_LE	stubs/glibstub.c	358;"	d
GINT64_FROM_BE	stubs/glibstub.c	319;"	d
GINT64_FROM_LE	stubs/glibstub.c	313;"	d
GINT64_TO_BE	stubs/glibstub.c	376;"	d
GINT64_TO_LE	stubs/glibstub.c	370;"	d
GINT_FROM_BE	stubs/glibstub.c	340;"	d
GINT_TO_BE	stubs/glibstub.c	397;"	d
GINT_TO_POINTER	stubs/glibstub.c	86;"	d
GLIB_CHECK_VERSION	stubs/glibstub.c	430;"	d
GLONG_FROM_BE	stubs/glibstub.c	331;"	d
GLONG_FROM_LE	stubs/glibstub.c	325;"	d
GLONG_TO_BE	stubs/glibstub.c	388;"	d
GLONG_TO_LE	stubs/glibstub.c	382;"	d
GList	stubs/glibstub.c	/^} GList;$/;"	t
GList	stubs/gtkstub.c	1657;"	struct:GtkCListClass
GLogLevelFlags	stubs/glibstub.c	/^} GLogLevelFlags;$/;"	v
GMON_MAGIC	stubs/unixstub.c	3719;"	d
GMON_PROF_BUSY	stubs/unixstub.c	3595;"	d
GMON_PROF_ERROR	stubs/unixstub.c	3598;"	d
GMON_PROF_OFF	stubs/unixstub.c	3601;"	d
GMON_PROF_ON	stubs/unixstub.c	3607;"	d
GMON_Record_Tag	stubs/unixstub.c	/^  } GMON_Record_Tag;$/;"	v
GMON_Record_Tag	stubs/unixstub.c	/^  } GMON_Record_Tag;$/;"	v
GMON_Record_Tag	stubs/unixstub.c	/^  } GMON_Record_Tag;$/;"	v
GMON_Record_Tag	stubs/unixstub.c	/^  } GMON_Record_Tag;$/;"	v
GMON_SHOBJ_VERSION	stubs/unixstub.c	3732;"	d
GMON_TAG_BB_COUNT	stubs/unixstub.c	3728;"	enum:GMON_Record_Tag
GMON_TAG_BB_COUNT	stubs/unixstub.c	3741;"	enum:GMON_Record_Tag
GMON_TAG_BB_COUNT	stubs/unixstub.c	3750;"	enum:GMON_Record_Tag
GMON_TAG_BB_COUNT	stubs/unixstub.c	3759;"	enum:GMON_Record_Tag
GMON_TAG_CG_ARC	stubs/unixstub.c	3728;"	enum:GMON_Record_Tag
GMON_TAG_CG_ARC	stubs/unixstub.c	3741;"	enum:GMON_Record_Tag
GMON_TAG_CG_ARC	stubs/unixstub.c	3750;"	enum:GMON_Record_Tag
GMON_TAG_CG_ARC	stubs/unixstub.c	3759;"	enum:GMON_Record_Tag
GMON_TAG_TIME_HIST	stubs/unixstub.c	3728;"	enum:GMON_Record_Tag
GMON_TAG_TIME_HIST	stubs/unixstub.c	3741;"	enum:GMON_Record_Tag
GMON_TAG_TIME_HIST	stubs/unixstub.c	3750;"	enum:GMON_Record_Tag
GMON_TAG_TIME_HIST	stubs/unixstub.c	3759;"	enum:GMON_Record_Tag
GMON_VERSION	stubs/unixstub.c	3762;"	d
GMT_BOT	stubs/unixstub.c	4040;"	d
GMT_DR_OPEN	stubs/unixstub.c	4045;"	d
GMT_D_1600	stubs/unixstub.c	4049;"	d
GMT_D_6250	stubs/unixstub.c	4052;"	d
GMT_D_800	stubs/unixstub.c	4055;"	d
GMT_EOD	stubs/unixstub.c	4060;"	d
GMT_EOF	stubs/unixstub.c	4068;"	d
GMT_EOT	stubs/unixstub.c	4071;"	d
GMT_IM_REP_EN	stubs/unixstub.c	4075;"	d
GMT_ONLINE	stubs/unixstub.c	4080;"	d
GMT_SM	stubs/unixstub.c	4083;"	d
GMT_WR_PROT	stubs/unixstub.c	4086;"	d
GNode	stubs/glibstub.c	/^} GNode;$/;"	t
GPOINTER_TO_INT	stubs/glibstub.c	92;"	d
GPOINTER_TO_UINT	stubs/glibstub.c	95;"	d
GPROF_COUNT	stubs/unixstub.c	3610;"	d
GPROF_FROMS	stubs/unixstub.c	3613;"	d
GPROF_GMONPARAM	stubs/unixstub.c	3616;"	d
GPROF_STATE	stubs/unixstub.c	3622;"	d
GPROF_TOS	stubs/unixstub.c	3625;"	d
GPrintFunc	stubs/glibstub.c	/^typedef void(\*GPrintFunc) (const gchar \*string)$/;"	f
GPtrArray	stubs/glibstub.c	/^} GPtrArray;$/;"	t
GQuark	stubs/glibstub.c	/^typedef guint32 GQuark;$/;"	t
GRPQUOTA	stubs/unixstub.c	4780;"	d
GS	stubs/unixstub.c	5037;"	d
GSList	stubs/glibstub.c	/^} GSList;$/;"	t
GScanner	stubs/glibstub.c	/^} GScanner;$/;"	t
GScannerConfig	stubs/glibstub.c	/^} GScannerConfig;$/;"	t
GString	stubs/glibstub.c	/^} GString;$/;"	t
GTK_ACCEL_LABEL	stubs/gtkstub.c	185;"	d
GTK_ACCEL_LABEL_CLASS	stubs/gtkstub.c	188;"	d
GTK_ACCEL_LOCKED	stubs/gtkstub.c	28;"	enum:GtkAccelFlags
GTK_ACCEL_MASK	stubs/gtkstub.c	28;"	enum:GtkAccelFlags
GTK_ACCEL_SIGNAL_VISIBLE	stubs/gtkstub.c	28;"	enum:GtkAccelFlags
GTK_ACCEL_VISIBLE	stubs/gtkstub.c	28;"	enum:GtkAccelFlags
GTK_ADJUSTMENT	stubs/gtkstub.c	257;"	d	class:h
GTK_ADJUSTMENT_CLASS	stubs/gtkstub.c	260;"	d	class:h
GTK_ALIGNMENT	stubs/gtkstub.c	331;"	d	class:h
GTK_ALIGNMENT_CLASS	stubs/gtkstub.c	334;"	d	class:h
GTK_ANCHOR_CENTER	stubs/gtkstub.c	8347;"	enum:GtkAnchorType
GTK_ANCHOR_E	stubs/gtkstub.c	8347;"	enum:GtkAnchorType
GTK_ANCHOR_EAST	stubs/gtkstub.c	8347;"	enum:GtkAnchorType
GTK_ANCHOR_EAST	stubs/gtkstub.c	8347;"	enum:GtkAnchorType
GTK_ANCHOR_N	stubs/gtkstub.c	8347;"	enum:GtkAnchorType
GTK_ANCHOR_NE	stubs/gtkstub.c	8347;"	enum:GtkAnchorType
GTK_ANCHOR_NORTH	stubs/gtkstub.c	8347;"	enum:GtkAnchorType
GTK_ANCHOR_NORTH	stubs/gtkstub.c	8347;"	enum:GtkAnchorType
GTK_ANCHOR_NORTH_EAST	stubs/gtkstub.c	8347;"	enum:GtkAnchorType
GTK_ANCHOR_NORTH_EAST	stubs/gtkstub.c	8347;"	enum:GtkAnchorType
GTK_ANCHOR_NORTH_WEST	stubs/gtkstub.c	8347;"	enum:GtkAnchorType
GTK_ANCHOR_NORTH_WEST	stubs/gtkstub.c	8347;"	enum:GtkAnchorType
GTK_ANCHOR_NW	stubs/gtkstub.c	8347;"	enum:GtkAnchorType
GTK_ANCHOR_S	stubs/gtkstub.c	8347;"	enum:GtkAnchorType
GTK_ANCHOR_SE	stubs/gtkstub.c	8347;"	enum:GtkAnchorType
GTK_ANCHOR_SOUTH	stubs/gtkstub.c	8347;"	enum:GtkAnchorType
GTK_ANCHOR_SOUTH	stubs/gtkstub.c	8347;"	enum:GtkAnchorType
GTK_ANCHOR_SOUTH_EAST	stubs/gtkstub.c	8347;"	enum:GtkAnchorType
GTK_ANCHOR_SOUTH_EAST	stubs/gtkstub.c	8347;"	enum:GtkAnchorType
GTK_ANCHOR_SOUTH_WEST	stubs/gtkstub.c	8347;"	enum:GtkAnchorType
GTK_ANCHOR_SOUTH_WEST	stubs/gtkstub.c	8347;"	enum:GtkAnchorType
GTK_ANCHOR_SW	stubs/gtkstub.c	8347;"	enum:GtkAnchorType
GTK_ANCHOR_W	stubs/gtkstub.c	8347;"	enum:GtkAnchorType
GTK_ANCHOR_WEST	stubs/gtkstub.c	8347;"	enum:GtkAnchorType
GTK_ANCHOR_WEST	stubs/gtkstub.c	8347;"	enum:GtkAnchorType
GTK_APP_PAINTABLE	stubs/gtkstub.c	13462;"	enum:GtkWidgetFlags
GTK_ARG_CHILD_ARG	stubs/gtkstub.c	7884;"	enum:GtkArgFlags
GTK_ARG_CONSTRUCT	stubs/gtkstub.c	7884;"	enum:GtkArgFlags
GTK_ARG_CONSTRUCT_ONLY	stubs/gtkstub.c	7884;"	enum:GtkArgFlags
GTK_ARG_MASK	stubs/gtkstub.c	7884;"	enum:GtkArgFlags
GTK_ARG_READABLE	stubs/gtkstub.c	7884;"	enum:GtkArgFlags
GTK_ARG_READWRITE	stubs/gtkstub.c	7884;"	enum:GtkArgFlags
GTK_ARG_WRITABLE	stubs/gtkstub.c	7884;"	enum:GtkArgFlags
GTK_ARG_WRITABLE	stubs/gtkstub.c	7884;"	enum:GtkArgFlags
GTK_ARROW	stubs/gtkstub.c	483;"	d	class:h
GTK_ARROW_CLASS	stubs/gtkstub.c	486;"	d	class:h
GTK_ARROW_DOWN	stubs/gtkstub.c	4060;"	enum:GtkArrowType
GTK_ARROW_LEFT	stubs/gtkstub.c	4060;"	enum:GtkArrowType
GTK_ARROW_RIGHT	stubs/gtkstub.c	4060;"	enum:GtkArrowType
GTK_ARROW_UP	stubs/gtkstub.c	4060;"	enum:GtkArrowType
GTK_ASPECT_FRAME	stubs/gtkstub.c	538;"	d	class:h
GTK_ASPECT_FRAME_CLASS	stubs/gtkstub.c	541;"	d	class:h
GTK_BIN	stubs/gtkstub.c	856;"	d	class:h
GTK_BINARY_AGE	stubs/gtkstub.c	4432;"	d
GTK_BIN_CLASS	stubs/gtkstub.c	859;"	d	class:h
GTK_BOX	stubs/gtkstub.c	901;"	d	class:h
GTK_BOX_CLASS	stubs/gtkstub.c	904;"	d	class:h
GTK_BUTTON	stubs/gtkstub.c	1003;"	d	class:h
GTK_BUTTONBOX_DEFAULT	stubs/gtkstub.c	612;"	d	class:h
GTK_BUTTONBOX_DEFAULT_STYLE	stubs/gtkstub.c	4078;"	enum:GtkButtonBoxStyle
GTK_BUTTONBOX_EDGE	stubs/gtkstub.c	4078;"	enum:GtkButtonBoxStyle
GTK_BUTTONBOX_END	stubs/gtkstub.c	4078;"	enum:GtkButtonBoxStyle
GTK_BUTTONBOX_SPREAD	stubs/gtkstub.c	4078;"	enum:GtkButtonBoxStyle
GTK_BUTTONBOX_START	stubs/gtkstub.c	4078;"	enum:GtkButtonBoxStyle
GTK_BUTTON_BOX	stubs/gtkstub.c	598;"	d	class:h
GTK_BUTTON_BOX_CLASS	stubs/gtkstub.c	601;"	d	class:h
GTK_BUTTON_CLASS	stubs/gtkstub.c	1006;"	d	class:h
GTK_BUTTON_DRAGS	stubs/gtkstub.c	1422;"	enum:GtkButtonAction
GTK_BUTTON_EXPANDS	stubs/gtkstub.c	1422;"	enum:GtkButtonAction
GTK_BUTTON_IGNORED	stubs/gtkstub.c	1422;"	enum:GtkButtonAction
GTK_BUTTON_SELECTS	stubs/gtkstub.c	1422;"	enum:GtkButtonAction
GTK_CALENDAR	stubs/gtkstub.c	1103;"	d	class:h
GTK_CALENDAR_CLASS	stubs/gtkstub.c	1106;"	d	class:h
GTK_CALENDAR_NO_MONTH_CHANGE	stubs/gtkstub.c	1124;"	enum:GtkCalendarDisplayOptions
GTK_CALENDAR_SHOW_DAY_NAMES	stubs/gtkstub.c	1124;"	enum:GtkCalendarDisplayOptions
GTK_CALENDAR_SHOW_HEADING	stubs/gtkstub.c	1124;"	enum:GtkCalendarDisplayOptions
GTK_CALENDAR_SHOW_WEEK_NUMBERS	stubs/gtkstub.c	1124;"	enum:GtkCalendarDisplayOptions
GTK_CALENDAR_WEEK_START_MONDAY	stubs/gtkstub.c	1124;"	enum:GtkCalendarDisplayOptions
GTK_CAN_DEFAULT	stubs/gtkstub.c	13462;"	enum:GtkWidgetFlags
GTK_CAN_FOCUS	stubs/gtkstub.c	13462;"	enum:GtkWidgetFlags
GTK_CELL_EMPTY	stubs/gtkstub.c	1402;"	enum:GtkCellType
GTK_CELL_PIXMAP	stubs/gtkstub.c	1402;"	enum:GtkCellType
GTK_CELL_PIXMAP	stubs/gtkstub.c	1494;"	d
GTK_CELL_PIXTEXT	stubs/gtkstub.c	1402;"	enum:GtkCellType
GTK_CELL_PIXTEXT	stubs/gtkstub.c	1497;"	d
GTK_CELL_TEXT	stubs/gtkstub.c	1402;"	enum:GtkCellType
GTK_CELL_TEXT	stubs/gtkstub.c	1491;"	d
GTK_CELL_WIDGET	stubs/gtkstub.c	1402;"	enum:GtkCellType
GTK_CELL_WIDGET	stubs/gtkstub.c	1500;"	d
GTK_CENTIMETERS	stubs/gtkstub.c	4144;"	enum:GtkMetricType
GTK_CHECK_BUTTON	stubs/gtkstub.c	1247;"	d	class:h
GTK_CHECK_BUTTON_CLASS	stubs/gtkstub.c	1250;"	d	class:h
GTK_CHECK_CAST	stubs/gtkstub.c	12565;"	d
GTK_CHECK_CLASS_CAST	stubs/gtkstub.c	12568;"	d
GTK_CHECK_CLASS_TYPE	stubs/gtkstub.c	12580;"	d
GTK_CHECK_MENU_ITEM	stubs/gtkstub.c	1310;"	d	class:h
GTK_CHECK_MENU_ITEM_CLASS	stubs/gtkstub.c	1313;"	d	class:h
GTK_CHECK_TYPE	stubs/gtkstub.c	12574;"	d
GTK_CHECK_VERSION	stubs/gtkstub.c	4438;"	d
GTK_CLIST	stubs/gtkstub.c	1429;"	d
GTK_CLIST_ADD_MODE	stubs/gtkstub.c	1464;"	d
GTK_CLIST_AUTO_RESIZE_BLOCKED	stubs/gtkstub.c	1470;"	d
GTK_CLIST_AUTO_SORT	stubs/gtkstub.c	1467;"	d
GTK_CLIST_CHILD_HAS_FOCUS	stubs/gtkstub.c	1461;"	d
GTK_CLIST_CLASS	stubs/gtkstub.c	1432;"	d
GTK_CLIST_DRAG_AFTER	stubs/gtkstub.c	1412;"	enum:GtkCListDragPos
GTK_CLIST_DRAG_BEFORE	stubs/gtkstub.c	1412;"	enum:GtkCListDragPos
GTK_CLIST_DRAG_INTO	stubs/gtkstub.c	1412;"	enum:GtkCListDragPos
GTK_CLIST_DRAG_NONE	stubs/gtkstub.c	1412;"	enum:GtkCListDragPos
GTK_CLIST_DRAW_DRAG_LINE	stubs/gtkstub.c	1479;"	d
GTK_CLIST_DRAW_DRAG_RECT	stubs/gtkstub.c	1482;"	d
GTK_CLIST_FLAGS	stubs/gtkstub.c	1442;"	d
GTK_CLIST_IN_DRAG	stubs/gtkstub.c	1452;"	d
GTK_CLIST_REORDERABLE	stubs/gtkstub.c	1473;"	d
GTK_CLIST_ROW	stubs/gtkstub.c	1486;"	d
GTK_CLIST_ROW_HEIGHT_SET	stubs/gtkstub.c	1455;"	d
GTK_CLIST_SET_FLAG	stubs/gtkstub.c	1445;"	d
GTK_CLIST_SHOW_TITLES	stubs/gtkstub.c	1458;"	d
GTK_CLIST_UNSET_FLAG	stubs/gtkstub.c	1448;"	d
GTK_CLIST_USE_DRAG_ICONS	stubs/gtkstub.c	1476;"	d
GTK_COLOR_SELECTION	stubs/gtkstub.c	2324;"	d
GTK_COLOR_SELECTION_CLASS	stubs/gtkstub.c	2327;"	d
GTK_COLOR_SELECTION_DIALOG	stubs/gtkstub.c	2340;"	d
GTK_COLOR_SELECTION_DIALOG_CLASS	stubs/gtkstub.c	2343;"	d
GTK_COMBO	stubs/gtkstub.c	2468;"	d
GTK_COMBO_CLASS	stubs/gtkstub.c	2471;"	d
GTK_COMPOSITE_CHILD	stubs/gtkstub.c	13462;"	enum:GtkWidgetFlags
GTK_CONNECTED	stubs/gtkstub.c	7839;"	enum:GtkObjectFlags
GTK_CONSTRUCTED	stubs/gtkstub.c	7839;"	enum:GtkObjectFlags
GTK_CONTAINER	stubs/gtkstub.c	2607;"	d
GTK_CONTAINER_CLASS	stubs/gtkstub.c	2610;"	d
GTK_CONTAINER_RESIZE_PENDING	stubs/gtkstub.c	8860;"	d
GTK_CORNER_BOTTOM_LEFT	stubs/gtkstub.c	4160;"	enum:GtkCornerType
GTK_CORNER_BOTTOM_RIGHT	stubs/gtkstub.c	4160;"	enum:GtkCornerType
GTK_CORNER_TOP_LEFT	stubs/gtkstub.c	4160;"	enum:GtkCornerType
GTK_CORNER_TOP_RIGHT	stubs/gtkstub.c	4160;"	enum:GtkCornerType
GTK_CTREE	stubs/gtkstub.c	2883;"	d
GTK_CTREE_CLASS	stubs/gtkstub.c	2886;"	d
GTK_CTREE_EXPANDER_CIRCULAR	stubs/gtkstub.c	2937;"	enum:GtkCTreeExpanderStyle
GTK_CTREE_EXPANDER_NONE	stubs/gtkstub.c	2937;"	enum:GtkCTreeExpanderStyle
GTK_CTREE_EXPANDER_SQUARE	stubs/gtkstub.c	2937;"	enum:GtkCTreeExpanderStyle
GTK_CTREE_EXPANDER_TRIANGLE	stubs/gtkstub.c	2937;"	enum:GtkCTreeExpanderStyle
GTK_CTREE_EXPANSION_COLLAPSE	stubs/gtkstub.c	2949;"	enum:GtkCTreeExpansionType
GTK_CTREE_EXPANSION_COLLAPSE_RECURSIVE	stubs/gtkstub.c	2949;"	enum:GtkCTreeExpansionType
GTK_CTREE_EXPANSION_EXPAND	stubs/gtkstub.c	2949;"	enum:GtkCTreeExpansionType
GTK_CTREE_EXPANSION_EXPAND_RECURSIVE	stubs/gtkstub.c	2949;"	enum:GtkCTreeExpansionType
GTK_CTREE_EXPANSION_TOGGLE	stubs/gtkstub.c	2949;"	enum:GtkCTreeExpansionType
GTK_CTREE_EXPANSION_TOGGLE_RECURSIVE	stubs/gtkstub.c	2949;"	enum:GtkCTreeExpansionType
GTK_CTREE_FUNC	stubs/gtkstub.c	2908;"	d
GTK_CTREE_LINES_DOTTED	stubs/gtkstub.c	2927;"	enum:GtkCTreeLineStyle
GTK_CTREE_LINES_NONE	stubs/gtkstub.c	2927;"	enum:GtkCTreeLineStyle
GTK_CTREE_LINES_SOLID	stubs/gtkstub.c	2927;"	enum:GtkCTreeLineStyle
GTK_CTREE_LINES_TABBED	stubs/gtkstub.c	2927;"	enum:GtkCTreeLineStyle
GTK_CTREE_NODE	stubs/gtkstub.c	2899;"	d
GTK_CTREE_NODE_NEXT	stubs/gtkstub.c	2902;"	d
GTK_CTREE_NODE_PREV	stubs/gtkstub.c	2905;"	d
GTK_CTREE_POS_AFTER	stubs/gtkstub.c	2917;"	enum:GtkCTreePos
GTK_CTREE_POS_AS_CHILD	stubs/gtkstub.c	2917;"	enum:GtkCTreePos
GTK_CTREE_POS_BEFORE	stubs/gtkstub.c	2917;"	enum:GtkCTreePos
GTK_CTREE_ROW	stubs/gtkstub.c	2896;"	d
GTK_CURVE	stubs/gtkstub.c	3412;"	d
GTK_CURVE_CLASS	stubs/gtkstub.c	3415;"	d
GTK_CURVE_TYPE_FREE	stubs/gtkstub.c	4086;"	enum:GtkCurveType
GTK_CURVE_TYPE_LINEAR	stubs/gtkstub.c	4086;"	enum:GtkCurveType
GTK_CURVE_TYPE_SPLINE	stubs/gtkstub.c	4086;"	enum:GtkCurveType
GTK_DATA	stubs/gtkstub.c	3506;"	d
GTK_DATA_CLASS	stubs/gtkstub.c	3509;"	d
GTK_DEBUG_DND	stubs/gtkstub.c	3543;"	enum:GtkDebugFlag
GTK_DEBUG_MISC	stubs/gtkstub.c	3543;"	enum:GtkDebugFlag
GTK_DEBUG_OBJECTS	stubs/gtkstub.c	3543;"	enum:GtkDebugFlag
GTK_DEBUG_PLUGSOCKET	stubs/gtkstub.c	3543;"	enum:GtkDebugFlag
GTK_DEBUG_SIGNALS	stubs/gtkstub.c	3543;"	enum:GtkDebugFlag
GTK_DESTROYED	stubs/gtkstub.c	7839;"	enum:GtkObjectFlags
GTK_DEST_DEFAULT_ALL	stubs/gtkstub.c	3605;"	enum:GtkDestDefaults
GTK_DEST_DEFAULT_DROP	stubs/gtkstub.c	3605;"	enum:GtkDestDefaults
GTK_DEST_DEFAULT_HIGHLIGHT	stubs/gtkstub.c	3605;"	enum:GtkDestDefaults
GTK_DEST_DEFAULT_MOTION	stubs/gtkstub.c	3605;"	enum:GtkDestDefaults
GTK_DIALOG	stubs/gtkstub.c	3557;"	d
GTK_DIALOG_CLASS	stubs/gtkstub.c	3560;"	d
GTK_DIRECTION_LEFT	stubs/gtkstub.c	4302;"	enum:GtkSubmenuDirection
GTK_DIRECTION_RIGHT	stubs/gtkstub.c	4302;"	enum:GtkSubmenuDirection
GTK_DIR_DOWN	stubs/gtkstub.c	4097;"	enum:GtkDirectionType
GTK_DIR_LEFT	stubs/gtkstub.c	4097;"	enum:GtkDirectionType
GTK_DIR_RIGHT	stubs/gtkstub.c	4097;"	enum:GtkDirectionType
GTK_DIR_TAB_BACKWARD	stubs/gtkstub.c	4097;"	enum:GtkDirectionType
GTK_DIR_TAB_FORWARD	stubs/gtkstub.c	4097;"	enum:GtkDirectionType
GTK_DIR_UP	stubs/gtkstub.c	4097;"	enum:GtkDirectionType
GTK_DRAWING_AREA	stubs/gtkstub.c	3742;"	d
GTK_DRAWING_AREA_CLASS	stubs/gtkstub.c	3745;"	d
GTK_EDITABLE	stubs/gtkstub.c	3792;"	d
GTK_EDITABLE_CLASS	stubs/gtkstub.c	3795;"	d
GTK_ENTRY	stubs/gtkstub.c	3939;"	d
GTK_ENTRY_CLASS	stubs/gtkstub.c	3942;"	d
GTK_EVENT_BOX	stubs/gtkstub.c	4385;"	d
GTK_EVENT_BOX_CLASS	stubs/gtkstub.c	4388;"	d
GTK_EXPAND	stubs/gtkstub.c	4068;"	enum:GtkAttachOptions
GTK_FILE_SELECTION	stubs/gtkstub.c	4556;"	d
GTK_FILE_SELECTION_CLASS	stubs/gtkstub.c	4559;"	d
GTK_FILL	stubs/gtkstub.c	4068;"	enum:GtkAttachOptions
GTK_FILL_X	stubs/gtkstub.c	8314;"	enum:GtkPackerOptions
GTK_FILL_Y	stubs/gtkstub.c	8314;"	enum:GtkPackerOptions
GTK_FIXED	stubs/gtkstub.c	4648;"	d
GTK_FIXED_CLASS	stubs/gtkstub.c	4651;"	d
GTK_FLOATING	stubs/gtkstub.c	7839;"	enum:GtkObjectFlags
GTK_FONT_ALL	stubs/gtkstub.c	4768;"	enum:GtkFontType
GTK_FONT_BITMAP	stubs/gtkstub.c	4768;"	enum:GtkFontType
GTK_FONT_FILTER_BASE	stubs/gtkstub.c	4781;"	enum:GtkFontFilterType
GTK_FONT_FILTER_USER	stubs/gtkstub.c	4781;"	enum:GtkFontFilterType
GTK_FONT_METRIC_PIXELS	stubs/gtkstub.c	4755;"	enum:GtkFontMetricType
GTK_FONT_METRIC_POINTS	stubs/gtkstub.c	4755;"	enum:GtkFontMetricType
GTK_FONT_SCALABLE	stubs/gtkstub.c	4768;"	enum:GtkFontType
GTK_FONT_SCALABLE_BITMAP	stubs/gtkstub.c	4768;"	enum:GtkFontType
GTK_FONT_SELECTION	stubs/gtkstub.c	4712;"	d
GTK_FONT_SELECTION_CLASS	stubs/gtkstub.c	4715;"	d
GTK_FONT_SELECTION_DIALOG	stubs/gtkstub.c	4728;"	d
GTK_FONT_SELECTION_DIALOG_CLASS	stubs/gtkstub.c	4731;"	d
GTK_FRAME	stubs/gtkstub.c	5031;"	d
GTK_FRAME_CLASS	stubs/gtkstub.c	5034;"	d
GTK_FUNDAMENTAL_TYPE	stubs/gtkstub.c	12610;"	d
GTK_GAMMA_CURVE	stubs/gtkstub.c	5093;"	d
GTK_GAMMA_CURVE_CLASS	stubs/gtkstub.c	5097;"	d
GTK_HANDLE_BOX	stubs/gtkstub.c	5154;"	d
GTK_HANDLE_BOX_CLASS	stubs/gtkstub.c	5157;"	d
GTK_HAS_DEFAULT	stubs/gtkstub.c	13462;"	enum:GtkWidgetFlags
GTK_HAS_FOCUS	stubs/gtkstub.c	13462;"	enum:GtkWidgetFlags
GTK_HAS_GRAB	stubs/gtkstub.c	13462;"	enum:GtkWidgetFlags
GTK_HAVE_CONTAINER_FOCUS_ADJUSTMENTS	stubs/gtkstub.c	4449;"	d
GTK_HAVE_FEATURES_1_1_0	stubs/gtkstub.c	4473;"	d
GTK_HAVE_FEATURES_1_1_10	stubs/gtkstub.c	4523;"	d
GTK_HAVE_FEATURES_1_1_11	stubs/gtkstub.c	4529;"	d
GTK_HAVE_FEATURES_1_1_12	stubs/gtkstub.c	4535;"	d
GTK_HAVE_FEATURES_1_1_13	stubs/gtkstub.c	4542;"	d
GTK_HAVE_FEATURES_1_1_14	stubs/gtkstub.c	4549;"	d
GTK_HAVE_FEATURES_1_1_2	stubs/gtkstub.c	4480;"	d
GTK_HAVE_FEATURES_1_1_4	stubs/gtkstub.c	4487;"	d
GTK_HAVE_FEATURES_1_1_5	stubs/gtkstub.c	4493;"	d
GTK_HAVE_FEATURES_1_1_6	stubs/gtkstub.c	4499;"	d
GTK_HAVE_FEATURES_1_1_7	stubs/gtkstub.c	4505;"	d
GTK_HAVE_FEATURES_1_1_8	stubs/gtkstub.c	4511;"	d
GTK_HAVE_FEATURES_1_1_9	stubs/gtkstub.c	4517;"	d
GTK_HAVE_SIGNAL_INIT	stubs/gtkstub.c	4458;"	d
GTK_HBOX	stubs/gtkstub.c	5293;"	d
GTK_HBOX_CLASS	stubs/gtkstub.c	5296;"	d
GTK_HBUTTON_BOX	stubs/gtkstub.c	5229;"	d
GTK_HBUTTON_BOX_CLASS	stubs/gtkstub.c	5232;"	d
GTK_HPANED	stubs/gtkstub.c	5333;"	d
GTK_HPANED_CLASS	stubs/gtkstub.c	5336;"	d
GTK_HRULER	stubs/gtkstub.c	5370;"	d
GTK_HRULER_CLASS	stubs/gtkstub.c	5373;"	d
GTK_HSCALE	stubs/gtkstub.c	5410;"	d
GTK_HSCALE_CLASS	stubs/gtkstub.c	5413;"	d
GTK_HSCROLLBAR	stubs/gtkstub.c	5454;"	d
GTK_HSCROLLBAR_CLASS	stubs/gtkstub.c	5457;"	d
GTK_HSEPARATOR	stubs/gtkstub.c	5497;"	d
GTK_HSEPARATOR_CLASS	stubs/gtkstub.c	5500;"	d
GTK_IMAGE	stubs/gtkstub.c	5540;"	d
GTK_IMAGE_CLASS	stubs/gtkstub.c	5543;"	d
GTK_INCHES	stubs/gtkstub.c	4144;"	enum:GtkMetricType
GTK_INPUT_DIALOG	stubs/gtkstub.c	5597;"	d
GTK_INPUT_DIALOG_CLASS	stubs/gtkstub.c	5600;"	d
GTK_INTERFACE_AGE	stubs/gtkstub.c	4435;"	d
GTK_INVISIBLE	stubs/gtkstub.c	5656;"	d
GTK_INVISIBLE_CLASS	stubs/gtkstub.c	5659;"	d
GTK_IS_ACCEL_LABEL	stubs/gtkstub.c	191;"	d
GTK_IS_ACCEL_LABEL_CLASS	stubs/gtkstub.c	194;"	d
GTK_IS_ADJUSTMENT	stubs/gtkstub.c	263;"	d	class:h
GTK_IS_ADJUSTMENT_CLASS	stubs/gtkstub.c	266;"	d	class:h
GTK_IS_ALIGNMENT	stubs/gtkstub.c	337;"	d	class:h
GTK_IS_ALIGNMENT_CLASS	stubs/gtkstub.c	340;"	d	class:h
GTK_IS_ARROW	stubs/gtkstub.c	489;"	d	class:h
GTK_IS_ARROW_CLASS	stubs/gtkstub.c	492;"	d	class:h
GTK_IS_ASPECT_FRAME	stubs/gtkstub.c	544;"	d	class:h
GTK_IS_ASPECT_FRAME_CLASS	stubs/gtkstub.c	547;"	d	class:h
GTK_IS_BIN	stubs/gtkstub.c	862;"	d	class:h
GTK_IS_BIN_CLASS	stubs/gtkstub.c	865;"	d	class:h
GTK_IS_BOX	stubs/gtkstub.c	907;"	d	class:h
GTK_IS_BOX_CLASS	stubs/gtkstub.c	910;"	d	class:h
GTK_IS_BUTTON	stubs/gtkstub.c	1009;"	d	class:h
GTK_IS_BUTTON_BOX	stubs/gtkstub.c	604;"	d	class:h
GTK_IS_BUTTON_BOX_CLASS	stubs/gtkstub.c	607;"	d	class:h
GTK_IS_BUTTON_CLASS	stubs/gtkstub.c	1012;"	d	class:h
GTK_IS_CALENDAR	stubs/gtkstub.c	1109;"	d	class:h
GTK_IS_CALENDAR_CLASS	stubs/gtkstub.c	1112;"	d	class:h
GTK_IS_CHECK_BUTTON	stubs/gtkstub.c	1253;"	d	class:h
GTK_IS_CHECK_BUTTON_CLASS	stubs/gtkstub.c	1256;"	d	class:h
GTK_IS_CHECK_MENU_ITEM	stubs/gtkstub.c	1316;"	d	class:h
GTK_IS_CHECK_MENU_ITEM_CLASS	stubs/gtkstub.c	1319;"	d	class:h
GTK_IS_CLIST	stubs/gtkstub.c	1435;"	d
GTK_IS_CLIST_CLASS	stubs/gtkstub.c	1438;"	d
GTK_IS_COLOR_SELECTION	stubs/gtkstub.c	2330;"	d
GTK_IS_COLOR_SELECTION_CLASS	stubs/gtkstub.c	2333;"	d
GTK_IS_COLOR_SELECTION_DIALOG	stubs/gtkstub.c	2346;"	d
GTK_IS_COLOR_SELECTION_DIALOG_CLASS	stubs/gtkstub.c	2349;"	d
GTK_IS_COMBO	stubs/gtkstub.c	2474;"	d
GTK_IS_CONTAINER	stubs/gtkstub.c	2613;"	d
GTK_IS_CONTAINER_CLASS	stubs/gtkstub.c	2616;"	d
GTK_IS_CTREE	stubs/gtkstub.c	2889;"	d
GTK_IS_CTREE_CLASS	stubs/gtkstub.c	2892;"	d
GTK_IS_CURVE	stubs/gtkstub.c	3418;"	d
GTK_IS_CURVE_CLASS	stubs/gtkstub.c	3421;"	d
GTK_IS_DATA	stubs/gtkstub.c	3512;"	d
GTK_IS_DATA_CLASS	stubs/gtkstub.c	3515;"	d
GTK_IS_DIALOG	stubs/gtkstub.c	3563;"	d
GTK_IS_DIALOG_CLASS	stubs/gtkstub.c	3566;"	d
GTK_IS_DRAWING_AREA	stubs/gtkstub.c	3748;"	d
GTK_IS_DRAWING_AREA_CLASS	stubs/gtkstub.c	3751;"	d
GTK_IS_EDITABLE	stubs/gtkstub.c	3798;"	d
GTK_IS_EDITABLE_CLASS	stubs/gtkstub.c	3801;"	d
GTK_IS_ENTRY	stubs/gtkstub.c	3945;"	d
GTK_IS_ENTRY_CLASS	stubs/gtkstub.c	3948;"	d
GTK_IS_EVENT_BOX	stubs/gtkstub.c	4391;"	d
GTK_IS_EVENT_BOX_CLASS	stubs/gtkstub.c	4394;"	d
GTK_IS_FILE_SELECTION	stubs/gtkstub.c	4562;"	d
GTK_IS_FILE_SELECTION_CLASS	stubs/gtkstub.c	4565;"	d
GTK_IS_FIXED	stubs/gtkstub.c	4654;"	d
GTK_IS_FIXED_CLASS	stubs/gtkstub.c	4657;"	d
GTK_IS_FONT_SELECTION	stubs/gtkstub.c	4718;"	d
GTK_IS_FONT_SELECTION_CLASS	stubs/gtkstub.c	4721;"	d
GTK_IS_FONT_SELECTION_DIALOG	stubs/gtkstub.c	4734;"	d
GTK_IS_FONT_SELECTION_DIALOG_CLASS	stubs/gtkstub.c	4737;"	d
GTK_IS_FRAME	stubs/gtkstub.c	5037;"	d
GTK_IS_FRAME_CLASS	stubs/gtkstub.c	5040;"	d
GTK_IS_GAMMA_CURVE	stubs/gtkstub.c	5101;"	d
GTK_IS_HANDLE_BOX	stubs/gtkstub.c	5160;"	d
GTK_IS_HANDLE_BOX_CLASS	stubs/gtkstub.c	5163;"	d
GTK_IS_HBOX	stubs/gtkstub.c	5299;"	d
GTK_IS_HBOX_CLASS	stubs/gtkstub.c	5302;"	d
GTK_IS_HBUTTON_BOX	stubs/gtkstub.c	5235;"	d
GTK_IS_HPANED	stubs/gtkstub.c	5339;"	d
GTK_IS_HRULER	stubs/gtkstub.c	5376;"	d
GTK_IS_HSCALE	stubs/gtkstub.c	5416;"	d
GTK_IS_HSCALE_CLASS	stubs/gtkstub.c	5419;"	d
GTK_IS_HSCROLLBAR	stubs/gtkstub.c	5460;"	d
GTK_IS_HSCROLLBAR_CLASS	stubs/gtkstub.c	5463;"	d
GTK_IS_HSEPARATOR	stubs/gtkstub.c	5503;"	d
GTK_IS_HSEPARATOR_CLASS	stubs/gtkstub.c	5506;"	d
GTK_IS_IMAGE	stubs/gtkstub.c	5546;"	d
GTK_IS_IMAGE_CLASS	stubs/gtkstub.c	5549;"	d
GTK_IS_INPUT_DIALOG	stubs/gtkstub.c	5603;"	d
GTK_IS_INPUT_DIALOG_CLASS	stubs/gtkstub.c	5606;"	d
GTK_IS_INVISIBLE	stubs/gtkstub.c	5662;"	d
GTK_IS_INVISIBLE_CLASS	stubs/gtkstub.c	5665;"	d
GTK_IS_ITEM	stubs/gtkstub.c	5986;"	d
GTK_IS_ITEM_CLASS	stubs/gtkstub.c	5989;"	d
GTK_IS_ITEM_FACTORY	stubs/gtkstub.c	5725;"	d
GTK_IS_ITEM_FACTORY_CLASS	stubs/gtkstub.c	5728;"	d
GTK_IS_LABEL	stubs/gtkstub.c	6043;"	d
GTK_IS_LABEL_CLASS	stubs/gtkstub.c	6046;"	d
GTK_IS_LAYOUT	stubs/gtkstub.c	6131;"	d
GTK_IS_LAYOUT_CLASS	stubs/gtkstub.c	6134;"	d
GTK_IS_LIST	stubs/gtkstub.c	6250;"	d
GTK_IS_LIST_CLASS	stubs/gtkstub.c	6253;"	d
GTK_IS_LIST_ITEM	stubs/gtkstub.c	6438;"	d
GTK_IS_LIST_ITEM_CLASS	stubs/gtkstub.c	6441;"	d
GTK_IS_MENU	stubs/gtkstub.c	7055;"	d
GTK_IS_MENU_BAR	stubs/gtkstub.c	6906;"	d
GTK_IS_MENU_BAR_CLASS	stubs/gtkstub.c	6909;"	d
GTK_IS_MENU_CLASS	stubs/gtkstub.c	7058;"	d
GTK_IS_MENU_ITEM	stubs/gtkstub.c	7253;"	d
GTK_IS_MENU_ITEM_CLASS	stubs/gtkstub.c	7256;"	d
GTK_IS_MENU_SHELL	stubs/gtkstub.c	7366;"	d
GTK_IS_MENU_SHELL_CLASS	stubs/gtkstub.c	7369;"	d
GTK_IS_MISC	stubs/gtkstub.c	7461;"	d
GTK_IS_MISC_CLASS	stubs/gtkstub.c	7464;"	d
GTK_IS_NOTEBOOK	stubs/gtkstub.c	7515;"	d
GTK_IS_NOTEBOOK_CLASS	stubs/gtkstub.c	7518;"	d
GTK_IS_OBJECT	stubs/gtkstub.c	7803;"	d
GTK_IS_OBJECT_CLASS	stubs/gtkstub.c	7809;"	d
GTK_IS_OPTION_MENU	stubs/gtkstub.c	8231;"	d
GTK_IS_OPTION_MENU_CLASS	stubs/gtkstub.c	8234;"	d
GTK_IS_PACKER	stubs/gtkstub.c	8300;"	d
GTK_IS_PACKER_CLASS	stubs/gtkstub.c	8303;"	d
GTK_IS_PANED	stubs/gtkstub.c	8455;"	d
GTK_IS_PANED_CLASS	stubs/gtkstub.c	8458;"	d
GTK_IS_PIXMAP	stubs/gtkstub.c	8578;"	d
GTK_IS_PIXMAP_CLASS	stubs/gtkstub.c	8581;"	d
GTK_IS_PLUG	stubs/gtkstub.c	8640;"	d
GTK_IS_PREVIEW	stubs/gtkstub.c	8688;"	d
GTK_IS_PREVIEW_CLASS	stubs/gtkstub.c	8691;"	d
GTK_IS_PROGRESS	stubs/gtkstub.c	9009;"	d
GTK_IS_PROGRESS_BAR	stubs/gtkstub.c	8902;"	d
GTK_IS_PROGRESS_BAR_CLASS	stubs/gtkstub.c	8905;"	d
GTK_IS_PROGRESS_CLASS	stubs/gtkstub.c	9012;"	d
GTK_IS_RADIO_BUTTON	stubs/gtkstub.c	9125;"	d
GTK_IS_RADIO_BUTTON_CLASS	stubs/gtkstub.c	9128;"	d
GTK_IS_RADIO_MENU_ITEM	stubs/gtkstub.c	9195;"	d
GTK_IS_RADIO_MENU_ITEM_CLASS	stubs/gtkstub.c	9198;"	d
GTK_IS_RANGE	stubs/gtkstub.c	9255;"	d
GTK_IS_RANGE_CLASS	stubs/gtkstub.c	9258;"	d
GTK_IS_RESIZE_CONTAINER	stubs/gtkstub.c	2620;"	d
GTK_IS_ROOT_TREE	stubs/gtkstub.c	11902;"	d
GTK_IS_RULER	stubs/gtkstub.c	9624;"	d
GTK_IS_RULER_CLASS	stubs/gtkstub.c	9627;"	d
GTK_IS_SCALE	stubs/gtkstub.c	9712;"	d
GTK_IS_SCALE_CLASS	stubs/gtkstub.c	9715;"	d
GTK_IS_SCROLLBAR	stubs/gtkstub.c	9784;"	d
GTK_IS_SCROLLBAR_CLASS	stubs/gtkstub.c	9787;"	d
GTK_IS_SCROLLED_WINDOW	stubs/gtkstub.c	9822;"	d
GTK_IS_SCROLLED_WINDOW_CLASS	stubs/gtkstub.c	9825;"	d
GTK_IS_SEPARATOR	stubs/gtkstub.c	10050;"	d
GTK_IS_SEPARATOR_CLASS	stubs/gtkstub.c	10053;"	d
GTK_IS_SOCKET	stubs/gtkstub.c	10324;"	d
GTK_IS_SPIN_BUTTON	stubs/gtkstub.c	10380;"	d
GTK_IS_SPIN_BUTTON_CLASS	stubs/gtkstub.c	10383;"	d
GTK_IS_STATUSBAR	stubs/gtkstub.c	10549;"	d
GTK_IS_TABLE	stubs/gtkstub.c	10985;"	d
GTK_IS_TABLE_CLASS	stubs/gtkstub.c	10988;"	d
GTK_IS_TEAROFF_MENU_ITEM	stubs/gtkstub.c	11110;"	d
GTK_IS_TEAROFF_MENU_ITEM_CLASS	stubs/gtkstub.c	11113;"	d
GTK_IS_TEXT	stubs/gtkstub.c	11155;"	d
GTK_IS_TEXT_CLASS	stubs/gtkstub.c	11158;"	d
GTK_IS_TIPS_QUERY	stubs/gtkstub.c	11446;"	d
GTK_IS_TIPS_QUERY_CLASS	stubs/gtkstub.c	11449;"	d
GTK_IS_TOGGLE_BUTTON	stubs/gtkstub.c	11524;"	d
GTK_IS_TOGGLE_BUTTON_CLASS	stubs/gtkstub.c	11527;"	d
GTK_IS_TOOLBAR	stubs/gtkstub.c	11599;"	d
GTK_IS_TOOLBAR_CLASS	stubs/gtkstub.c	11602;"	d
GTK_IS_TOOLTIPS	stubs/gtkstub.c	11793;"	d
GTK_IS_TOOLTIPS_CLASS	stubs/gtkstub.c	11796;"	d
GTK_IS_TREE	stubs/gtkstub.c	11895;"	d
GTK_IS_TREE_CLASS	stubs/gtkstub.c	11898;"	d
GTK_IS_TREE_ITEM	stubs/gtkstub.c	12044;"	d
GTK_IS_TREE_ITEM_CLASS	stubs/gtkstub.c	12047;"	d
GTK_IS_VBOX	stubs/gtkstub.c	13115;"	d
GTK_IS_VBOX_CLASS	stubs/gtkstub.c	13118;"	d
GTK_IS_VBUTTON_BOX	stubs/gtkstub.c	13050;"	d
GTK_IS_VIEWPORT	stubs/gtkstub.c	13158;"	d
GTK_IS_VIEWPORT_CLASS	stubs/gtkstub.c	13161;"	d
GTK_IS_VPANED	stubs/gtkstub.c	13231;"	d
GTK_IS_VRULER	stubs/gtkstub.c	13269;"	d
GTK_IS_VSCALE	stubs/gtkstub.c	13309;"	d
GTK_IS_VSCALE_CLASS	stubs/gtkstub.c	13312;"	d
GTK_IS_VSCROLLBAR	stubs/gtkstub.c	13352;"	d
GTK_IS_VSCROLLBAR_CLASS	stubs/gtkstub.c	13355;"	d
GTK_IS_VSEPARATOR	stubs/gtkstub.c	13395;"	d
GTK_IS_VSEPARATOR_CLASS	stubs/gtkstub.c	13398;"	d
GTK_IS_WIDGET	stubs/gtkstub.c	13478;"	d
GTK_IS_WIDGET_CLASS	stubs/gtkstub.c	13481;"	d
GTK_IS_WINDOW	stubs/gtkstub.c	14365;"	d
GTK_IS_WINDOW_CLASS	stubs/gtkstub.c	14368;"	d
GTK_ITEM	stubs/gtkstub.c	5980;"	d
GTK_ITEM_CLASS	stubs/gtkstub.c	5983;"	d
GTK_ITEM_FACTORY	stubs/gtkstub.c	5719;"	d
GTK_ITEM_FACTORY_CLASS	stubs/gtkstub.c	5722;"	d
GTK_JUSTIFY_CENTER	stubs/gtkstub.c	4106;"	enum:GtkJustification
GTK_JUSTIFY_FILL	stubs/gtkstub.c	4106;"	enum:GtkJustification
GTK_JUSTIFY_LEFT	stubs/gtkstub.c	4106;"	enum:GtkJustification
GTK_JUSTIFY_RIGHT	stubs/gtkstub.c	4106;"	enum:GtkJustification
GTK_LABEL	stubs/gtkstub.c	6037;"	d
GTK_LABEL_CLASS	stubs/gtkstub.c	6040;"	d
GTK_LAYOUT	stubs/gtkstub.c	6125;"	d
GTK_LAYOUT_CLASS	stubs/gtkstub.c	6128;"	d
GTK_LEFT_RIGHT	stubs/gtkstub.c	4311;"	enum:GtkSubmenuPlacement
GTK_LIST	stubs/gtkstub.c	6244;"	d
GTK_LIST_CLASS	stubs/gtkstub.c	6247;"	d
GTK_LIST_ITEM	stubs/gtkstub.c	6432;"	d
GTK_LIST_ITEM_CLASS	stubs/gtkstub.c	6435;"	d
GTK_MAJOR_VERSION	stubs/gtkstub.c	4423;"	d
GTK_MAPPED	stubs/gtkstub.c	13462;"	enum:GtkWidgetFlags
GTK_MATCH_ALL	stubs/gtkstub.c	4117;"	enum:GtkMatchType
GTK_MATCH_ALL_TAIL	stubs/gtkstub.c	4117;"	enum:GtkMatchType
GTK_MATCH_EXACT	stubs/gtkstub.c	4117;"	enum:GtkMatchType
GTK_MATCH_HEAD	stubs/gtkstub.c	4117;"	enum:GtkMatchType
GTK_MATCH_LAST	stubs/gtkstub.c	4117;"	enum:GtkMatchType
GTK_MATCH_TAIL	stubs/gtkstub.c	4117;"	enum:GtkMatchType
GTK_MENU	stubs/gtkstub.c	7049;"	d
GTK_MENU_BAR	stubs/gtkstub.c	6900;"	d
GTK_MENU_BAR_CLASS	stubs/gtkstub.c	6903;"	d
GTK_MENU_CLASS	stubs/gtkstub.c	7052;"	d
GTK_MENU_DIR_CHILD	stubs/gtkstub.c	4126;"	enum:GtkMenuDirectionType
GTK_MENU_DIR_NEXT	stubs/gtkstub.c	4126;"	enum:GtkMenuDirectionType
GTK_MENU_DIR_PARENT	stubs/gtkstub.c	4126;"	enum:GtkMenuDirectionType
GTK_MENU_DIR_PREV	stubs/gtkstub.c	4126;"	enum:GtkMenuDirectionType
GTK_MENU_FACTORY_MENU	stubs/gtkstub.c	4135;"	enum:GtkMenuFactoryType
GTK_MENU_FACTORY_MENU_BAR	stubs/gtkstub.c	4135;"	enum:GtkMenuFactoryType
GTK_MENU_FACTORY_OPTION_MENU	stubs/gtkstub.c	4135;"	enum:GtkMenuFactoryType
GTK_MENU_ITEM	stubs/gtkstub.c	7247;"	d
GTK_MENU_ITEM_CLASS	stubs/gtkstub.c	7250;"	d
GTK_MENU_SHELL	stubs/gtkstub.c	7360;"	d
GTK_MENU_SHELL_CLASS	stubs/gtkstub.c	7363;"	d
GTK_MICRO_VERSION	stubs/gtkstub.c	4429;"	d
GTK_MINOR_VERSION	stubs/gtkstub.c	4426;"	d
GTK_MISC	stubs/gtkstub.c	7455;"	d
GTK_MISC_CLASS	stubs/gtkstub.c	7458;"	d
GTK_NOTE	stubs/gtkstub.c	3547;"	d
GTK_NOTEBOOK	stubs/gtkstub.c	7509;"	d
GTK_NOTEBOOK_CLASS	stubs/gtkstub.c	7512;"	d
GTK_NOTEBOOK_PAGE	stubs/gtkstub.c	7522;"	d
GTK_NO_REPARENT	stubs/gtkstub.c	13462;"	enum:GtkWidgetFlags
GTK_NO_WINDOW	stubs/gtkstub.c	13462;"	enum:GtkWidgetFlags
GTK_NUM_FONT_FILTERS	stubs/gtkstub.c	4774;"	d
GTK_NUM_FONT_FILTERS	stubs/gtkstub.c	4847;"	struct:GtkFontSelection
GTK_NUM_FONT_PROPERTIES	stubs/gtkstub.c	4741;"	d
GTK_NUM_FONT_PROPERTIES	stubs/gtkstub.c	4793;"	struct:GtkFontFilter
GTK_NUM_FONT_PROPERTIES	stubs/gtkstub.c	4793;"	struct:GtkFontFilter
GTK_NUM_FONT_PROPERTIES	stubs/gtkstub.c	4847;"	struct:GtkFontSelection
GTK_NUM_STYLE_PROPERTIES	stubs/gtkstub.c	4745;"	d
GTK_NUM_STYLE_PROPERTIES	stubs/gtkstub.c	4847;"	struct:GtkFontSelection
GTK_OBJECT	stubs/gtkstub.c	7786;"	d
GTK_OBJECT_CLASS	stubs/gtkstub.c	7793;"	d
GTK_OBJECT_CONNECTED	stubs/gtkstub.c	7854;"	d
GTK_OBJECT_CONSTRUCTED	stubs/gtkstub.c	7857;"	d
GTK_OBJECT_DESTROYED	stubs/gtkstub.c	7848;"	d
GTK_OBJECT_FLAGS	stubs/gtkstub.c	7845;"	d
GTK_OBJECT_FLOATING	stubs/gtkstub.c	7851;"	d
GTK_OBJECT_NSIGNALS	stubs/gtkstub.c	7824;"	d
GTK_OBJECT_SET_FLAGS	stubs/gtkstub.c	7863;"	d
GTK_OBJECT_SIGNALS	stubs/gtkstub.c	7821;"	d
GTK_OBJECT_TYPE	stubs/gtkstub.c	7818;"	d
GTK_OBJECT_UNSET_FLAGS	stubs/gtkstub.c	7866;"	d
GTK_OPTION_MENU	stubs/gtkstub.c	8225;"	d
GTK_OPTION_MENU_CLASS	stubs/gtkstub.c	8228;"	d
GTK_ORIENTATION_HORIZONTAL	stubs/gtkstub.c	4151;"	enum:GtkOrientation
GTK_ORIENTATION_VERTICAL	stubs/gtkstub.c	4151;"	enum:GtkOrientation
GTK_PACKER	stubs/gtkstub.c	8294;"	d
GTK_PACKER_CLASS	stubs/gtkstub.c	8297;"	d
GTK_PACK_END	stubs/gtkstub.c	4167;"	enum:GtkPackType
GTK_PACK_EXPAND	stubs/gtkstub.c	8314;"	enum:GtkPackerOptions
GTK_PACK_START	stubs/gtkstub.c	4167;"	enum:GtkPackType
GTK_PANED	stubs/gtkstub.c	8449;"	d
GTK_PANED_CLASS	stubs/gtkstub.c	8452;"	d
GTK_PARENT_SENSITIVE	stubs/gtkstub.c	13462;"	enum:GtkWidgetFlags
GTK_PATH_CLASS	stubs/gtkstub.c	4186;"	enum:GtkPathType
GTK_PATH_PRIO_APPLICATION	stubs/gtkstub.c	4178;"	enum:GtkPathPriorityType
GTK_PATH_PRIO_GTK	stubs/gtkstub.c	4178;"	enum:GtkPathPriorityType
GTK_PATH_PRIO_HIGHEST	stubs/gtkstub.c	4178;"	enum:GtkPathPriorityType
GTK_PATH_PRIO_LOWEST	stubs/gtkstub.c	4178;"	enum:GtkPathPriorityType
GTK_PATH_PRIO_MASK	stubs/gtkstub.c	4178;"	enum:GtkPathPriorityType
GTK_PATH_PRIO_RC	stubs/gtkstub.c	4178;"	enum:GtkPathPriorityType
GTK_PATH_WIDGET	stubs/gtkstub.c	4186;"	enum:GtkPathType
GTK_PATH_WIDGET_CLASS	stubs/gtkstub.c	4186;"	enum:GtkPathType
GTK_PIXELS	stubs/gtkstub.c	4144;"	enum:GtkMetricType
GTK_PIXMAP	stubs/gtkstub.c	8572;"	d
GTK_PIXMAP_CLASS	stubs/gtkstub.c	8575;"	d
GTK_PLUG	stubs/gtkstub.c	8634;"	d
GTK_PLUG_CLASS	stubs/gtkstub.c	8637;"	d
GTK_POLICY_ALWAYS	stubs/gtkstub.c	4194;"	enum:GtkPolicyType
GTK_POLICY_AUTOMATIC	stubs/gtkstub.c	4194;"	enum:GtkPolicyType
GTK_POLICY_NEVER	stubs/gtkstub.c	4194;"	enum:GtkPolicyType
GTK_POS_BOTTOM	stubs/gtkstub.c	4204;"	enum:GtkPositionType
GTK_POS_LEFT	stubs/gtkstub.c	4204;"	enum:GtkPositionType
GTK_POS_RIGHT	stubs/gtkstub.c	4204;"	enum:GtkPositionType
GTK_POS_TOP	stubs/gtkstub.c	4204;"	enum:GtkPositionType
GTK_PREVIEW	stubs/gtkstub.c	8682;"	d
GTK_PREVIEW_CLASS	stubs/gtkstub.c	8685;"	d
GTK_PREVIEW_COLOR	stubs/gtkstub.c	4212;"	enum:GtkPreviewType
GTK_PREVIEW_GRAYSCALE	stubs/gtkstub.c	4212;"	enum:GtkPreviewType
GTK_PRIORITY_DEFAULT	stubs/gtkstub.c	6517;"	d
GTK_PRIORITY_HIGH	stubs/gtkstub.c	6511;"	d
GTK_PRIORITY_INTERNAL	stubs/gtkstub.c	6514;"	d
GTK_PRIORITY_LOW	stubs/gtkstub.c	6520;"	d
GTK_PRIORITY_REDRAW	stubs/gtkstub.c	6502;"	d
GTK_PRIORITY_RESIZE	stubs/gtkstub.c	6505;"	d
GTK_PRIVATE_FLAGS	stubs/gtkstub.c	8851;"	d
GTK_PRIVATE_SET_FLAG	stubs/gtkstub.c	8886;"	d
GTK_PRIVATE_UNSET_FLAG	stubs/gtkstub.c	8889;"	d
GTK_PROGRESS	stubs/gtkstub.c	9003;"	d
GTK_PROGRESS_BAR	stubs/gtkstub.c	8896;"	d
GTK_PROGRESS_BAR_CLASS	stubs/gtkstub.c	8899;"	d
GTK_PROGRESS_BOTTOM_TO_TOP	stubs/gtkstub.c	8924;"	enum:GtkProgressBarOrientation
GTK_PROGRESS_CLASS	stubs/gtkstub.c	9006;"	d
GTK_PROGRESS_CONTINUOUS	stubs/gtkstub.c	8914;"	enum:GtkProgressBarStyle
GTK_PROGRESS_DISCRETE	stubs/gtkstub.c	8914;"	enum:GtkProgressBarStyle
GTK_PROGRESS_LEFT_TO_RIGHT	stubs/gtkstub.c	8924;"	enum:GtkProgressBarOrientation
GTK_PROGRESS_RIGHT_TO_LEFT	stubs/gtkstub.c	8924;"	enum:GtkProgressBarOrientation
GTK_PROGRESS_TOP_TO_BOTTOM	stubs/gtkstub.c	8924;"	enum:GtkProgressBarOrientation
GTK_RADIO_BUTTON	stubs/gtkstub.c	9119;"	d
GTK_RADIO_BUTTON_CLASS	stubs/gtkstub.c	9122;"	d
GTK_RADIO_MENU_ITEM	stubs/gtkstub.c	9189;"	d
GTK_RADIO_MENU_ITEM_CLASS	stubs/gtkstub.c	9192;"	d
GTK_RANGE	stubs/gtkstub.c	9249;"	d
GTK_RANGE_CLASS	stubs/gtkstub.c	9252;"	d
GTK_RC_BASE	stubs/gtkstub.c	9429;"	enum:GtkRcFlags
GTK_RC_BG	stubs/gtkstub.c	9429;"	enum:GtkRcFlags
GTK_RC_FG	stubs/gtkstub.c	9429;"	enum:GtkRcFlags
GTK_RC_STYLE	stubs/gtkstub.c	13462;"	enum:GtkWidgetFlags
GTK_RC_TEXT	stubs/gtkstub.c	9429;"	enum:GtkRcFlags
GTK_RC_TOKEN_ACTIVE	stubs/gtkstub.c	9595;"	enum:GtkRcTokenType
GTK_RC_TOKEN_APPLICATION	stubs/gtkstub.c	9595;"	enum:GtkRcTokenType
GTK_RC_TOKEN_BASE	stubs/gtkstub.c	9595;"	enum:GtkRcTokenType
GTK_RC_TOKEN_BG	stubs/gtkstub.c	9595;"	enum:GtkRcTokenType
GTK_RC_TOKEN_BG_PIXMAP	stubs/gtkstub.c	9595;"	enum:GtkRcTokenType
GTK_RC_TOKEN_BIND	stubs/gtkstub.c	9595;"	enum:GtkRcTokenType
GTK_RC_TOKEN_BINDING	stubs/gtkstub.c	9595;"	enum:GtkRcTokenType
GTK_RC_TOKEN_CLASS	stubs/gtkstub.c	9595;"	enum:GtkRcTokenType
GTK_RC_TOKEN_ENGINE	stubs/gtkstub.c	9595;"	enum:GtkRcTokenType
GTK_RC_TOKEN_FG	stubs/gtkstub.c	9595;"	enum:GtkRcTokenType
GTK_RC_TOKEN_FONT	stubs/gtkstub.c	9595;"	enum:GtkRcTokenType
GTK_RC_TOKEN_FONTSET	stubs/gtkstub.c	9595;"	enum:GtkRcTokenType
GTK_RC_TOKEN_GTK	stubs/gtkstub.c	9595;"	enum:GtkRcTokenType
GTK_RC_TOKEN_HIGHEST	stubs/gtkstub.c	9595;"	enum:GtkRcTokenType
GTK_RC_TOKEN_INCLUDE	stubs/gtkstub.c	9595;"	enum:GtkRcTokenType
GTK_RC_TOKEN_INSENSITIVE	stubs/gtkstub.c	9595;"	enum:GtkRcTokenType
GTK_RC_TOKEN_INVALID	stubs/gtkstub.c	9595;"	enum:GtkRcTokenType
GTK_RC_TOKEN_LAST	stubs/gtkstub.c	9595;"	enum:GtkRcTokenType
GTK_RC_TOKEN_LOWEST	stubs/gtkstub.c	9595;"	enum:GtkRcTokenType
GTK_RC_TOKEN_MODULE_PATH	stubs/gtkstub.c	9595;"	enum:GtkRcTokenType
GTK_RC_TOKEN_NORMAL	stubs/gtkstub.c	9595;"	enum:GtkRcTokenType
GTK_RC_TOKEN_PIXMAP_PATH	stubs/gtkstub.c	9595;"	enum:GtkRcTokenType
GTK_RC_TOKEN_PRELIGHT	stubs/gtkstub.c	9595;"	enum:GtkRcTokenType
GTK_RC_TOKEN_RC	stubs/gtkstub.c	9595;"	enum:GtkRcTokenType
GTK_RC_TOKEN_SELECTED	stubs/gtkstub.c	9595;"	enum:GtkRcTokenType
GTK_RC_TOKEN_STYLE	stubs/gtkstub.c	9595;"	enum:GtkRcTokenType
GTK_RC_TOKEN_TEXT	stubs/gtkstub.c	9595;"	enum:GtkRcTokenType
GTK_RC_TOKEN_WIDGET	stubs/gtkstub.c	9595;"	enum:GtkRcTokenType
GTK_RC_TOKEN_WIDGET_CLASS	stubs/gtkstub.c	9595;"	enum:GtkRcTokenType
GTK_REALIZED	stubs/gtkstub.c	13462;"	enum:GtkWidgetFlags
GTK_RECEIVES_DEFAULT	stubs/gtkstub.c	13462;"	enum:GtkWidgetFlags
GTK_RELIEF_HALF	stubs/gtkstub.c	4222;"	enum:GtkReliefStyle
GTK_RELIEF_NONE	stubs/gtkstub.c	4222;"	enum:GtkReliefStyle
GTK_RELIEF_NORMAL	stubs/gtkstub.c	4222;"	enum:GtkReliefStyle
GTK_RESIZE_IMMEDIATE	stubs/gtkstub.c	4232;"	enum:GtkResizeMode
GTK_RESIZE_PARENT	stubs/gtkstub.c	4232;"	enum:GtkResizeMode
GTK_RESIZE_QUEUE	stubs/gtkstub.c	4232;"	enum:GtkResizeMode
GTK_RETLOC_BOOL	stubs/gtkstub.c	12838;"	d
GTK_RETLOC_BOXED	stubs/gtkstub.c	12868;"	d
GTK_RETLOC_CHAR	stubs/gtkstub.c	12832;"	d
GTK_RETLOC_DOUBLE	stubs/gtkstub.c	12856;"	d
GTK_RETLOC_ENUM	stubs/gtkstub.c	12862;"	d
GTK_RETLOC_FLAGS	stubs/gtkstub.c	12865;"	d
GTK_RETLOC_FLOAT	stubs/gtkstub.c	12853;"	d
GTK_RETLOC_INT	stubs/gtkstub.c	12841;"	d
GTK_RETLOC_LONG	stubs/gtkstub.c	12847;"	d
GTK_RETLOC_OBJECT	stubs/gtkstub.c	12874;"	d
GTK_RETLOC_POINTER	stubs/gtkstub.c	12871;"	d
GTK_RETLOC_STRING	stubs/gtkstub.c	12859;"	d
GTK_RETLOC_UCHAR	stubs/gtkstub.c	12835;"	d
GTK_RETLOC_UINT	stubs/gtkstub.c	12844;"	d
GTK_RETLOC_ULONG	stubs/gtkstub.c	12850;"	d
GTK_RULER	stubs/gtkstub.c	9618;"	d
GTK_RULER_CLASS	stubs/gtkstub.c	9621;"	d
GTK_RUN_ACTION	stubs/gtkstub.c	4245;"	enum:GtkSignalRunType
GTK_RUN_BOTH	stubs/gtkstub.c	4245;"	enum:GtkSignalRunType
GTK_RUN_FIRST	stubs/gtkstub.c	4245;"	enum:GtkSignalRunType
GTK_RUN_LAST	stubs/gtkstub.c	4245;"	enum:GtkSignalRunType
GTK_RUN_LAST	stubs/gtkstub.c	4245;"	enum:GtkSignalRunType
GTK_RUN_NO_HOOKS	stubs/gtkstub.c	4245;"	enum:GtkSignalRunType
GTK_RUN_NO_RECURSE	stubs/gtkstub.c	4245;"	enum:GtkSignalRunType
GTK_SCALE	stubs/gtkstub.c	9706;"	d
GTK_SCALE_CLASS	stubs/gtkstub.c	9709;"	d
GTK_SCROLLBAR	stubs/gtkstub.c	9778;"	d
GTK_SCROLLBAR_CLASS	stubs/gtkstub.c	9781;"	d
GTK_SCROLLED_WINDOW	stubs/gtkstub.c	9816;"	d
GTK_SCROLLED_WINDOW_CLASS	stubs/gtkstub.c	9819;"	d
GTK_SCROLL_JUMP	stubs/gtkstub.c	4258;"	enum:GtkScrollType
GTK_SCROLL_NONE	stubs/gtkstub.c	4258;"	enum:GtkScrollType
GTK_SCROLL_PAGE_BACKWARD	stubs/gtkstub.c	4258;"	enum:GtkScrollType
GTK_SCROLL_PAGE_FORWARD	stubs/gtkstub.c	4258;"	enum:GtkScrollType
GTK_SCROLL_STEP_BACKWARD	stubs/gtkstub.c	4258;"	enum:GtkScrollType
GTK_SCROLL_STEP_FORWARD	stubs/gtkstub.c	4258;"	enum:GtkScrollType
GTK_SELECTION_BROWSE	stubs/gtkstub.c	4269;"	enum:GtkSelectionMode
GTK_SELECTION_EXTENDED	stubs/gtkstub.c	4269;"	enum:GtkSelectionMode
GTK_SELECTION_MULTIPLE	stubs/gtkstub.c	4269;"	enum:GtkSelectionMode
GTK_SELECTION_SINGLE	stubs/gtkstub.c	4269;"	enum:GtkSelectionMode
GTK_SENSITIVE	stubs/gtkstub.c	13462;"	enum:GtkWidgetFlags
GTK_SEPARATOR	stubs/gtkstub.c	10044;"	d
GTK_SEPARATOR_CLASS	stubs/gtkstub.c	10047;"	d
GTK_SHADOW_ETCHED_IN	stubs/gtkstub.c	4281;"	enum:GtkShadowType
GTK_SHADOW_ETCHED_OUT	stubs/gtkstub.c	4281;"	enum:GtkShadowType
GTK_SHADOW_IN	stubs/gtkstub.c	4281;"	enum:GtkShadowType
GTK_SHADOW_NONE	stubs/gtkstub.c	4281;"	enum:GtkShadowType
GTK_SHADOW_OUT	stubs/gtkstub.c	4281;"	enum:GtkShadowType
GTK_SHRINK	stubs/gtkstub.c	4068;"	enum:GtkAttachOptions
GTK_SIDE_BOTTOM	stubs/gtkstub.c	8324;"	enum:GtkSideType
GTK_SIDE_LEFT	stubs/gtkstub.c	8324;"	enum:GtkSideType
GTK_SIDE_RIGHT	stubs/gtkstub.c	8324;"	enum:GtkSideType
GTK_SIDE_TOP	stubs/gtkstub.c	8324;"	enum:GtkSideType
GTK_SIGNAL_FUNC	stubs/gtkstub.c	12618;"	d
GTK_SIGNAL_OFFSET	stubs/gtkstub.c	10079;"	d
GTK_SOCKET	stubs/gtkstub.c	10318;"	d
GTK_SOCKET_CLASS	stubs/gtkstub.c	10321;"	d
GTK_SORT_ASCENDING	stubs/gtkstub.c	4378;"	enum:GtkSortType
GTK_SORT_DESCENDING	stubs/gtkstub.c	4378;"	enum:GtkSortType
GTK_SPIN_BUTTON	stubs/gtkstub.c	10374;"	d
GTK_SPIN_BUTTON_CLASS	stubs/gtkstub.c	10377;"	d
GTK_SPIN_END	stubs/gtkstub.c	10405;"	enum:GtkSpinType
GTK_SPIN_HOME	stubs/gtkstub.c	10405;"	enum:GtkSpinType
GTK_SPIN_PAGE_BACKWARD	stubs/gtkstub.c	10405;"	enum:GtkSpinType
GTK_SPIN_PAGE_FORWARD	stubs/gtkstub.c	10405;"	enum:GtkSpinType
GTK_SPIN_STEP_BACKWARD	stubs/gtkstub.c	10405;"	enum:GtkSpinType
GTK_SPIN_STEP_FORWARD	stubs/gtkstub.c	10405;"	enum:GtkSpinType
GTK_SPIN_USER_DEFINED	stubs/gtkstub.c	10405;"	enum:GtkSpinType
GTK_STATE_ACTIVE	stubs/gtkstub.c	4293;"	enum:GtkStateType
GTK_STATE_INSENSITIVE	stubs/gtkstub.c	4293;"	enum:GtkStateType
GTK_STATE_NORMAL	stubs/gtkstub.c	4293;"	enum:GtkStateType
GTK_STATE_PRELIGHT	stubs/gtkstub.c	4293;"	enum:GtkStateType
GTK_STATE_SELECTED	stubs/gtkstub.c	4293;"	enum:GtkStateType
GTK_STATUSBAR	stubs/gtkstub.c	10543;"	d
GTK_STATUSBAR_CLASS	stubs/gtkstub.c	10546;"	d
GTK_STRUCT_OFFSET	stubs/gtkstub.c	12556;"	d
GTK_STYLE_ATTACHED	stubs/gtkstub.c	10626;"	d
GTK_STYLE_NUM_STYLECOLORS	stubs/gtkstub.c	10622;"	d
GTK_TABLE	stubs/gtkstub.c	10979;"	d
GTK_TABLE_CLASS	stubs/gtkstub.c	10982;"	d
GTK_TARGET_SAME_APP	stubs/gtkstub.c	3614;"	enum:GtkTargetFlags
GTK_TARGET_SAME_WIDGET	stubs/gtkstub.c	3614;"	enum:GtkTargetFlags
GTK_TEAROFF_MENU_ITEM	stubs/gtkstub.c	11104;"	d
GTK_TEAROFF_MENU_ITEM_CLASS	stubs/gtkstub.c	11107;"	d
GTK_TEXT	stubs/gtkstub.c	11149;"	d
GTK_TEXT_CLASS	stubs/gtkstub.c	11152;"	d
GTK_TEXT_INDEX	stubs/gtkstub.c	11364;"	d
GTK_TIPS_QUERY	stubs/gtkstub.c	11440;"	d
GTK_TIPS_QUERY_CLASS	stubs/gtkstub.c	11443;"	d
GTK_TOGGLE_BUTTON	stubs/gtkstub.c	11518;"	d
GTK_TOGGLE_BUTTON_CLASS	stubs/gtkstub.c	11521;"	d
GTK_TOOLBAR	stubs/gtkstub.c	11593;"	d
GTK_TOOLBAR_BOTH	stubs/gtkstub.c	4321;"	enum:GtkToolbarStyle
GTK_TOOLBAR_CHILD_BUTTON	stubs/gtkstub.c	11613;"	enum:GtkToolbarChildType
GTK_TOOLBAR_CHILD_RADIOBUTTON	stubs/gtkstub.c	11613;"	enum:GtkToolbarChildType
GTK_TOOLBAR_CHILD_SPACE	stubs/gtkstub.c	11613;"	enum:GtkToolbarChildType
GTK_TOOLBAR_CHILD_TOGGLEBUTTON	stubs/gtkstub.c	11613;"	enum:GtkToolbarChildType
GTK_TOOLBAR_CHILD_WIDGET	stubs/gtkstub.c	11613;"	enum:GtkToolbarChildType
GTK_TOOLBAR_CLASS	stubs/gtkstub.c	11596;"	d
GTK_TOOLBAR_ICONS	stubs/gtkstub.c	4321;"	enum:GtkToolbarStyle
GTK_TOOLBAR_SPACE_EMPTY	stubs/gtkstub.c	11621;"	enum:GtkToolbarSpaceStyle
GTK_TOOLBAR_SPACE_LINE	stubs/gtkstub.c	11621;"	enum:GtkToolbarSpaceStyle
GTK_TOOLBAR_TEXT	stubs/gtkstub.c	4321;"	enum:GtkToolbarStyle
GTK_TOOLTIPS	stubs/gtkstub.c	11787;"	d
GTK_TOOLTIPS_CLASS	stubs/gtkstub.c	11790;"	d
GTK_TOPLEVEL	stubs/gtkstub.c	13462;"	enum:GtkWidgetFlags
GTK_TOP_BOTTOM	stubs/gtkstub.c	4311;"	enum:GtkSubmenuPlacement
GTK_TREE	stubs/gtkstub.c	11889;"	d
GTK_TREE_CLASS	stubs/gtkstub.c	11892;"	d
GTK_TREE_ITEM	stubs/gtkstub.c	12038;"	d
GTK_TREE_ITEM_CLASS	stubs/gtkstub.c	12041;"	d
GTK_TREE_ITEM_SUBTREE	stubs/gtkstub.c	12051;"	d
GTK_TREE_ROOT_TREE	stubs/gtkstub.c	11905;"	d
GTK_TREE_SELECTION	stubs/gtkstub.c	11908;"	d
GTK_TREE_VIEW_ITEM	stubs/gtkstub.c	11916;"	enum:GtkTreeViewMode
GTK_TREE_VIEW_LINE	stubs/gtkstub.c	11916;"	enum:GtkTreeViewMode
GTK_TROUGH_END	stubs/gtkstub.c	4332;"	enum:GtkTroughType
GTK_TROUGH_JUMP	stubs/gtkstub.c	4332;"	enum:GtkTroughType
GTK_TROUGH_NONE	stubs/gtkstub.c	4332;"	enum:GtkTroughType
GTK_TROUGH_START	stubs/gtkstub.c	4332;"	enum:GtkTroughType
GTK_TYPE_ACCEL_LABEL	stubs/gtkstub.c	182;"	d
GTK_TYPE_ADJUSTMENT	stubs/gtkstub.c	254;"	d	class:h
GTK_TYPE_ALIGNMENT	stubs/gtkstub.c	328;"	d	class:h
GTK_TYPE_ARGS	stubs/gtkstub.c	12529;"	enum:GtkFundamentalType
GTK_TYPE_ARROW	stubs/gtkstub.c	480;"	d	class:h
GTK_TYPE_ASPECT_FRAME	stubs/gtkstub.c	535;"	d	class:h
GTK_TYPE_BIN	stubs/gtkstub.c	853;"	d	class:h
GTK_TYPE_BOOL	stubs/gtkstub.c	12529;"	enum:GtkFundamentalType
GTK_TYPE_BOX	stubs/gtkstub.c	898;"	d	class:h
GTK_TYPE_BOXED	stubs/gtkstub.c	12529;"	enum:GtkFundamentalType
GTK_TYPE_BUTTON	stubs/gtkstub.c	1000;"	d	class:h
GTK_TYPE_BUTTON_BOX	stubs/gtkstub.c	595;"	d	class:h
GTK_TYPE_CALENDAR	stubs/gtkstub.c	1100;"	d	class:h
GTK_TYPE_CALLBACK	stubs/gtkstub.c	12529;"	enum:GtkFundamentalType
GTK_TYPE_CHAR	stubs/gtkstub.c	12529;"	enum:GtkFundamentalType
GTK_TYPE_CHECK_BUTTON	stubs/gtkstub.c	1244;"	d	class:h
GTK_TYPE_CHECK_MENU_ITEM	stubs/gtkstub.c	1307;"	d	class:h
GTK_TYPE_CLIST	stubs/gtkstub.c	1426;"	d
GTK_TYPE_COLOR_SELECTION	stubs/gtkstub.c	2321;"	d
GTK_TYPE_COLOR_SELECTION_DIALOG	stubs/gtkstub.c	2337;"	d
GTK_TYPE_CONTAINER	stubs/gtkstub.c	2604;"	d
GTK_TYPE_CTREE	stubs/gtkstub.c	2880;"	d
GTK_TYPE_CURVE	stubs/gtkstub.c	3409;"	d
GTK_TYPE_C_CALLBACK	stubs/gtkstub.c	12529;"	enum:GtkFundamentalType
GTK_TYPE_DATA	stubs/gtkstub.c	3503;"	d
GTK_TYPE_DIALOG	stubs/gtkstub.c	3554;"	d
GTK_TYPE_DOUBLE	stubs/gtkstub.c	12529;"	enum:GtkFundamentalType
GTK_TYPE_DRAWING_AREA	stubs/gtkstub.c	3739;"	d
GTK_TYPE_EDITABLE	stubs/gtkstub.c	3789;"	d
GTK_TYPE_ENTRY	stubs/gtkstub.c	3936;"	d
GTK_TYPE_ENUM	stubs/gtkstub.c	12529;"	enum:GtkFundamentalType
GTK_TYPE_EVENT_BOX	stubs/gtkstub.c	4382;"	d
GTK_TYPE_FILE_SELECTION	stubs/gtkstub.c	4553;"	d
GTK_TYPE_FIXED	stubs/gtkstub.c	4645;"	d
GTK_TYPE_FLAGS	stubs/gtkstub.c	12529;"	enum:GtkFundamentalType
GTK_TYPE_FLAT_FIRST	stubs/gtkstub.c	12537;"	d
GTK_TYPE_FLAT_LAST	stubs/gtkstub.c	12540;"	d
GTK_TYPE_FLOAT	stubs/gtkstub.c	12529;"	enum:GtkFundamentalType
GTK_TYPE_FONT_SELECTION	stubs/gtkstub.c	4709;"	d
GTK_TYPE_FONT_SELECTION_DIALOG	stubs/gtkstub.c	4725;"	d
GTK_TYPE_FOREIGN	stubs/gtkstub.c	12529;"	enum:GtkFundamentalType
GTK_TYPE_FRAME	stubs/gtkstub.c	5028;"	d
GTK_TYPE_FUNDAMENTAL_LAST	stubs/gtkstub.c	12549;"	d
GTK_TYPE_FUNDAMENTAL_MAX	stubs/gtkstub.c	12552;"	d
GTK_TYPE_HANDLE_BOX	stubs/gtkstub.c	5151;"	d
GTK_TYPE_HBOX	stubs/gtkstub.c	5290;"	d
GTK_TYPE_HSCALE	stubs/gtkstub.c	5407;"	d
GTK_TYPE_HSCROLLBAR	stubs/gtkstub.c	5451;"	d
GTK_TYPE_HSEPARATOR	stubs/gtkstub.c	5494;"	d
GTK_TYPE_IDENTIFIER	stubs/gtkstub.c	12596;"	d
GTK_TYPE_IMAGE	stubs/gtkstub.c	5537;"	d
GTK_TYPE_INPUT_DIALOG	stubs/gtkstub.c	5594;"	d
GTK_TYPE_INT	stubs/gtkstub.c	12529;"	enum:GtkFundamentalType
GTK_TYPE_INVALID	stubs/gtkstub.c	12529;"	enum:GtkFundamentalType
GTK_TYPE_INVISIBLE	stubs/gtkstub.c	5653;"	d
GTK_TYPE_ITEM	stubs/gtkstub.c	5977;"	d
GTK_TYPE_ITEM_FACTORY	stubs/gtkstub.c	5716;"	d
GTK_TYPE_LABEL	stubs/gtkstub.c	6034;"	d
GTK_TYPE_LAYOUT	stubs/gtkstub.c	6122;"	d
GTK_TYPE_LIST	stubs/gtkstub.c	6241;"	d
GTK_TYPE_LIST_ITEM	stubs/gtkstub.c	6429;"	d
GTK_TYPE_LONG	stubs/gtkstub.c	12529;"	enum:GtkFundamentalType
GTK_TYPE_MAKE	stubs/gtkstub.c	12607;"	d
GTK_TYPE_MENU	stubs/gtkstub.c	7046;"	d
GTK_TYPE_MENU_BAR	stubs/gtkstub.c	6897;"	d
GTK_TYPE_MENU_ITEM	stubs/gtkstub.c	7244;"	d
GTK_TYPE_MENU_SHELL	stubs/gtkstub.c	7357;"	d
GTK_TYPE_MISC	stubs/gtkstub.c	7452;"	d
GTK_TYPE_NONE	stubs/gtkstub.c	12529;"	enum:GtkFundamentalType
GTK_TYPE_NOTEBOOK	stubs/gtkstub.c	7506;"	d
GTK_TYPE_NUM_BUILTINS	stubs/gtkstub.c	12493;"	d
GTK_TYPE_OBJECT	stubs/gtkstub.c	12529;"	enum:GtkFundamentalType
GTK_TYPE_OPTION_MENU	stubs/gtkstub.c	8222;"	d
GTK_TYPE_PACKER	stubs/gtkstub.c	8291;"	d
GTK_TYPE_PANED	stubs/gtkstub.c	8446;"	d
GTK_TYPE_PIXMAP	stubs/gtkstub.c	8569;"	d
GTK_TYPE_POINTER	stubs/gtkstub.c	12529;"	enum:GtkFundamentalType
GTK_TYPE_PREVIEW	stubs/gtkstub.c	8679;"	d
GTK_TYPE_PROGRESS	stubs/gtkstub.c	9000;"	d
GTK_TYPE_PROGRESS_BAR	stubs/gtkstub.c	8893;"	d
GTK_TYPE_RADIO_BUTTON	stubs/gtkstub.c	9116;"	d
GTK_TYPE_RADIO_MENU_ITEM	stubs/gtkstub.c	9186;"	d
GTK_TYPE_RANGE	stubs/gtkstub.c	9246;"	d
GTK_TYPE_RULER	stubs/gtkstub.c	9615;"	d
GTK_TYPE_SCALE	stubs/gtkstub.c	9703;"	d
GTK_TYPE_SCROLLBAR	stubs/gtkstub.c	9775;"	d
GTK_TYPE_SCROLLED_WINDOW	stubs/gtkstub.c	9813;"	d
GTK_TYPE_SEPARATOR	stubs/gtkstub.c	10041;"	d
GTK_TYPE_SEQNO	stubs/gtkstub.c	12613;"	d
GTK_TYPE_SIGNAL	stubs/gtkstub.c	12529;"	enum:GtkFundamentalType
GTK_TYPE_SPIN_BUTTON	stubs/gtkstub.c	10371;"	d
GTK_TYPE_STRING	stubs/gtkstub.c	12529;"	enum:GtkFundamentalType
GTK_TYPE_STRUCTURED_FIRST	stubs/gtkstub.c	12543;"	d
GTK_TYPE_STRUCTURED_LAST	stubs/gtkstub.c	12546;"	d
GTK_TYPE_TABLE	stubs/gtkstub.c	10976;"	d
GTK_TYPE_TEAROFF_MENU_ITEM	stubs/gtkstub.c	11101;"	d
GTK_TYPE_TEXT	stubs/gtkstub.c	11146;"	d
GTK_TYPE_TIPS_QUERY	stubs/gtkstub.c	11437;"	d
GTK_TYPE_TOGGLE_BUTTON	stubs/gtkstub.c	11515;"	d
GTK_TYPE_TOOLBAR	stubs/gtkstub.c	11590;"	d
GTK_TYPE_TOOLTIPS	stubs/gtkstub.c	11784;"	d
GTK_TYPE_TREE	stubs/gtkstub.c	11886;"	d
GTK_TYPE_TREE_ITEM	stubs/gtkstub.c	12035;"	d
GTK_TYPE_UCHAR	stubs/gtkstub.c	12529;"	enum:GtkFundamentalType
GTK_TYPE_UINT	stubs/gtkstub.c	12529;"	enum:GtkFundamentalType
GTK_TYPE_ULONG	stubs/gtkstub.c	12529;"	enum:GtkFundamentalType
GTK_TYPE_VBOX	stubs/gtkstub.c	13106;"	d
GTK_TYPE_VIEWPORT	stubs/gtkstub.c	13149;"	d
GTK_TYPE_VSCALE	stubs/gtkstub.c	13300;"	d
GTK_TYPE_VSCROLLBAR	stubs/gtkstub.c	13343;"	d
GTK_TYPE_VSEPARATOR	stubs/gtkstub.c	13386;"	d
GTK_TYPE_WIDGET	stubs/gtkstub.c	13469;"	d
GTK_TYPE_WINDOW	stubs/gtkstub.c	14356;"	d
GTK_UPDATE_ALWAYS	stubs/gtkstub.c	10392;"	enum:GtkSpinButtonUpdatePolicy
GTK_UPDATE_CONTINUOUS	stubs/gtkstub.c	4342;"	enum:GtkUpdateType
GTK_UPDATE_DELAYED	stubs/gtkstub.c	4342;"	enum:GtkUpdateType
GTK_UPDATE_DISCONTINUOUS	stubs/gtkstub.c	4342;"	enum:GtkUpdateType
GTK_UPDATE_IF_VALID	stubs/gtkstub.c	10392;"	enum:GtkSpinButtonUpdatePolicy
GTK_VALUE_ARGS	stubs/gtkstub.c	12813;"	d
GTK_VALUE_BOOL	stubs/gtkstub.c	12769;"	d
GTK_VALUE_BOXED	stubs/gtkstub.c	12799;"	d
GTK_VALUE_CALLBACK	stubs/gtkstub.c	12816;"	d
GTK_VALUE_CHAR	stubs/gtkstub.c	12763;"	d
GTK_VALUE_C_CALLBACK	stubs/gtkstub.c	12819;"	d
GTK_VALUE_DOUBLE	stubs/gtkstub.c	12787;"	d
GTK_VALUE_ENUM	stubs/gtkstub.c	12793;"	d
GTK_VALUE_FLAGS	stubs/gtkstub.c	12796;"	d
GTK_VALUE_FLOAT	stubs/gtkstub.c	12784;"	d
GTK_VALUE_FOREIGN	stubs/gtkstub.c	12822;"	d
GTK_VALUE_INT	stubs/gtkstub.c	12772;"	d
GTK_VALUE_LONG	stubs/gtkstub.c	12778;"	d
GTK_VALUE_OBJECT	stubs/gtkstub.c	12805;"	d
GTK_VALUE_POINTER	stubs/gtkstub.c	12802;"	d
GTK_VALUE_SIGNAL	stubs/gtkstub.c	12810;"	d
GTK_VALUE_STRING	stubs/gtkstub.c	12790;"	d
GTK_VALUE_UCHAR	stubs/gtkstub.c	12766;"	d
GTK_VALUE_UINT	stubs/gtkstub.c	12775;"	d
GTK_VALUE_ULONG	stubs/gtkstub.c	12781;"	d
GTK_VBOX	stubs/gtkstub.c	13109;"	d
GTK_VBOX_CLASS	stubs/gtkstub.c	13112;"	d
GTK_VBUTTON_BOX	stubs/gtkstub.c	13044;"	d
GTK_VBUTTON_BOX_CLASS	stubs/gtkstub.c	13047;"	d
GTK_VIEWPORT	stubs/gtkstub.c	13152;"	d
GTK_VIEWPORT_CLASS	stubs/gtkstub.c	13155;"	d
GTK_VISIBILITY_FULL	stubs/gtkstub.c	4352;"	enum:GtkVisibility
GTK_VISIBILITY_NONE	stubs/gtkstub.c	4352;"	enum:GtkVisibility
GTK_VISIBILITY_PARTIAL	stubs/gtkstub.c	4352;"	enum:GtkVisibility
GTK_VISIBLE	stubs/gtkstub.c	13462;"	enum:GtkWidgetFlags
GTK_VPANED	stubs/gtkstub.c	13225;"	d
GTK_VPANED_CLASS	stubs/gtkstub.c	13228;"	d
GTK_VRULER	stubs/gtkstub.c	13263;"	d
GTK_VRULER_CLASS	stubs/gtkstub.c	13266;"	d
GTK_VSCALE	stubs/gtkstub.c	13303;"	d
GTK_VSCALE_CLASS	stubs/gtkstub.c	13306;"	d
GTK_VSCROLLBAR	stubs/gtkstub.c	13346;"	d
GTK_VSCROLLBAR_CLASS	stubs/gtkstub.c	13349;"	d
GTK_VSEPARATOR	stubs/gtkstub.c	13389;"	d
GTK_VSEPARATOR_CLASS	stubs/gtkstub.c	13392;"	d
GTK_WIDGET	stubs/gtkstub.c	13472;"	d
GTK_WIDGET_APP_PAINTABLE	stubs/gtkstub.c	13551;"	d
GTK_WIDGET_CAN_DEFAULT	stubs/gtkstub.c	13536;"	d
GTK_WIDGET_CAN_FOCUS	stubs/gtkstub.c	13530;"	d
GTK_WIDGET_CLASS	stubs/gtkstub.c	13475;"	d
GTK_WIDGET_COMPOSITE_CHILD	stubs/gtkstub.c	13548;"	d
GTK_WIDGET_DRAWABLE	stubs/gtkstub.c	13517;"	d
GTK_WIDGET_FLAGS	stubs/gtkstub.c	13499;"	d
GTK_WIDGET_FULLDRAW_PENDING	stubs/gtkstub.c	8878;"	d
GTK_WIDGET_HAS_DEFAULT	stubs/gtkstub.c	13539;"	d
GTK_WIDGET_HAS_FOCUS	stubs/gtkstub.c	13533;"	d
GTK_WIDGET_HAS_GRAB	stubs/gtkstub.c	13542;"	d
GTK_WIDGET_HAS_SHAPE_MASK	stubs/gtkstub.c	8869;"	d
GTK_WIDGET_IN_REPARENT	stubs/gtkstub.c	8872;"	d
GTK_WIDGET_IS_OFFSCREEN	stubs/gtkstub.c	8875;"	d
GTK_WIDGET_IS_SENSITIVE	stubs/gtkstub.c	13526;"	d
GTK_WIDGET_LEAVE_PENDING	stubs/gtkstub.c	8866;"	d
GTK_WIDGET_MAPPED	stubs/gtkstub.c	13511;"	d
GTK_WIDGET_NO_WINDOW	stubs/gtkstub.c	13505;"	d
GTK_WIDGET_PARENT_SENSITIVE	stubs/gtkstub.c	13523;"	d
GTK_WIDGET_RC_STYLE	stubs/gtkstub.c	13545;"	d
GTK_WIDGET_REALIZED	stubs/gtkstub.c	13508;"	d
GTK_WIDGET_RECEIVES_DEFAULT	stubs/gtkstub.c	13554;"	d
GTK_WIDGET_REDRAW_PENDING	stubs/gtkstub.c	8857;"	d
GTK_WIDGET_RESIZE_NEEDED	stubs/gtkstub.c	8863;"	d
GTK_WIDGET_SAVED_STATE	stubs/gtkstub.c	13493;"	d
GTK_WIDGET_SENSITIVE	stubs/gtkstub.c	13520;"	d
GTK_WIDGET_SET_FLAGS	stubs/gtkstub.c	13560;"	d
GTK_WIDGET_STATE	stubs/gtkstub.c	13490;"	d
GTK_WIDGET_TOPLEVEL	stubs/gtkstub.c	13502;"	d
GTK_WIDGET_TYPE	stubs/gtkstub.c	13487;"	d
GTK_WIDGET_UNSET_FLAGS	stubs/gtkstub.c	13563;"	d
GTK_WIDGET_USER_STYLE	stubs/gtkstub.c	8854;"	d
GTK_WIDGET_VISIBLE	stubs/gtkstub.c	13514;"	d
GTK_WINDOW	stubs/gtkstub.c	14359;"	d
GTK_WINDOW_CLASS	stubs/gtkstub.c	14362;"	d
GTK_WINDOW_DIALOG	stubs/gtkstub.c	4371;"	enum:GtkWindowType
GTK_WINDOW_POPUP	stubs/gtkstub.c	4371;"	enum:GtkWindowType
GTK_WINDOW_TOPLEVEL	stubs/gtkstub.c	4371;"	enum:GtkWindowType
GTK_WIN_POS_CENTER	stubs/gtkstub.c	4361;"	enum:GtkWindowPosition
GTK_WIN_POS_CENTER_ALWAYS	stubs/gtkstub.c	4361;"	enum:GtkWindowPosition
GTK_WIN_POS_MOUSE	stubs/gtkstub.c	4361;"	enum:GtkWindowPosition
GTK_WIN_POS_NONE	stubs/gtkstub.c	4361;"	enum:GtkWindowPosition
GTime	stubs/glibstub.c	/^typedef gint32	GTime;$/;"	t
GTokenType	stubs/glibstub.c	/^} GTokenType;$/;"	v
GTokenValue	stubs/glibstub.c	/^} GTokenValue;$/;"	t
GTraverseFlags	stubs/glibstub.c	/^} GTraverseFlags;$/;"	v
GTraverseType	stubs/glibstub.c	/^} GTraverseType;$/;"	v
GTuples	stubs/glibstub.c	/^} GTuples;$/;"	t
GUINT16_FROM_BE	stubs/glibstub.c	298;"	d
GUINT16_FROM_LE	stubs/glibstub.c	292;"	d
GUINT16_SWAP_BE_PDP	stubs/glibstub.c	280;"	d
GUINT16_SWAP_LE_BE	stubs/glibstub.c	272;"	d
GUINT16_SWAP_LE_BE_CONSTANT	stubs/glibstub.c	261;"	d
GUINT16_SWAP_LE_PDP	stubs/glibstub.c	277;"	d
GUINT16_TO_BE	stubs/glibstub.c	355;"	d
GUINT16_TO_LE	stubs/glibstub.c	349;"	d
GUINT32_FROM_BE	stubs/glibstub.c	310;"	d
GUINT32_FROM_LE	stubs/glibstub.c	304;"	d
GUINT32_SWAP_BE_PDP	stubs/glibstub.c	286;"	d
GUINT32_SWAP_LE_BE	stubs/glibstub.c	273;"	d
GUINT32_SWAP_LE_BE_CONSTANT	stubs/glibstub.c	264;"	d
GUINT32_SWAP_LE_PDP	stubs/glibstub.c	283;"	d
GUINT32_TO_BE	stubs/glibstub.c	367;"	d
GUINT32_TO_LE	stubs/glibstub.c	361;"	d
GUINT64_FROM_BE	stubs/glibstub.c	322;"	d
GUINT64_FROM_LE	stubs/glibstub.c	316;"	d
GUINT64_SWAP_LE_BE	stubs/glibstub.c	274;"	d
GUINT64_SWAP_LE_BE_CONSTANT	stubs/glibstub.c	267;"	d
GUINT64_TO_BE	stubs/glibstub.c	379;"	d
GUINT64_TO_LE	stubs/glibstub.c	373;"	d
GUINT_FROM_BE	stubs/glibstub.c	343;"	d
GUINT_FROM_LE	stubs/glibstub.c	337;"	d
GUINT_TO_BE	stubs/glibstub.c	400;"	d
GUINT_TO_LE	stubs/glibstub.c	394;"	d
GUINT_TO_POINTER	stubs/glibstub.c	89;"	d
GULONG_FROM_BE	stubs/glibstub.c	334;"	d
GULONG_FROM_LE	stubs/glibstub.c	328;"	d
GULONG_TO_BE	stubs/glibstub.c	391;"	d
GULONG_TO_LE	stubs/glibstub.c	385;"	d
GUTILS_C_VAR	stubs/glibstub.c	412;"	d
G_ALLOCATOR_LIST	stubs/glibstub.c	1454;"	d
G_ALLOCATOR_NODE	stubs/glibstub.c	1460;"	d
G_ALLOCATOR_SLIST	stubs/glibstub.c	1457;"	d
G_ALLOC_AND_FREE	stubs/glibstub.c	1466;"	d
G_ALLOC_ONLY	stubs/glibstub.c	1463;"	d
G_BIG_ENDIAN	stubs/glibstub.c	254;"	d
G_BYTE_ORDER	stubs/glibstub.c	82;"	d
G_CSET_A_2_Z	stubs/glibstub.c	2143;"	d
G_CSET_LATINC	stubs/glibstub.c	2149;"	d
G_CSET_LATINS	stubs/glibstub.c	2152;"	d
G_CSET_a_2_z	stubs/glibstub.c	2146;"	d
G_DATE_APRIL	stubs/glibstub.c	2510;"	enum:GDateMonth
G_DATE_AUGUST	stubs/glibstub.c	2510;"	enum:GDateMonth
G_DATE_BAD_DAY	stubs/glibstub.c	2516;"	d
G_DATE_BAD_JULIAN	stubs/glibstub.c	2513;"	d
G_DATE_BAD_MONTH	stubs/glibstub.c	2510;"	enum:GDateMonth
G_DATE_BAD_WEEKDAY	stubs/glibstub.c	2492;"	enum:GDateWeekday
G_DATE_BAD_YEAR	stubs/glibstub.c	2519;"	d
G_DATE_DAY	stubs/glibstub.c	2479;"	enum:GDateDMY
G_DATE_DECEMBER	stubs/glibstub.c	2510;"	enum:GDateMonth
G_DATE_FEBRUARY	stubs/glibstub.c	2510;"	enum:GDateMonth
G_DATE_FRIDAY	stubs/glibstub.c	2492;"	enum:GDateWeekday
G_DATE_JANUARY	stubs/glibstub.c	2510;"	enum:GDateMonth
G_DATE_JULY	stubs/glibstub.c	2510;"	enum:GDateMonth
G_DATE_JUNE	stubs/glibstub.c	2510;"	enum:GDateMonth
G_DATE_MARCH	stubs/glibstub.c	2510;"	enum:GDateMonth
G_DATE_MAY	stubs/glibstub.c	2510;"	enum:GDateMonth
G_DATE_MONDAY	stubs/glibstub.c	2492;"	enum:GDateWeekday
G_DATE_MONTH	stubs/glibstub.c	2479;"	enum:GDateDMY
G_DATE_NOVEMBER	stubs/glibstub.c	2510;"	enum:GDateMonth
G_DATE_OCTOBER	stubs/glibstub.c	2510;"	enum:GDateMonth
G_DATE_SATURDAY	stubs/glibstub.c	2492;"	enum:GDateWeekday
G_DATE_SEPTEMBER	stubs/glibstub.c	2510;"	enum:GDateMonth
G_DATE_SUNDAY	stubs/glibstub.c	2492;"	enum:GDateWeekday
G_DATE_THURSDAY	stubs/glibstub.c	2492;"	enum:GDateWeekday
G_DATE_TUESDAY	stubs/glibstub.c	2492;"	enum:GDateWeekday
G_DATE_WEDNESDAY	stubs/glibstub.c	2492;"	enum:GDateWeekday
G_DATE_YEAR	stubs/glibstub.c	2479;"	enum:GDateDMY
G_DIR_SEPARATOR	stubs/glibstub.c	104;"	d
G_DIR_SEPARATOR_S	stubs/glibstub.c	107;"	d
G_ERR_DIGIT_RADIX	stubs/glibstub.c	2165;"	enum:GErrorType
G_ERR_FLOAT_MALFORMED	stubs/glibstub.c	2165;"	enum:GErrorType
G_ERR_FLOAT_RADIX	stubs/glibstub.c	2165;"	enum:GErrorType
G_ERR_NON_DIGIT_IN_CONST	stubs/glibstub.c	2165;"	enum:GErrorType
G_ERR_UNEXP_EOF	stubs/glibstub.c	2165;"	enum:GErrorType
G_ERR_UNEXP_EOF_IN_COMMENT	stubs/glibstub.c	2165;"	enum:GErrorType
G_ERR_UNEXP_EOF_IN_STRING	stubs/glibstub.c	2165;"	enum:GErrorType
G_ERR_UNKNOWN	stubs/glibstub.c	2165;"	enum:GErrorType
G_HOOK_ACTIVE	stubs/glibstub.c	1196;"	d
G_HOOK_DEFERRED_DESTROY	stubs/glibstub.c	1167;"	d
G_HOOK_FLAG_ACTIVE	stubs/glibstub.c	1164;"	enum:GHookFlagMask
G_HOOK_FLAG_IN_CALL	stubs/glibstub.c	1164;"	enum:GHookFlagMask
G_HOOK_FLAG_MASK	stubs/glibstub.c	1164;"	enum:GHookFlagMask
G_HOOK_FLAG_USER_SHIFT	stubs/glibstub.c	1156;"	d
G_HOOK_IN_CALL	stubs/glibstub.c	1199;"	d
G_HOOK_IS_UNLINKED	stubs/glibstub.c	1205;"	d
G_HOOK_IS_VALID	stubs/glibstub.c	1202;"	d
G_INLINE_FUNC	stubs/glibstub.c	150;"	d
G_IN_ORDER	stubs/glibstub.c	448;"	enum:GTraverseType
G_LEVEL_ORDER	stubs/glibstub.c	448;"	enum:GTraverseType
G_LITTLE_ENDIAN	stubs/glibstub.c	251;"	d
G_LOCK	stubs/glibstub.c	3211;"	d
G_LOCK_DEFINE	stubs/glibstub.c	3205;"	d
G_LOCK_DEFINE_STATIC	stubs/glibstub.c	3202;"	d
G_LOCK_EXTERN	stubs/glibstub.c	3208;"	d
G_LOCK_NAME	stubs/glibstub.c	3199;"	d
G_LOG_DOMAIN	stubs/glibstub.c	1374;"	d
G_LOG_FATAL_MASK	stubs/glibstub.c	474;"	d
G_LOG_FLAG_FATAL	stubs/glibstub.c	471;"	enum:GLogLevelFlags
G_LOG_FLAG_FATAL	stubs/glibstub.c	471;"	enum:GLogLevelFlags
G_LOG_FLAG_RECURSION	stubs/glibstub.c	471;"	enum:GLogLevelFlags
G_LOG_LEVEL_CRITICAL	stubs/glibstub.c	471;"	enum:GLogLevelFlags
G_LOG_LEVEL_DEBUG	stubs/glibstub.c	471;"	enum:GLogLevelFlags
G_LOG_LEVEL_ERROR	stubs/glibstub.c	471;"	enum:GLogLevelFlags
G_LOG_LEVEL_INFO	stubs/glibstub.c	471;"	enum:GLogLevelFlags
G_LOG_LEVEL_MASK	stubs/glibstub.c	471;"	enum:GLogLevelFlags
G_LOG_LEVEL_MESSAGE	stubs/glibstub.c	471;"	enum:GLogLevelFlags
G_LOG_LEVEL_USER_SHIFT	stubs/glibstub.c	453;"	d
G_LOG_LEVEL_WARNING	stubs/glibstub.c	471;"	enum:GLogLevelFlags
G_MAXDOUBLE	stubs/glibstub.c	54;"	d
G_MAXFLOAT	stubs/glibstub.c	48;"	d
G_MAXINT	stubs/glibstub.c	36;"	d
G_MAXLONG	stubs/glibstub.c	42;"	d
G_MAXSHORT	stubs/glibstub.c	30;"	d
G_MINDOUBLE	stubs/glibstub.c	51;"	d
G_MINFLOAT	stubs/glibstub.c	45;"	d
G_MININT	stubs/glibstub.c	33;"	d
G_MINLONG	stubs/glibstub.c	39;"	d
G_MINSHORT	stubs/glibstub.c	27;"	d
G_MODULE_IMPORT	stubs/glibstub.c	3220;"	d
G_NODE_IS_LEAF	stubs/glibstub.c	1003;"	d
G_NODE_IS_ROOT	stubs/glibstub.c	1000;"	d
G_PDP_ENDIAN	stubs/glibstub.c	257;"	d
G_POST_ORDER	stubs/glibstub.c	448;"	enum:GTraverseType
G_PRE_ORDER	stubs/glibstub.c	448;"	enum:GTraverseType
G_PRIORITY_DEFAULT	stubs/glibstub.c	2927;"	d
G_PRIORITY_DEFAULT_IDLE	stubs/glibstub.c	2933;"	d
G_PRIORITY_HIGH	stubs/glibstub.c	2924;"	d
G_PRIORITY_HIGH_IDLE	stubs/glibstub.c	2930;"	d
G_PRIORITY_LOW	stubs/glibstub.c	2936;"	d
G_SEARCHPATH_SEPARATOR	stubs/glibstub.c	110;"	d
G_SEARCHPATH_SEPARATOR_S	stubs/glibstub.c	113;"	d
G_STATIC_PRIVATE_INIT	stubs/glibstub.c	3181;"	d
G_STMT_END	stubs/glibstub.c	158;"	d
G_STMT_START	stubs/glibstub.c	157;"	d
G_STRUCT_MEMBER	stubs/glibstub.c	146;"	d
G_STRUCT_MEMBER_P	stubs/glibstub.c	142;"	d
G_STRUCT_OFFSET	stubs/glibstub.c	139;"	d
G_STR_DELIMITERS	stubs/glibstub.c	1549;"	d
G_THREAD_CF	stubs/glibstub.c	3117;"	d
G_THREAD_UF	stubs/glibstub.c	3114;"	d
G_TOKEN_EOF	stubs/glibstub.c	2200;"	enum:GTokenType
G_TOKEN_LAST	stubs/gtkstub.c	9595;"	enum:GtkRcTokenType
G_TOKEN_LEFT_CURLY	stubs/glibstub.c	2200;"	enum:GTokenType
G_TOKEN_LEFT_PAREN	stubs/glibstub.c	2200;"	enum:GTokenType
G_TOKEN_RIGHT_PAREN	stubs/glibstub.c	2200;"	enum:GTokenType
G_TRAVERSE_ALL	stubs/glibstub.c	439;"	enum:GTraverseFlags
G_TRAVERSE_LEAFS	stubs/glibstub.c	439;"	enum:GTraverseFlags
G_TRAVERSE_MASK	stubs/glibstub.c	439;"	enum:GTraverseFlags
G_TRAVERSE_NON_LEAFS	stubs/glibstub.c	439;"	enum:GTraverseFlags
G_TRAVERSE_NON_LEAFS	stubs/glibstub.c	439;"	enum:GTraverseFlags
G_TRYLOCK	stubs/glibstub.c	3217;"	d
G_UNLOCK	stubs/glibstub.c	3214;"	d
G_VA_COPY	stubs/glibstub.c	135;"	d
GdkAtom	stubs/gdkstub.c	/^typedef gulong GdkAtom;$/;"	t
GdkAxisUse	stubs/gdkstub.c	/^} GdkAxisUse;$/;"	v
GdkByteOrder	stubs/gdkstub.c	/^} GdkByteOrder;$/;"	v
GdkCapStyle	stubs/gdkstub.c	/^} GdkCapStyle;$/;"	v
GdkColor	stubs/gdkstub.c	/^} GdkColor;$/;"	t
GdkColorContext	stubs/gdkstub.c	/^} GdkColorContext;$/;"	t
GdkColorContextDither	stubs/gdkstub.c	/^} GdkColorContextDither;$/;"	t
GdkColorContextMode	stubs/gdkstub.c	/^} GdkColorContextMode;$/;"	v
GdkColormap	stubs/gdkstub.c	/^} GdkColormap;$/;"	t
GdkCrossingMode	stubs/gdkstub.c	/^} GdkCrossingMode;$/;"	v
GdkCursor	stubs/gdkstub.c	/^} GdkCursor;$/;"	t
GdkCursorType	stubs/gdkstub.c	/^} GdkCursorType;$/;"	v
GdkDeviceInfo	stubs/gdkstub.c	/^} GdkDeviceInfo;$/;"	t
GdkDeviceKey	stubs/gdkstub.c	/^} GdkDeviceKey;$/;"	t
GdkDragAction	stubs/gdkstub.c	/^} GdkDragAction;$/;"	v
GdkDragContext	stubs/gdkstub.c	/^} GdkDragContext;$/;"	t
GdkDragProtocol	stubs/gdkstub.c	/^} GdkDragProtocol;$/;"	v
GdkEvent	stubs/gdkstub.c	/^} GdkEvent;$/;"	t
GdkEventAny	stubs/gdkstub.c	/^} GdkEventAny;$/;"	t
GdkEventButton	stubs/gdkstub.c	/^} GdkEventButton;$/;"	t
GdkEventClient	stubs/gdkstub.c	/^} GdkEventClient;$/;"	t
GdkEventConfigure	stubs/gdkstub.c	/^} GdkEventConfigure;$/;"	t
GdkEventCrossing	stubs/gdkstub.c	/^} GdkEventCrossing;$/;"	t
GdkEventDND	stubs/gdkstub.c	/^} GdkEventDND;$/;"	t
GdkEventExpose	stubs/gdkstub.c	/^} GdkEventExpose;$/;"	t
GdkEventFocus	stubs/gdkstub.c	/^} GdkEventFocus;$/;"	t
GdkEventKey	stubs/gdkstub.c	/^} GdkEventKey;$/;"	t
GdkEventMask	stubs/gdkstub.c	/^} GdkEventMask;$/;"	v
GdkEventMotion	stubs/gdkstub.c	/^} GdkEventMotion;$/;"	t
GdkEventNoExpose	stubs/gdkstub.c	/^} GdkEventNoExpose;$/;"	t
GdkEventProperty	stubs/gdkstub.c	/^} GdkEventProperty;$/;"	t
GdkEventProximity	stubs/gdkstub.c	/^} GdkEventProximity;$/;"	t
GdkEventSelection	stubs/gdkstub.c	/^} GdkEventSelection;$/;"	t
GdkEventType	stubs/gdkstub.c	/^} GdkEventType;$/;"	v
GdkEventVisibility	stubs/gdkstub.c	/^} GdkEventVisibility;$/;"	t
GdkExtensionMode	stubs/gdkstub.c	/^} GdkExtensionMode;$/;"	v
GdkFill	stubs/gdkstub.c	/^} GdkFill;$/;"	v
GdkFillRule	stubs/gdkstub.c	/^} GdkFillRule;$/;"	v
GdkFilterReturn	stubs/gdkstub.c	/^} GdkFilterReturn;$/;"	v
GdkFont	stubs/gdkstub.c	/^} GdkFont;$/;"	t
GdkFontType	stubs/gdkstub.c	/^} GdkFontType;$/;"	v
GdkFunction	stubs/gdkstub.c	/^} GdkFunction;$/;"	v
GdkGC	stubs/gdkstub.c	/^} GdkGC;$/;"	t
GdkGCValues	stubs/gdkstub.c	/^} GdkGCValues;$/;"	t
GdkGCValuesMask	stubs/gdkstub.c	/^} GdkGCValuesMask;$/;"	v
GdkGeometry	stubs/gdkstub.c	/^} GdkGeometry;$/;"	t
GdkICAttr	stubs/gdkstub.c	/^} GdkICAttr;$/;"	t
GdkICAttributesType	stubs/gdkstub.c	/^} GdkICAttributesType;$/;"	v
GdkIMStyle	stubs/gdkstub.c	/^} GdkIMStyle;$/;"	v
GdkImage	stubs/gdkstub.c	/^} GdkImage;$/;"	t
GdkImageType	stubs/gdkstub.c	/^} GdkImageType;$/;"	v
GdkInputCondition	stubs/gdkstub.c	/^} GdkInputCondition;$/;"	v
GdkInputMode	stubs/gdkstub.c	/^} GdkInputMode;$/;"	v
GdkInputSource	stubs/gdkstub.c	/^} GdkInputSource;$/;"	v
GdkJoinStyle	stubs/gdkstub.c	/^} GdkJoinStyle;$/;"	v
GdkLineStyle	stubs/gdkstub.c	/^} GdkLineStyle;$/;"	v
GdkModifierType	stubs/gdkstub.c	/^} GdkModifierType;$/;"	v
GdkNotifyType	stubs/gdkstub.c	/^} GdkNotifyType;$/;"	v
GdkOverlapType	stubs/gdkstub.c	/^} GdkOverlapType;$/;"	v
GdkPoint	stubs/gdkstub.c	/^} GdkPoint;$/;"	t
GdkPropMode	stubs/gdkstub.c	/^} GdkPropMode;$/;"	v
GdkPropertyState	stubs/gdkstub.c	/^} GdkPropertyState;$/;"	v
GdkRectangle	stubs/gdkstub.c	/^} GdkRectangle;$/;"	t
GdkRegion	stubs/gdkstub.c	/^} GdkRegion;$/;"	t
GdkRgbCmap	stubs/gdkstub.c	/^} GdkRgbCmap;;$/;"	t
GdkRgbDither	stubs/gdkstub.c	/^} GdkRgbDither;$/;"	v
GdkSegment	stubs/gdkstub.c	/^} GdkSegment;$/;"	t
GdkSelection	stubs/gdkstub.c	/^} GdkSelection;$/;"	v
GdkSelectionType	stubs/gdkstub.c	/^} GdkSelectionType;$/;"	v
GdkStatus	stubs/gdkstub.c	/^} GdkStatus;$/;"	v
GdkSubwindowMode	stubs/gdkstub.c	/^} GdkSubwindowMode;$/;"	v
GdkTarget	stubs/gdkstub.c	/^} GdkTarget;$/;"	v
GdkTimeCoord	stubs/gdkstub.c	/^} GdkTimeCoord;$/;"	t
GdkVisibilityState	stubs/gdkstub.c	/^} GdkVisibilityState;$/;"	v
GdkVisual	stubs/gdkstub.c	/^} GdkVisual;$/;"	t
GdkVisualType	stubs/gdkstub.c	/^} GdkVisualType;$/;"	v
GdkWChar	stubs/gdkstub.c	/^typedef guint32 GdkWChar;$/;"	t
GdkWMDecoration	stubs/gdkstub.c	/^} GdkWMDecoration;$/;"	v
GdkWMFunction	stubs/gdkstub.c	/^} GdkWMFunction;$/;"	v
GdkWindow	stubs/gdkstub.c	/^} GdkWindow;$/;"	t
GdkWindowAttr	stubs/gdkstub.c	/^} GdkWindowAttr;$/;"	t
GdkWindowAttributesType	stubs/gdkstub.c	/^} GdkWindowAttributesType;$/;"	v
GdkWindowClass	stubs/gdkstub.c	/^} GdkWindowClass;$/;"	v
GdkWindowHints	stubs/gdkstub.c	/^} GdkWindowHints;$/;"	v
GdkWindowType	stubs/gdkstub.c	/^} GdkWindowType;$/;"	v
GdkXEvent	stubs/gdkstub.c	/^typedef void GdkXEvent;  \/\* Can be cast to XEvent \*\/$/;"	t
GtkAccelEntry	stubs/gtkstub.c	/^} GtkAccelEntry;$/;"	t
GtkAccelFlags	stubs/gtkstub.c	/^} GtkAccelFlags;$/;"	v
GtkAccelGroup	stubs/gtkstub.c	/^} GtkAccelGroup;$/;"	t
GtkAccelLabel	stubs/gtkstub.c	/^} GtkAccelLabel;$/;"	t
GtkAccelLabelClass	stubs/gtkstub.c	/^} GtkAccelLabelClass;$/;"	t
GtkAdjustment	stubs/gtkstub.c	/^} GtkAdjustment;$/;"	t
GtkAdjustmentClass	stubs/gtkstub.c	/^} GtkAdjustmentClass;$/;"	t
GtkAlignment	stubs/gtkstub.c	/^} GtkAlignment;$/;"	t
GtkAlignmentClass	stubs/gtkstub.c	/^} GtkAlignmentClass;$/;"	t
GtkAllocation	stubs/gtkstub.c	/^} GtkAllocation;$/;"	t
GtkAnchorType	stubs/gtkstub.c	/^} GtkAnchorType;$/;"	v
GtkArg	stubs/gtkstub.c	/^} GtkArg;$/;"	t
GtkArgFlags	stubs/gtkstub.c	/^} GtkArgFlags;$/;"	v
GtkArgGetFunc	stubs/gtkstub.c	/^typedef void(\*GtkArgGetFunc) (GtkObject\*, GtkArg\*, guint)$/;"	f
GtkArgInfo	stubs/gtkstub.c	/^} GtkArgInfo;$/;"	t
GtkArgSetFunc	stubs/gtkstub.c	/^typedef void(\*GtkArgSetFunc) (GtkObject\*, GtkArg\*, guint)$/;"	f
GtkArrow	stubs/gtkstub.c	/^} GtkArrow;$/;"	t
GtkArrowClass	stubs/gtkstub.c	/^} GtkArrowClass;$/;"	t
GtkArrowType	stubs/gtkstub.c	/^} GtkArrowType;$/;"	v
GtkAspectFrame	stubs/gtkstub.c	/^} GtkAspectFrame;$/;"	t
GtkAspectFrameClass	stubs/gtkstub.c	/^} GtkAspectFrameClass;$/;"	t
GtkAttachOptions	stubs/gtkstub.c	/^} GtkAttachOptions;$/;"	v
GtkBin	stubs/gtkstub.c	/^} GtkBin;$/;"	t
GtkBinClass	stubs/gtkstub.c	/^} GtkBinClass;$/;"	t
GtkBindingArg	stubs/gtkstub.c	/^} GtkBindingArg;$/;"	t
GtkBindingEntry	stubs/gtkstub.c	/^} GtkBindingEntry;$/;"	t
GtkBindingSet	stubs/gtkstub.c	/^} GtkBindingSet;$/;"	t
GtkBindingSignal	stubs/gtkstub.c	/^} GtkBindingSignal;$/;"	t
GtkBox	stubs/gtkstub.c	/^} GtkBox;$/;"	t
GtkBoxChild	stubs/gtkstub.c	/^} GtkBoxChild;$/;"	t
GtkBoxClass	stubs/gtkstub.c	/^} GtkBoxClass;$/;"	t
GtkButton	stubs/gtkstub.c	/^} GtkButton;$/;"	t
GtkButtonAction	stubs/gtkstub.c	/^} GtkButtonAction;$/;"	v
GtkButtonBox	stubs/gtkstub.c	/^} GtkButtonBox;$/;"	t
GtkButtonBoxClass	stubs/gtkstub.c	/^} GtkButtonBoxClass;$/;"	t
GtkButtonBoxStyle	stubs/gtkstub.c	/^} GtkButtonBoxStyle;$/;"	v
GtkButtonClass	stubs/gtkstub.c	/^} GtkButtonClass;$/;"	t
GtkCList	stubs/gtkstub.c	/^} GtkCList;$/;"	t
GtkCListCellInfo	stubs/gtkstub.c	/^} GtkCListCellInfo;$/;"	t
GtkCListClass	stubs/gtkstub.c	/^} GtkCListClass;$/;"	t
GtkCListColumn	stubs/gtkstub.c	/^} GtkCListColumn;$/;"	t
GtkCListCompareFunc	stubs/gtkstub.c	/^typedef gint(\*GtkCListCompareFunc) (GtkCList \*clist, gconstpointer ptr1, gconstpointer ptr2)$/;"	f
GtkCListDestInfo	stubs/gtkstub.c	/^} GtkCListDestInfo;$/;"	t
GtkCListDragPos	stubs/gtkstub.c	/^} GtkCListDragPos;$/;"	v
GtkCListRow	stubs/gtkstub.c	/^} GtkCListRow;$/;"	t
GtkCTree	stubs/gtkstub.c	/^} GtkCTree;$/;"	t
GtkCTreeClass	stubs/gtkstub.c	/^} GtkCTreeClass;$/;"	t
GtkCTreeCompareDragFunc	stubs/gtkstub.c	/^typedef gboolean(\*GtkCTreeCompareDragFunc) (GtkCTree \*ctree, GtkCTreeNode \*source_node, GtkCTreeNode \*new_parent, GtkCTreeNode \*new_sibling)$/;"	f
GtkCTreeExpanderStyle	stubs/gtkstub.c	/^} GtkCTreeExpanderStyle;$/;"	v
GtkCTreeExpansionType	stubs/gtkstub.c	/^} GtkCTreeExpansionType;$/;"	v
GtkCTreeFunc	stubs/gtkstub.c	/^typedef void(\*GtkCTreeFunc) (GtkCTree \*ctree, GtkCTreeNode \*node, gpointer data)$/;"	f
GtkCTreeGNodeFunc	stubs/gtkstub.c	/^typedef gboolean(\*GtkCTreeGNodeFunc) (GtkCTree \*ctree, guint depth, GNode \*gnode, GtkCTreeNode \*cnode, gpointer data)$/;"	f
GtkCTreeLineStyle	stubs/gtkstub.c	/^} GtkCTreeLineStyle;$/;"	v
GtkCTreeNode	stubs/gtkstub.c	/^} GtkCTreeNode;$/;"	t
GtkCTreePos	stubs/gtkstub.c	/^} GtkCTreePos;$/;"	v
GtkCTreeRow	stubs/gtkstub.c	/^} GtkCTreeRow;$/;"	t
GtkCalendar	stubs/gtkstub.c	/^} GtkCalendar;$/;"	t
GtkCalendarClass	stubs/gtkstub.c	/^} GtkCalendarClass;$/;"	t
GtkCalendarDisplayOptions	stubs/gtkstub.c	/^} GtkCalendarDisplayOptions;$/;"	v
GtkCallback	stubs/gtkstub.c	/^typedef void(\*GtkCallback) (GtkWidget \*widget, gpointer data)$/;"	f
GtkCallbackMarshal	stubs/gtkstub.c	/^typedef void(\*GtkCallbackMarshal) (GtkObject \*object, gpointer data, guint n_args, GtkArg \*args)$/;"	f
GtkCell	stubs/gtkstub.c	/^} GtkCell;$/;"	t
GtkCellPixText	stubs/gtkstub.c	/^} GtkCellPixText;$/;"	t
GtkCellPixmap	stubs/gtkstub.c	/^} GtkCellPixmap;$/;"	t
GtkCellText	stubs/gtkstub.c	/^} GtkCellText;$/;"	t
GtkCellType	stubs/gtkstub.c	/^} GtkCellType;$/;"	v
GtkCellWidget	stubs/gtkstub.c	/^} GtkCellWidget;$/;"	t
GtkCheckButton	stubs/gtkstub.c	/^} GtkCheckButton;$/;"	t
GtkCheckButtonClass	stubs/gtkstub.c	/^} GtkCheckButtonClass;$/;"	t
GtkCheckMenuItem	stubs/gtkstub.c	/^} GtkCheckMenuItem;$/;"	t
GtkCheckMenuItemClass	stubs/gtkstub.c	/^} GtkCheckMenuItemClass;$/;"	t
GtkClassInitFunc	stubs/gtkstub.c	/^typedef void(\*GtkClassInitFunc) (gpointer klass)$/;"	f
GtkColorSelection	stubs/gtkstub.c	/^} GtkColorSelection;$/;"	t
GtkColorSelectionClass	stubs/gtkstub.c	/^} GtkColorSelectionClass;$/;"	t
GtkColorSelectionDialog	stubs/gtkstub.c	/^} GtkColorSelectionDialog;$/;"	t
GtkColorSelectionDialogClass	stubs/gtkstub.c	/^} GtkColorSelectionDialogClass;$/;"	t
GtkCombo	stubs/gtkstub.c	/^} GtkCombo;$/;"	t
GtkComboClass	stubs/gtkstub.c	/^} GtkComboClass;$/;"	t
GtkContainer	stubs/gtkstub.c	/^} GtkContainer;$/;"	t
GtkContainerClass	stubs/gtkstub.c	/^} GtkContainerClass;$/;"	t
GtkCornerType	stubs/gtkstub.c	/^} GtkCornerType;$/;"	v
GtkCurve	stubs/gtkstub.c	/^} GtkCurve;$/;"	t
GtkCurveClass	stubs/gtkstub.c	/^} GtkCurveClass;$/;"	t
GtkCurveType	stubs/gtkstub.c	/^} GtkCurveType;$/;"	v
GtkData	stubs/gtkstub.c	/^} GtkData;$/;"	t
GtkDataClass	stubs/gtkstub.c	/^} GtkDataClass;$/;"	t
GtkDebugFlag	stubs/gtkstub.c	/^} GtkDebugFlag;$/;"	v
GtkDestDefaults	stubs/gtkstub.c	/^} GtkDestDefaults;$/;"	v
GtkDestroyNotify	stubs/gtkstub.c	/^typedef void(\*GtkDestroyNotify) (gpointer data)$/;"	f
GtkDialog	stubs/gtkstub.c	/^} GtkDialog;$/;"	t
GtkDialogClass	stubs/gtkstub.c	/^} GtkDialogClass;$/;"	t
GtkDirectionType	stubs/gtkstub.c	/^} GtkDirectionType;$/;"	v
GtkDrawingArea	stubs/gtkstub.c	/^} GtkDrawingArea;$/;"	t
GtkDrawingAreaClass	stubs/gtkstub.c	/^} GtkDrawingAreaClass;$/;"	t
GtkEditable	stubs/gtkstub.c	/^} GtkEditable;$/;"	t
GtkEditableClass	stubs/gtkstub.c	/^} GtkEditableClass;$/;"	t
GtkEmissionHook	stubs/gtkstub.c	/^typedef gboolean(\*GtkEmissionHook) (GtkObject \*object, guint signal_id, guint n_params, GtkArg \*params, gpointer data)$/;"	f
GtkEntry	stubs/gtkstub.c	/^} GtkEntry;$/;"	t
GtkEntryClass	stubs/gtkstub.c	/^} GtkEntryClass;$/;"	t
GtkEnumValue	stubs/gtkstub.c	/^} GtkEnumValue;$/;"	t
GtkEventBox	stubs/gtkstub.c	/^} GtkEventBox;$/;"	t
GtkEventBoxClass	stubs/gtkstub.c	/^} GtkEventBoxClass;$/;"	t
GtkFileSelection	stubs/gtkstub.c	/^} GtkFileSelection;$/;"	t
GtkFileSelectionClass	stubs/gtkstub.c	/^} GtkFileSelectionClass;$/;"	t
GtkFixed	stubs/gtkstub.c	/^} GtkFixed;$/;"	t
GtkFixedChild	stubs/gtkstub.c	/^} GtkFixedChild;$/;"	t
GtkFixedClass	stubs/gtkstub.c	/^} GtkFixedClass;$/;"	t
GtkFontFilter	stubs/gtkstub.c	/^} GtkFontFilter;$/;"	t
GtkFontFilterType	stubs/gtkstub.c	/^} GtkFontFilterType;$/;"	v
GtkFontMetricType	stubs/gtkstub.c	/^} GtkFontMetricType;$/;"	v
GtkFontSelection	stubs/gtkstub.c	/^} GtkFontSelection;$/;"	t
GtkFontSelectionClass	stubs/gtkstub.c	/^} GtkFontSelectionClass;$/;"	t
GtkFontSelectionDialog	stubs/gtkstub.c	/^} GtkFontSelectionDialog;$/;"	t
GtkFontSelectionDialogClass	stubs/gtkstub.c	/^} GtkFontSelectionDialogClass;$/;"	t
GtkFontType	stubs/gtkstub.c	/^} GtkFontType;$/;"	v
GtkFrame	stubs/gtkstub.c	/^} GtkFrame;$/;"	t
GtkFrameClass	stubs/gtkstub.c	/^} GtkFrameClass;$/;"	t
GtkFunction	stubs/gtkstub.c	/^typedef gint(\*GtkFunction) (gpointer data)$/;"	f
GtkFundamentalType	stubs/gtkstub.c	/^} GtkFundamentalType;$/;"	v
GtkGammaCurve	stubs/gtkstub.c	/^} GtkGammaCurve;$/;"	t
GtkGammaCurveClass	stubs/gtkstub.c	/^} GtkGammaCurveClass;$/;"	t
GtkHBox	stubs/gtkstub.c	/^} GtkHBox;$/;"	t
GtkHBoxClass	stubs/gtkstub.c	/^} GtkHBoxClass;$/;"	t
GtkHButtonBox	stubs/gtkstub.c	/^} GtkHButtonBox;$/;"	t
GtkHButtonBoxClass	stubs/gtkstub.c	/^} GtkHButtonBoxClass;$/;"	t
GtkHPaned	stubs/gtkstub.c	/^} GtkHPaned;$/;"	t
GtkHPanedClass	stubs/gtkstub.c	/^} GtkHPanedClass;$/;"	t
GtkHRuler	stubs/gtkstub.c	/^} GtkHRuler;$/;"	t
GtkHRulerClass	stubs/gtkstub.c	/^} GtkHRulerClass;$/;"	t
GtkHScale	stubs/gtkstub.c	/^} GtkHScale;$/;"	t
GtkHScaleClass	stubs/gtkstub.c	/^} GtkHScaleClass;$/;"	t
GtkHScrollbar	stubs/gtkstub.c	/^} GtkHScrollbar;$/;"	t
GtkHScrollbarClass	stubs/gtkstub.c	/^} GtkHScrollbarClass;$/;"	t
GtkHSeparator	stubs/gtkstub.c	/^} GtkHSeparator;$/;"	t
GtkHSeparatorClass	stubs/gtkstub.c	/^} GtkHSeparatorClass;$/;"	t
GtkHandleBox	stubs/gtkstub.c	/^} GtkHandleBox;$/;"	t
GtkHandleBoxClass	stubs/gtkstub.c	/^} GtkHandleBoxClass;$/;"	t
GtkImage	stubs/gtkstub.c	/^} GtkImage;$/;"	t
GtkImageClass	stubs/gtkstub.c	/^} GtkImageClass;$/;"	t
GtkImageLoader	stubs/gtkstub.c	/^typedef GdkPixmap\* (\*GtkImageLoader) (GdkWindow \*window, GdkColormap \*colormap, GdkBitmap \*\*mask, GdkColor \*transparent_color, const gchar \*filename)$/;"	f
GtkInputDialog	stubs/gtkstub.c	/^} GtkInputDialog;$/;"	t
GtkInputDialogClass	stubs/gtkstub.c	/^} GtkInputDialogClass;$/;"	t
GtkInvisible	stubs/gtkstub.c	/^} GtkInvisible;$/;"	t
GtkInvisibleClass	stubs/gtkstub.c	/^} GtkInvisibleClass;$/;"	t
GtkItem	stubs/gtkstub.c	/^} GtkItem;$/;"	t
GtkItemClass	stubs/gtkstub.c	/^} GtkItemClass;$/;"	t
GtkItemFactory	stubs/gtkstub.c	/^} GtkItemFactory;$/;"	t
GtkItemFactoryCallback	stubs/gtkstub.c	/^typedef void(\*GtkItemFactoryCallback) ()$/;"	f
GtkItemFactoryCallback1	stubs/gtkstub.c	/^typedef void(\*GtkItemFactoryCallback1) (gpointer callback_data, guint callback_action, GtkWidget \*widget)$/;"	f
GtkItemFactoryCallback2	stubs/gtkstub.c	/^typedef void(\*GtkItemFactoryCallback2) (GtkWidget \*widget, gpointer callback_data, guint callback_action)$/;"	f
GtkItemFactoryClass	stubs/gtkstub.c	/^} GtkItemFactoryClass;$/;"	t
GtkItemFactoryEntry	stubs/gtkstub.c	/^} GtkItemFactoryEntry;$/;"	t
GtkItemFactoryItem	stubs/gtkstub.c	/^} GtkItemFactoryItem;$/;"	t
GtkJustification	stubs/gtkstub.c	/^} GtkJustification;$/;"	v
GtkKeySnoopFunc	stubs/gtkstub.c	/^typedef gint(\*GtkKeySnoopFunc) (GtkWidget \*grab_widget, GdkEventKey \*event, gpointer func_data)$/;"	f
GtkLabel	stubs/gtkstub.c	/^} GtkLabel;$/;"	t
GtkLabelClass	stubs/gtkstub.c	/^} GtkLabelClass;$/;"	t
GtkLayout	stubs/gtkstub.c	/^} GtkLayout;$/;"	t
GtkLayoutClass	stubs/gtkstub.c	/^} GtkLayoutClass;$/;"	t
GtkList	stubs/gtkstub.c	/^} GtkList;$/;"	t
GtkListClass	stubs/gtkstub.c	/^} GtkListClass;$/;"	t
GtkListItem	stubs/gtkstub.c	/^} GtkListItem;$/;"	t
GtkListItemClass	stubs/gtkstub.c	/^} GtkListItemClass;$/;"	t
GtkMatchType	stubs/gtkstub.c	/^} GtkMatchType;$/;"	v
GtkMenu	stubs/gtkstub.c	/^} GtkMenu;$/;"	t
GtkMenuBar	stubs/gtkstub.c	/^} GtkMenuBar;$/;"	t
GtkMenuBarClass	stubs/gtkstub.c	/^} GtkMenuBarClass;$/;"	t
GtkMenuCallback	stubs/gtkstub.c	/^typedef void(\*GtkMenuCallback) (GtkWidget \*widget, gpointer user_data)$/;"	f
GtkMenuClass	stubs/gtkstub.c	/^} GtkMenuClass;$/;"	t
GtkMenuDetachFunc	stubs/gtkstub.c	/^typedef void(\*GtkMenuDetachFunc) (GtkWidget \*attach_widget, GtkMenu \*menu)$/;"	f
GtkMenuDirectionType	stubs/gtkstub.c	/^} GtkMenuDirectionType;$/;"	v
GtkMenuEntry	stubs/gtkstub.c	/^} GtkMenuEntry;$/;"	t
GtkMenuFactory	stubs/gtkstub.c	/^} GtkMenuFactory;$/;"	t
GtkMenuFactoryType	stubs/gtkstub.c	/^} GtkMenuFactoryType;$/;"	v
GtkMenuItem	stubs/gtkstub.c	/^} GtkMenuItem;$/;"	t
GtkMenuItemClass	stubs/gtkstub.c	/^} GtkMenuItemClass;$/;"	t
GtkMenuPath	stubs/gtkstub.c	/^} GtkMenuPath;$/;"	t
GtkMenuPositionFunc	stubs/gtkstub.c	/^typedef void(\*GtkMenuPositionFunc) (GtkMenu \*menu, gint \*x, gint \*y, gpointer user_data)$/;"	f
GtkMenuShell	stubs/gtkstub.c	/^} GtkMenuShell;$/;"	t
GtkMenuShellClass	stubs/gtkstub.c	/^} GtkMenuShellClass;$/;"	t
GtkMetricType	stubs/gtkstub.c	/^} GtkMetricType;$/;"	v
GtkMisc	stubs/gtkstub.c	/^} GtkMisc;$/;"	t
GtkMiscClass	stubs/gtkstub.c	/^} GtkMiscClass;$/;"	t
GtkModuleInitFunc	stubs/gtkstub.c	/^typedef void(\*GtkModuleInitFunc) (gint \*argc, gchar \*\*\*argv)$/;"	f
GtkNotebook	stubs/gtkstub.c	/^} GtkNotebook;$/;"	t
GtkNotebookClass	stubs/gtkstub.c	/^} GtkNotebookClass;$/;"	t
GtkNotebookPage	stubs/gtkstub.c	/^} GtkNotebookPage;$/;"	t
GtkObject	stubs/gtkstub.c	/^} GtkObject;$/;"	t
GtkObjectClass	stubs/gtkstub.c	/^} GtkObjectClass;$/;"	t
GtkObjectFlags	stubs/gtkstub.c	/^} GtkObjectFlags;$/;"	v
GtkObjectInitFunc	stubs/gtkstub.c	/^typedef void(\*GtkObjectInitFunc) (gpointer object, gpointer klass)$/;"	f
GtkOptionMenu	stubs/gtkstub.c	/^} GtkOptionMenu;$/;"	t
GtkOptionMenuClass	stubs/gtkstub.c	/^} GtkOptionMenuClass;$/;"	t
GtkOrientation	stubs/gtkstub.c	/^} GtkOrientation;$/;"	v
GtkPackType	stubs/gtkstub.c	/^} GtkPackType;$/;"	v
GtkPacker	stubs/gtkstub.c	/^} GtkPacker;$/;"	t
GtkPackerChild	stubs/gtkstub.c	/^} GtkPackerChild;$/;"	t
GtkPackerClass	stubs/gtkstub.c	/^} GtkPackerClass;$/;"	t
GtkPackerOptions	stubs/gtkstub.c	/^} GtkPackerOptions;$/;"	v
GtkPaned	stubs/gtkstub.c	/^} GtkPaned;$/;"	t
GtkPanedClass	stubs/gtkstub.c	/^} GtkPanedClass;$/;"	t
GtkPathPriorityType	stubs/gtkstub.c	/^} GtkPathPriorityType;$/;"	v
GtkPathType	stubs/gtkstub.c	/^} GtkPathType;$/;"	v
GtkPatternSpec	stubs/gtkstub.c	/^} GtkPatternSpec;$/;"	t
GtkPixmap	stubs/gtkstub.c	/^} GtkPixmap;$/;"	t
GtkPixmapClass	stubs/gtkstub.c	/^} GtkPixmapClass;$/;"	t
GtkPlug	stubs/gtkstub.c	/^} GtkPlug;$/;"	t
GtkPlugClass	stubs/gtkstub.c	/^} GtkPlugClass;$/;"	t
GtkPolicyType	stubs/gtkstub.c	/^} GtkPolicyType;$/;"	v
GtkPositionType	stubs/gtkstub.c	/^} GtkPositionType;$/;"	v
GtkPreview	stubs/gtkstub.c	/^} GtkPreview;$/;"	t
GtkPreviewClass	stubs/gtkstub.c	/^} GtkPreviewClass;$/;"	t
GtkPreviewInfo	stubs/gtkstub.c	/^} GtkPreviewInfo;$/;"	t
GtkPreviewType	stubs/gtkstub.c	/^} GtkPreviewType;$/;"	v
GtkPrintFunc	stubs/gtkstub.c	/^typedef void(\*GtkPrintFunc) (gpointer func_data, gchar \*str)$/;"	f
GtkPrivateFlags	stubs/gtkstub.c	/^} GtkPrivateFlags;$/;"	v
GtkProgress	stubs/gtkstub.c	/^} GtkProgress;$/;"	t
GtkProgressBar	stubs/gtkstub.c	/^} GtkProgressBar;$/;"	t
GtkProgressBarClass	stubs/gtkstub.c	/^} GtkProgressBarClass;$/;"	t
GtkProgressBarOrientation	stubs/gtkstub.c	/^} GtkProgressBarOrientation;$/;"	v
GtkProgressBarStyle	stubs/gtkstub.c	/^} GtkProgressBarStyle;$/;"	v
GtkProgressClass	stubs/gtkstub.c	/^} GtkProgressClass;$/;"	t
GtkPropertyMark	stubs/gtkstub.c	/^} GtkPropertyMark;$/;"	t
GtkRadioButton	stubs/gtkstub.c	/^} GtkRadioButton;$/;"	t
GtkRadioButtonClass	stubs/gtkstub.c	/^} GtkRadioButtonClass;$/;"	t
GtkRadioMenuItem	stubs/gtkstub.c	/^} GtkRadioMenuItem;$/;"	t
GtkRadioMenuItemClass	stubs/gtkstub.c	/^} GtkRadioMenuItemClass;$/;"	t
GtkRange	stubs/gtkstub.c	/^} GtkRange;$/;"	t
GtkRangeClass	stubs/gtkstub.c	/^} GtkRangeClass;$/;"	t
GtkRcFlags	stubs/gtkstub.c	/^} GtkRcFlags;$/;"	v
GtkRcStyle	stubs/gtkstub.c	/^} GtkRcStyle;$/;"	t
GtkRcTokenType	stubs/gtkstub.c	/^} GtkRcTokenType;$/;"	v
GtkReliefStyle	stubs/gtkstub.c	/^} GtkReliefStyle;$/;"	v
GtkRequisition	stubs/gtkstub.c	/^} GtkRequisition;$/;"	t
GtkResizeMode	stubs/gtkstub.c	/^} GtkResizeMode;$/;"	v
GtkRuler	stubs/gtkstub.c	/^} GtkRuler;$/;"	t
GtkRulerClass	stubs/gtkstub.c	/^} GtkRulerClass;$/;"	t
GtkRulerMetric	stubs/gtkstub.c	/^} GtkRulerMetric;$/;"	t
GtkScale	stubs/gtkstub.c	/^} GtkScale;$/;"	t
GtkScaleClass	stubs/gtkstub.c	/^} GtkScaleClass;$/;"	t
GtkScrollType	stubs/gtkstub.c	/^} GtkScrollType;$/;"	v
GtkScrollbar	stubs/gtkstub.c	/^} GtkScrollbar;$/;"	t
GtkScrollbarClass	stubs/gtkstub.c	/^} GtkScrollbarClass;$/;"	t
GtkScrolledWindow	stubs/gtkstub.c	/^} GtkScrolledWindow;$/;"	t
GtkScrolledWindowClass	stubs/gtkstub.c	/^} GtkScrolledWindowClass;$/;"	t
GtkSelectionData	stubs/gtkstub.c	/^} GtkSelectionData;$/;"	t
GtkSelectionMode	stubs/gtkstub.c	/^} GtkSelectionMode;$/;"	v
GtkSeparator	stubs/gtkstub.c	/^} GtkSeparator;$/;"	t
GtkSeparatorClass	stubs/gtkstub.c	/^} GtkSeparatorClass;$/;"	t
GtkShadowType	stubs/gtkstub.c	/^} GtkShadowType;$/;"	v
GtkSideType	stubs/gtkstub.c	/^} GtkSideType;$/;"	v
GtkSignalDestroy	stubs/gtkstub.c	/^typedef void(\*GtkSignalDestroy) (gpointer data)$/;"	f
GtkSignalFunc	stubs/gtkstub.c	/^typedef void(\*GtkSignalFunc) ()$/;"	f
GtkSignalMarshal	stubs/gtkstub.c	/^typedef void(\*GtkSignalMarshal) (GtkObject \*object, gpointer data, guint nparams, GtkArg \*args, GtkType \*arg_types, GtkType return_type)$/;"	f
GtkSignalMarshaller	stubs/gtkstub.c	/^typedef void(\*GtkSignalMarshaller) (GtkObject \*object, GtkSignalFunc func, gpointer func_data, GtkArg \*args)$/;"	f
GtkSignalRunType	stubs/gtkstub.c	/^} GtkSignalRunType;$/;"	v
GtkSocket	stubs/gtkstub.c	/^} GtkSocket;$/;"	t
GtkSocketClass	stubs/gtkstub.c	/^} GtkSocketClass;$/;"	t
GtkSortType	stubs/gtkstub.c	/^} GtkSortType;$/;"	v
GtkSpinButton	stubs/gtkstub.c	/^} GtkSpinButton;$/;"	t
GtkSpinButtonClass	stubs/gtkstub.c	/^} GtkSpinButtonClass;$/;"	t
GtkSpinButtonUpdatePolicy	stubs/gtkstub.c	/^} GtkSpinButtonUpdatePolicy;$/;"	v
GtkSpinType	stubs/gtkstub.c	/^} GtkSpinType;$/;"	v
GtkStateType	stubs/gtkstub.c	/^} GtkStateType;$/;"	v
GtkStatusbar	stubs/gtkstub.c	/^} GtkStatusbar;$/;"	t
GtkStatusbarClass	stubs/gtkstub.c	/^} GtkStatusbarClass;$/;"	t
GtkStatusbarMsg	stubs/gtkstub.c	/^} GtkStatusbarMsg;$/;"	t
GtkStyle	stubs/gtkstub.c	/^} GtkStyle;$/;"	t
GtkStyleClass	stubs/gtkstub.c	/^} GtkStyleClass;$/;"	t
GtkSubmenuDirection	stubs/gtkstub.c	/^} GtkSubmenuDirection;$/;"	v
GtkSubmenuPlacement	stubs/gtkstub.c	/^} GtkSubmenuPlacement;$/;"	v
GtkTable	stubs/gtkstub.c	/^} GtkTable;$/;"	t
GtkTableChild	stubs/gtkstub.c	/^} GtkTableChild;$/;"	t
GtkTableClass	stubs/gtkstub.c	/^} GtkTableClass;$/;"	t
GtkTableRowCol	stubs/gtkstub.c	/^} GtkTableRowCol;$/;"	t
GtkTargetEntry	stubs/gtkstub.c	/^} GtkTargetEntry;$/;"	t
GtkTargetFlags	stubs/gtkstub.c	/^} GtkTargetFlags;$/;"	v
GtkTargetList	stubs/gtkstub.c	/^} GtkTargetList;$/;"	t
GtkTargetPair	stubs/gtkstub.c	/^} GtkTargetPair;$/;"	t
GtkTearoffMenuItem	stubs/gtkstub.c	/^} GtkTearoffMenuItem;$/;"	t
GtkTearoffMenuItemClass	stubs/gtkstub.c	/^} GtkTearoffMenuItemClass;$/;"	t
GtkText	stubs/gtkstub.c	/^} GtkText;$/;"	t
GtkTextClass	stubs/gtkstub.c	/^} GtkTextClass;$/;"	t
GtkThemeEngine	stubs/gtkstub.c	/^} GtkThemeEngine;$/;"	t
GtkToggleButton	stubs/gtkstub.c	/^} GtkToggleButton;$/;"	t
GtkToggleButtonClass	stubs/gtkstub.c	/^} GtkToggleButtonClass;$/;"	t
GtkToolbar	stubs/gtkstub.c	/^} GtkToolbar;$/;"	t
GtkToolbarChild	stubs/gtkstub.c	/^} GtkToolbarChild;$/;"	t
GtkToolbarChildType	stubs/gtkstub.c	/^} GtkToolbarChildType;$/;"	v
GtkToolbarClass	stubs/gtkstub.c	/^} GtkToolbarClass;$/;"	t
GtkToolbarSpaceStyle	stubs/gtkstub.c	/^} GtkToolbarSpaceStyle;$/;"	v
GtkToolbarStyle	stubs/gtkstub.c	/^} GtkToolbarStyle;$/;"	v
GtkTooltips	stubs/gtkstub.c	/^} GtkTooltips;$/;"	t
GtkTooltipsClass	stubs/gtkstub.c	/^} GtkTooltipsClass;$/;"	t
GtkTooltipsData	stubs/gtkstub.c	/^} GtkTooltipsData;$/;"	t
GtkTranslateFunc	stubs/gtkstub.c	/^typedef gchar \* (\*GtkTranslateFunc) (const gchar \*path, gpointer func_data)$/;"	f
GtkTree	stubs/gtkstub.c	/^} GtkTree;$/;"	t
GtkTreeClass	stubs/gtkstub.c	/^} GtkTreeClass;$/;"	t
GtkTreeItem	stubs/gtkstub.c	/^} GtkTreeItem;$/;"	t
GtkTreeItemClass	stubs/gtkstub.c	/^} GtkTreeItemClass;$/;"	t
GtkTreeViewMode	stubs/gtkstub.c	/^} GtkTreeViewMode;$/;"	v
GtkTroughType	stubs/gtkstub.c	/^} GtkTroughType;$/;"	v
GtkType	stubs/gtkstub.c	2663;"	struct:GtkContainerClass
GtkType	stubs/gtkstub.c	/^typedef guint GtkType;$/;"	t
GtkTypeClass	stubs/gtkstub.c	/^} GtkTypeClass;$/;"	t
GtkTypeInfo	stubs/gtkstub.c	/^} GtkTypeInfo;$/;"	t
GtkTypeObject	stubs/gtkstub.c	/^} GtkTypeObject;$/;"	t
GtkTypeQuery	stubs/gtkstub.c	/^} GtkTypeQuery;$/;"	t
GtkUpdateType	stubs/gtkstub.c	/^} GtkUpdateType;$/;"	v
GtkVBox	stubs/gtkstub.c	/^} GtkVBox;$/;"	t
GtkVBoxClass	stubs/gtkstub.c	/^} GtkVBoxClass;$/;"	t
GtkVButtonBox	stubs/gtkstub.c	/^} GtkVButtonBox;$/;"	t
GtkVButtonBoxClass	stubs/gtkstub.c	/^} GtkVButtonBoxClass;$/;"	t
GtkVPaned	stubs/gtkstub.c	/^} GtkVPaned;$/;"	t
GtkVPanedClass	stubs/gtkstub.c	/^} GtkVPanedClass;$/;"	t
GtkVRuler	stubs/gtkstub.c	/^} GtkVRuler;$/;"	t
GtkVRulerClass	stubs/gtkstub.c	/^} GtkVRulerClass;$/;"	t
GtkVScale	stubs/gtkstub.c	/^} GtkVScale;$/;"	t
GtkVScaleClass	stubs/gtkstub.c	/^} GtkVScaleClass;$/;"	t
GtkVScrollbar	stubs/gtkstub.c	/^} GtkVScrollbar;$/;"	t
GtkVScrollbarClass	stubs/gtkstub.c	/^} GtkVScrollbarClass;$/;"	t
GtkVSeparator	stubs/gtkstub.c	/^} GtkVSeparator;$/;"	t
GtkVSeparatorClass	stubs/gtkstub.c	/^} GtkVSeparatorClass;$/;"	t
GtkViewport	stubs/gtkstub.c	/^} GtkViewport;$/;"	t
GtkViewportClass	stubs/gtkstub.c	/^} GtkViewportClass;$/;"	t
GtkVisibility	stubs/gtkstub.c	/^} GtkVisibility;$/;"	v
GtkWidget	stubs/gtkstub.c	/^} GtkWidget;$/;"	t
GtkWidgetAuxInfo	stubs/gtkstub.c	/^} GtkWidgetAuxInfo;$/;"	t
GtkWidgetClass	stubs/gtkstub.c	/^} GtkWidgetClass;$/;"	t
GtkWidgetFlags	stubs/gtkstub.c	/^} GtkWidgetFlags;$/;"	v
GtkWidgetShapeInfo	stubs/gtkstub.c	/^} GtkWidgetShapeInfo;$/;"	t
GtkWindow	stubs/gtkstub.c	/^} GtkWindow;$/;"	t
GtkWindowClass	stubs/gtkstub.c	/^} GtkWindowClass;$/;"	t
GtkWindowPosition	stubs/gtkstub.c	/^} GtkWindowPosition;$/;"	v
GtkWindowType	stubs/gtkstub.c	/^} GtkWindowType;$/;"	v
HISTCOUNTER	stubs/unixstub.c	3631;"	d
HISTFRACTION	stubs/unixstub.c	3637;"	d
HOST_STACK_END_ADDR	stubs/unixstub.c	6964;"	d
HOST_TEXT_START_ADDR	stubs/unixstub.c	6967;"	d
HeightMMOfScreen	stubs/xlibstub.c	102;"	d
HeightOfScreen	stubs/xlibstub.c	105;"	d
INFINITY	stubs/unixstub.c	7084;"	d
INIT	stubs/unixstub.c	2242;"	enum:snd_pcm_plugin_action_t
INITQFNAMES	stubs/unixstub.c	4786;"	d
INTERNAL_MARK	stubs/unixstub.c	5608;"	d
INTERNAL_NOPRI	stubs/unixstub.c	5615;"	d
ITIMER_PROF	stubs/unixstub.c	5911;"	d
ITIMER_PROF	stubs/unixstub.c	/^    ITIMER_PROF = 2$/;"	v
ITIMER_REAL	stubs/unixstub.c	5917;"	d
ITIMER_VIRTUAL	stubs/unixstub.c	5922;"	d
ImageByteOrder	stubs/xlibstub.c	108;"	d
IsCursorKey	stubs/xlibstub.c	189;"	d
IsFunctionKey	stubs/xlibstub.c	195;"	d
IsKeypadKey	stubs/xlibstub.c	183;"	d
IsMiscFunctionKey	stubs/xlibstub.c	198;"	d
IsModifierKey	stubs/xlibstub.c	201;"	d
IsPFKey	stubs/xlibstub.c	192;"	d
IsPrivateKeypadKey	stubs/xlibstub.c	186;"	d
KeyCode	stubs/xlibstub.c	/^typedef unsigned char KeyCode;$/;"	t
KeySym	stubs/xlibstub.c	/^typedef XID KeySym;$/;"	t
LOCK_EX	stubs/unixstub.c	3566;"	d
LOCK_NB	stubs/unixstub.c	3569;"	d
LOCK_SH	stubs/unixstub.c	3572;"	d
LOCK_UN	stubs/unixstub.c	3575;"	d
LOG_ALERT	stubs/unixstub.c	5618;"	d
LOG_AUTH	stubs/unixstub.c	5621;"	d
LOG_AUTHPRIV	stubs/unixstub.c	5624;"	d
LOG_CONS	stubs/unixstub.c	5627;"	d
LOG_CRIT	stubs/unixstub.c	5630;"	d
LOG_CRON	stubs/unixstub.c	5633;"	d
LOG_DAEMON	stubs/unixstub.c	5636;"	d
LOG_DEBUG	stubs/unixstub.c	5639;"	d
LOG_EMERG	stubs/unixstub.c	5651;"	d
LOG_ERR	stubs/unixstub.c	5654;"	d
LOG_FAC	stubs/unixstub.c	5658;"	d
LOG_FACMASK	stubs/unixstub.c	5661;"	d
LOG_FTP	stubs/unixstub.c	5664;"	d
LOG_INFO	stubs/unixstub.c	5667;"	d
LOG_KERN	stubs/unixstub.c	5671;"	d
LOG_LOCAL0	stubs/unixstub.c	5675;"	d
LOG_LOCAL1	stubs/unixstub.c	5678;"	d
LOG_LOCAL2	stubs/unixstub.c	5681;"	d
LOG_LOCAL3	stubs/unixstub.c	5684;"	d
LOG_LOCAL4	stubs/unixstub.c	5687;"	d
LOG_LOCAL5	stubs/unixstub.c	5690;"	d
LOG_LOCAL6	stubs/unixstub.c	5693;"	d
LOG_LOCAL7	stubs/unixstub.c	5696;"	d
LOG_LPR	stubs/unixstub.c	5699;"	d
LOG_MAIL	stubs/unixstub.c	5702;"	d
LOG_MAKEPRI	stubs/unixstub.c	5705;"	d
LOG_MASK	stubs/unixstub.c	5711;"	d
LOG_NDELAY	stubs/unixstub.c	5714;"	d
LOG_NEWS	stubs/unixstub.c	5717;"	d
LOG_NFACILITIES	stubs/unixstub.c	5720;"	d
LOG_NOTICE	stubs/unixstub.c	5723;"	d
LOG_NOWAIT	stubs/unixstub.c	5726;"	d
LOG_ODELAY	stubs/unixstub.c	5729;"	d
LOG_PERROR	stubs/unixstub.c	5732;"	d
LOG_PID	stubs/unixstub.c	5741;"	d
LOG_PRI	stubs/unixstub.c	5745;"	d
LOG_PRIMASK	stubs/unixstub.c	5748;"	d
LOG_SYSLOG	stubs/unixstub.c	5752;"	d
LOG_UPTO	stubs/unixstub.c	5755;"	d
LOG_USER	stubs/unixstub.c	5758;"	d
LOG_UUCP	stubs/unixstub.c	5761;"	d
LOG_WARNING	stubs/unixstub.c	5764;"	d
L_INCR	stubs/unixstub.c	652;"	d
L_INCR	stubs/unixstub.c	3578;"	d
L_SET	stubs/unixstub.c	656;"	d
L_SET	stubs/unixstub.c	3581;"	d
L_XTND	stubs/unixstub.c	659;"	d
L_XTND	stubs/unixstub.c	3584;"	d
LastKnownRequestProcessed	stubs/xlibstub.c	111;"	d
MAP_FAILED	stubs/unixstub.c	3930;"	d
MAX	stubs/glibstub.c	122;"	d
MAX	stubs/unixstub.c	4475;"	d
MAXARCS	stubs/unixstub.c	3640;"	d
MAXPATHLEN	stubs/unixstub.c	4478;"	d
MAXQUOTAS	stubs/unixstub.c	4793;"	d
MAXSYMLINKS	stubs/unixstub.c	4481;"	d
MAXTC	stubs/unixstub.c	6131;"	d
MAX_DQ_TIME	stubs/unixstub.c	4796;"	d
MAX_IQ_TIME	stubs/unixstub.c	4808;"	d
MIN	stubs/glibstub.c	125;"	d
MIN	stubs/unixstub.c	4485;"	d
MINARCS	stubs/unixstub.c	3643;"	d
MNT_FORCE	stubs/unixstub.c	/^  MNT_FORCE = 1			\/\* Force unmounting\.  \*\/$/;"	v
MOD_CLKA	stubs/unixstub.c	6134;"	d
MOD_CLKB	stubs/unixstub.c	6137;"	d
MOD_ESTERROR	stubs/unixstub.c	6140;"	d
MOD_FREQUENCY	stubs/unixstub.c	6143;"	d
MOD_MAXERROR	stubs/unixstub.c	6146;"	d
MOD_OFFSET	stubs/unixstub.c	6150;"	d
MOD_STATUS	stubs/unixstub.c	6153;"	d
MOD_TIMECONST	stubs/unixstub.c	6156;"	d
MS_MGC_MSK	stubs/unixstub.c	4010;"	d
MS_MGC_VAL	stubs/unixstub.c	4013;"	d
MS_RDONLY	stubs/unixstub.c	/^  MS_RDONLY = 1,		\/\* Mount read-only\.  \*\/$/;"	v
MS_RMT_MASK	stubs/unixstub.c	4017;"	d
MTBSF	stubs/unixstub.c	4091;"	d
MTBSFM	stubs/unixstub.c	4094;"	d
MTBSR	stubs/unixstub.c	4097;"	d
MTBSS	stubs/unixstub.c	4100;"	d
MTCOMPRESSION	stubs/unixstub.c	4103;"	d
MTEOM	stubs/unixstub.c	4106;"	d
MTERASE	stubs/unixstub.c	4037;"	d
MTERASE	stubs/unixstub.c	4113;"	d
MTFSF	stubs/unixstub.c	4116;"	d
MTFSFM	stubs/unixstub.c	4119;"	d
MTFSR	stubs/unixstub.c	4122;"	d
MTFSS	stubs/unixstub.c	4126;"	d
MTIOCGET	stubs/unixstub.c	4129;"	d
MTIOCGETCONFIG	stubs/unixstub.c	4134;"	d
MTIOCPOS	stubs/unixstub.c	4137;"	d
MTIOCSETCONFIG	stubs/unixstub.c	4140;"	d
MTIOCTOP	stubs/unixstub.c	4144;"	d
MTLOAD	stubs/unixstub.c	4147;"	d
MTLOCK	stubs/unixstub.c	4150;"	d
MTMKPART	stubs/unixstub.c	4153;"	d
MTNOP	stubs/unixstub.c	4156;"	d
MTOFFL	stubs/unixstub.c	4159;"	d
MTRAS1	stubs/unixstub.c	4162;"	d
MTRAS2	stubs/unixstub.c	4165;"	d
MTRAS3	stubs/unixstub.c	4168;"	d
MTRESET	stubs/unixstub.c	4172;"	d
MTRETEN	stubs/unixstub.c	4175;"	d
MTREW	stubs/unixstub.c	4178;"	d
MTSEEK	stubs/unixstub.c	4181;"	d
MTSETBLK	stubs/unixstub.c	4184;"	d
MTSETDENSITY	stubs/unixstub.c	4187;"	d
MTSETDRVBUFFER	stubs/unixstub.c	4190;"	d
MTSETPART	stubs/unixstub.c	4193;"	d
MTTELL	stubs/unixstub.c	4196;"	d
MTUNLOAD	stubs/unixstub.c	4199;"	d
MTUNLOCK	stubs/unixstub.c	4202;"	d
MTWEOF	stubs/unixstub.c	4205;"	d
MTWSM	stubs/unixstub.c	4208;"	d
MT_ISARCHIVESC499	stubs/unixstub.c	4211;"	d
MT_ISARCHIVE_2060L	stubs/unixstub.c	4214;"	d
MT_ISARCHIVE_2150L	stubs/unixstub.c	4217;"	d
MT_ISARCHIVE_5945L2	stubs/unixstub.c	4220;"	d
MT_ISARCHIVE_VP60I	stubs/unixstub.c	4223;"	d
MT_ISCMSJ500	stubs/unixstub.c	4226;"	d
MT_ISDDS1	stubs/unixstub.c	4229;"	d
MT_ISDDS2	stubs/unixstub.c	4232;"	d
MT_ISEVEREX_FT40A	stubs/unixstub.c	4236;"	d
MT_ISFTAPE_FLAG	stubs/unixstub.c	4239;"	d
MT_ISFTAPE_UNKNOWN	stubs/unixstub.c	4244;"	d
MT_ISQIC02	stubs/unixstub.c	4247;"	d
MT_ISQIC02_ALL_FEATURES	stubs/unixstub.c	4250;"	d
MT_ISSCSI1	stubs/unixstub.c	4253;"	d
MT_ISSCSI2	stubs/unixstub.c	4256;"	d
MT_ISTDC3610	stubs/unixstub.c	4259;"	d
MT_ISTEAC_MT2ST	stubs/unixstub.c	4262;"	d
MT_ISUNKNOWN	stubs/unixstub.c	4267;"	d
MT_ISWT5099EEN24	stubs/unixstub.c	4270;"	d
MT_ISWT5150	stubs/unixstub.c	4273;"	d
MT_ST_ASYNC_WRITES	stubs/unixstub.c	4276;"	d
MT_ST_AUTO_LOCK	stubs/unixstub.c	4279;"	d
MT_ST_BLKSIZE_MASK	stubs/unixstub.c	4282;"	d
MT_ST_BLKSIZE_SHIFT	stubs/unixstub.c	4286;"	d
MT_ST_BOOLEANS	stubs/unixstub.c	4289;"	d
MT_ST_BUFFER_WRITES	stubs/unixstub.c	4292;"	d
MT_ST_CAN_BSR	stubs/unixstub.c	4295;"	d
MT_ST_CAN_PARTITIONS	stubs/unixstub.c	4298;"	d
MT_ST_CLEARBOOLEANS	stubs/unixstub.c	4301;"	d
MT_ST_CLEAR_DEFAULT	stubs/unixstub.c	4305;"	d
MT_ST_DEBUGGING	stubs/unixstub.c	4308;"	d
MT_ST_DEF_BLKSIZE	stubs/unixstub.c	4311;"	d
MT_ST_DEF_COMPRESSION	stubs/unixstub.c	4314;"	d
MT_ST_DEF_DENSITY	stubs/unixstub.c	4317;"	d
MT_ST_DEF_DRVBUFFER	stubs/unixstub.c	4320;"	d
MT_ST_DEF_OPTIONS	stubs/unixstub.c	4323;"	d
MT_ST_DEF_WRITES	stubs/unixstub.c	4326;"	d
MT_ST_DENSITY_MASK	stubs/unixstub.c	4329;"	d
MT_ST_DENSITY_SHIFT	stubs/unixstub.c	4332;"	d
MT_ST_FAST_MTEOM	stubs/unixstub.c	4335;"	d
MT_ST_HPLOADER_OFFSET	stubs/unixstub.c	4339;"	d
MT_ST_NO_BLKLIMS	stubs/unixstub.c	4342;"	d
MT_ST_OPTIONS	stubs/unixstub.c	4346;"	d
MT_ST_READ_AHEAD	stubs/unixstub.c	4349;"	d
MT_ST_SCSI2LOGICAL	stubs/unixstub.c	4352;"	d
MT_ST_SETBOOLEANS	stubs/unixstub.c	4355;"	d
MT_ST_SOFTERR_MASK	stubs/unixstub.c	4358;"	d
MT_ST_SOFTERR_SHIFT	stubs/unixstub.c	4361;"	d
MT_ST_TWO_FM	stubs/unixstub.c	4364;"	d
MT_ST_WRITE_THRESHOLD	stubs/unixstub.c	4367;"	d
MT_TAPE_INFO	stubs/unixstub.c	4370;"	d
Mask	stubs/xlibstub.c	/^typedef CARD32 Mask;$/;"	t
MaxCmapsOfScreen	stubs/xlibstub.c	114;"	d
MinCmapsOfScreen	stubs/xlibstub.c	117;"	d
NBBY	stubs/unixstub.c	4488;"	d
NBPG	stubs/unixstub.c	6970;"	d
NCARGS	stubs/unixstub.c	4491;"	d
NFDBITS	stubs/unixstub.c	5105;"	d
NGREG	stubs/unixstub.c	6677;"	d
NGROUPS	stubs/unixstub.c	4494;"	d
NOFILE	stubs/unixstub.c	4500;"	d
NR_DQHASH	stubs/unixstub.c	4811;"	d
NR_DQUOTS	stubs/unixstub.c	4814;"	d
NULL	stubs/ansistub.c	12;"	d
NULL	stubs/gtkstub.c	11414;"	struct:GtkThemeEngine
NULL	stubs/gtkstub.c	13688;"	struct:GtkWidget
NextRequest	stubs/xlibstub.c	120;"	d
NotifyDetailNone	stubs/xlibstub.c	629;"	struct:XFocusChangeEvent
NotifyInferior	stubs/xlibstub.c	609;"	struct:XCrossingEvent
NotifyInferior	stubs/xlibstub.c	629;"	struct:XFocusChangeEvent
NotifyNonlinear	stubs/xlibstub.c	609;"	struct:XCrossingEvent
NotifyNonlinear	stubs/xlibstub.c	629;"	struct:XFocusChangeEvent
NotifyNonlinearVirtual	stubs/xlibstub.c	629;"	struct:XFocusChangeEvent
NotifyPointer	stubs/xlibstub.c	629;"	struct:XFocusChangeEvent
NotifyPointerRoot	stubs/xlibstub.c	629;"	struct:XFocusChangeEvent
ORIG_EAX	stubs/unixstub.c	5040;"	d
O_ACCMODE	stubs/unixstub.c	388;"	d
O_APPEND	stubs/unixstub.c	412;"	d
O_ASYNC	stubs/unixstub.c	427;"	d
O_CREAT	stubs/unixstub.c	400;"	d
O_DIRECT	stubs/unixstub.c	430;"	d
O_DIRECTORY	stubs/unixstub.c	436;"	d
O_EXCL	stubs/unixstub.c	403;"	d
O_FSYNC	stubs/unixstub.c	424;"	d
O_LARGEFILE	stubs/unixstub.c	433;"	d
O_NDELAY	stubs/unixstub.c	418;"	d
O_NOCTTY	stubs/unixstub.c	406;"	d
O_NOFOLLOW	stubs/unixstub.c	439;"	d
O_NONBLOCK	stubs/unixstub.c	415;"	d
O_RDONLY	stubs/unixstub.c	391;"	d
O_RDWR	stubs/unixstub.c	397;"	d
O_SYNC	stubs/unixstub.c	421;"	d
O_TRUNC	stubs/unixstub.c	409;"	d
O_WRONLY	stubs/unixstub.c	394;"	d
Otherwise	stubs/gtkstub.c	7297;"	struct:GtkMenuItemClass
PAGE_MASK	stubs/unixstub.c	6973;"	d
PAGE_SHIFT	stubs/unixstub.c	6976;"	d
PAGE_SIZE	stubs/unixstub.c	6979;"	d
POSIX_FADV_DONTNEED	stubs/unixstub.c	548;"	d
POSIX_FADV_NOREUSE	stubs/unixstub.c	551;"	d
POSIX_FADV_NORMAL	stubs/unixstub.c	536;"	d
POSIX_FADV_RANDOM	stubs/unixstub.c	539;"	d
POSIX_FADV_SEQUENTIAL	stubs/unixstub.c	542;"	d
POSIX_FADV_WILLNEED	stubs/unixstub.c	545;"	d
PREPARE	stubs/unixstub.c	2242;"	enum:snd_pcm_plugin_action_t
PRIVATE_GTK_FULLDRAW_PENDING	stubs/gtkstub.c	8845;"	enum:GtkPrivateFlags
PRIVATE_GTK_HAS_SHAPE_MASK	stubs/gtkstub.c	8845;"	enum:GtkPrivateFlags
PRIVATE_GTK_IN_REPARENT	stubs/gtkstub.c	8845;"	enum:GtkPrivateFlags
PRIVATE_GTK_IS_OFFSCREEN	stubs/gtkstub.c	8845;"	enum:GtkPrivateFlags
PRIVATE_GTK_LEAVE_PENDING	stubs/gtkstub.c	8845;"	enum:GtkPrivateFlags
PRIVATE_GTK_REDRAW_PENDING	stubs/gtkstub.c	8845;"	enum:GtkPrivateFlags
PRIVATE_GTK_RESIZE_NEEDED	stubs/gtkstub.c	8845;"	enum:GtkPrivateFlags
PRIVATE_GTK_RESIZE_PENDING	stubs/gtkstub.c	8845;"	enum:GtkPrivateFlags
PRIVATE_GTK_USER_STYLE	stubs/gtkstub.c	8845;"	enum:GtkPrivateFlags
PTHREAD_ADAPTIVE_MUTEX_INITIALIZER_NP	stubs/pthread.c	113;"	d
PTHREAD_BARRIER_SERIAL_THREAD	stubs/pthread.c	171;"	d
PTHREAD_CANCELED	stubs/pthread.c	197;"	d
PTHREAD_COND_INITIALIZER	stubs/pthread.c	116;"	d
PTHREAD_ERRORCHECK_MUTEX_INITIALIZER_NP	stubs/pthread.c	110;"	d
PTHREAD_MUTEX_INITIALIZER	stubs/pthread.c	104;"	d
PTHREAD_ONCE_INIT	stubs/pthread.c	168;"	d
PTHREAD_RECURSIVE_MUTEX_INITIALIZER_NP	stubs/pthread.c	107;"	d
PTHREAD_RWLOCK_INITIALIZER	stubs/pthread.c	119;"	d
PTHREAD_RWLOCK_WRITER_NONRECURSIVE_INITIALIZER_N	stubs/pthread.c	122;"	d
PT_ATTACH	stubs/unixstub.c	4668;"	d
PT_CONTINUE	stubs/unixstub.c	4673;"	d
PT_DETACH	stubs/unixstub.c	4678;"	d
PT_GETFPREGS	stubs/unixstub.c	4684;"	d
PT_GETFPXREGS	stubs/unixstub.c	4690;"	d
PT_GETREGS	stubs/unixstub.c	4696;"	d
PT_KILL	stubs/unixstub.c	4701;"	d
PT_READ_D	stubs/unixstub.c	4706;"	d
PT_READ_I	stubs/unixstub.c	4711;"	d
PT_READ_U	stubs/unixstub.c	4716;"	d
PT_SETFPREGS	stubs/unixstub.c	4722;"	d
PT_SETFPXREGS	stubs/unixstub.c	4728;"	d
PT_SETREGS	stubs/unixstub.c	4734;"	d
PT_STEP	stubs/unixstub.c	4740;"	d
PT_SYSCALL	stubs/unixstub.c	4745;"	d
PT_TRACE_ME	stubs/unixstub.c	4753;"	d
PT_WRITE_D	stubs/unixstub.c	4758;"	d
PT_WRITE_I	stubs/unixstub.c	4763;"	d
PT_WRITE_U	stubs/unixstub.c	4768;"	d
P_ALL	stubs/unixstub.c	7120;"	struct:idtype_t
P_ALL	stubs/unixstub.c	/^  P_ALL,		\/\* Wait for any child\.  \*\/$/;"	v
P_ALL	stubs/unixstub.c	/^  P_ALL,		\/\* Wait for any child\.  \*\/$/;"	v
P_ALL	stubs/unixstub.c	/^  P_ALL,		\/\* Wait for any child\.  \*\/$/;"	v
P_PGID	stubs/unixstub.c	7120;"	struct:idtype_t
P_PID	stubs/unixstub.c	7120;"	struct:idtype_t
P_PID	stubs/unixstub.c	/^  P_PID,		\/\* Wait for specified process\.  \*\/$/;"	v
P_PID	stubs/unixstub.c	/^  P_PID,		\/\* Wait for specified process\.  \*\/$/;"	v
P_PID	stubs/unixstub.c	/^  P_PID,		\/\* Wait for specified process\.  \*\/$/;"	v
PictFormatAlpha	stubs/xftstub.c	46;"	d
PictFormatAlphaMask	stubs/xftstub.c	47;"	d
PictFormatBlue	stubs/xftstub.c	44;"	d
PictFormatBlueMask	stubs/xftstub.c	45;"	d
PictFormatColormap	stubs/xftstub.c	48;"	d
PictFormatDepth	stubs/xftstub.c	39;"	d
PictFormatGreen	stubs/xftstub.c	42;"	d
PictFormatGreenMask	stubs/xftstub.c	43;"	d
PictFormatID	stubs/xftstub.c	37;"	d
PictFormatRed	stubs/xftstub.c	40;"	d
PictFormatRedMask	stubs/xftstub.c	41;"	d
PictFormatType	stubs/xftstub.c	38;"	d
Pixmap	stubs/xlibstub.c	/^typedef XID Pixmap;$/;"	t
PixmapColorError	stubs/xpmstub.c	359;"	d
PixmapColorFailed	stubs/xpmstub.c	364;"	d
PixmapFileInvalid	stubs/xpmstub.c	362;"	d
PixmapNoMemory	stubs/xpmstub.c	363;"	d
PixmapOpenFailed	stubs/xpmstub.c	361;"	d
PixmapSuccess	stubs/xpmstub.c	360;"	d
PlanesOfScreen	stubs/xlibstub.c	123;"	d
ProtocolRevision	stubs/xlibstub.c	126;"	d
ProtocolVersion	stubs/xlibstub.c	129;"	d
QCMD	stubs/unixstub.c	4817;"	d
QLength	stubs/xlibstub.c	132;"	d
QUOTAFILENAME	stubs/unixstub.c	4820;"	d
QUOTAGROUP	stubs/unixstub.c	4823;"	d
Q_GETQUOTA	stubs/unixstub.c	4826;"	d
Q_GETSTATS	stubs/unixstub.c	4829;"	d
Q_QUOTAOFF	stubs/unixstub.c	4832;"	d
Q_QUOTAON	stubs/unixstub.c	4835;"	d
Q_RSQUASH	stubs/unixstub.c	4838;"	d
Q_SETQLIM	stubs/unixstub.c	4841;"	d
Q_SETQUOTA	stubs/unixstub.c	4844;"	d
Q_SETUSE	stubs/unixstub.c	4847;"	d
Q_SYNC	stubs/unixstub.c	4850;"	d
RAW_GETBIND	stubs/unixstub.c	4951;"	d
RAW_MAJOR	stubs/unixstub.c	4955;"	d
RAW_SETBIND	stubs/unixstub.c	4959;"	d
RB_AUTOBOOT	stubs/unixstub.c	4975;"	d
RB_DISABLE_CAD	stubs/unixstub.c	4979;"	d
RB_ENABLE_CAD	stubs/unixstub.c	4983;"	d
RB_HALT_SYSTEM	stubs/unixstub.c	4987;"	d
RB_POWER_OFF	stubs/unixstub.c	4991;"	d
REG_CS	stubs/unixstub.c	6681;"	d
REG_DS	stubs/unixstub.c	6685;"	d
REG_EAX	stubs/unixstub.c	6689;"	d
REG_EBP	stubs/unixstub.c	6693;"	d
REG_EBX	stubs/unixstub.c	6697;"	d
REG_ECX	stubs/unixstub.c	6701;"	d
REG_EDI	stubs/unixstub.c	6705;"	d
REG_EDX	stubs/unixstub.c	6709;"	d
REG_EFL	stubs/unixstub.c	6713;"	d
REG_EIP	stubs/unixstub.c	6717;"	d
REG_ERR	stubs/unixstub.c	6721;"	d
REG_ES	stubs/unixstub.c	6725;"	d
REG_ESI	stubs/unixstub.c	6729;"	d
REG_ESP	stubs/unixstub.c	6733;"	d
REG_FS	stubs/unixstub.c	6737;"	d
REG_GS	stubs/unixstub.c	6744;"	d
REG_SS	stubs/unixstub.c	6748;"	d
REG_TRAPNO	stubs/unixstub.c	6752;"	d
REG_UESP	stubs/unixstub.c	6756;"	d
ROUNDDOWN	stubs/unixstub.c	3649;"	d
ROUNDUP	stubs/unixstub.c	3652;"	d
R_OK	stubs/unixstub.c	662;"	d
RootWindow	stubs/xlibstub.c	135;"	d
RootWindowOfScreen	stubs/xlibstub.c	138;"	d
SEEK_CUR	stubs/unixstub.c	665;"	d
SEEK_END	stubs/unixstub.c	668;"	d
SEEK_SET	stubs/unixstub.c	671;"	d
SHMLBA	stubs/unixstub.c	5179;"	d
SHUT_RD	stubs/unixstub.c	5211;"	d
SHUT_RD	stubs/unixstub.c	/^  SHUT_RD = 0,		\/\* No more receptions\.  \*\/$/;"	v
SHUT_RDWR	stubs/unixstub.c	5215;"	d
SHUT_WR	stubs/unixstub.c	5219;"	d
SND_ERROR_BEGIN	stubs/unixstub.c	1702;"	d
SND_ERROR_INCOMPATIBLE_VERSION	stubs/unixstub.c	1705;"	d
SND_HWDEP_OPEN_DUPLEX	stubs/unixstub.c	2634;"	d
SND_HWDEP_OPEN_NONBLOCK	stubs/unixstub.c	2637;"	d
SND_HWDEP_OPEN_READ	stubs/unixstub.c	2628;"	d
SND_HWDEP_OPEN_WRITE	stubs/unixstub.c	2631;"	d
SND_LIB_MAJOR	stubs/unixstub.c	1687;"	d
SND_LIB_MINOR	stubs/unixstub.c	1690;"	d
SND_LIB_SUBMINOR	stubs/unixstub.c	1693;"	d
SND_LIB_VERSION	stubs/unixstub.c	1696;"	d
SND_LIB_VERSION_STR	stubs/unixstub.c	1699;"	d
SND_PCM_LB_OPEN_CAPTURE	stubs/unixstub.c	2425;"	d
SND_PCM_LB_OPEN_PLAYBACK	stubs/unixstub.c	2422;"	d
SND_PCM_OPEN_CAPTURE	stubs/unixstub.c	2023;"	d
SND_PCM_OPEN_DUPLEX	stubs/unixstub.c	2026;"	d
SND_PCM_OPEN_NONBLOCK	stubs/unixstub.c	2029;"	d
SND_PCM_OPEN_PLAYBACK	stubs/unixstub.c	2020;"	d
SND_RAWMIDI_OPEN_DUPLEX	stubs/unixstub.c	2488;"	d
SND_RAWMIDI_OPEN_DUPLEX_APPEND	stubs/unixstub.c	2491;"	d
SND_RAWMIDI_OPEN_INPUT	stubs/unixstub.c	2485;"	d
SND_RAWMIDI_OPEN_NONBLOCK	stubs/unixstub.c	2494;"	d
SND_RAWMIDI_OPEN_OUTPUT	stubs/unixstub.c	2479;"	d
SND_RAWMIDI_OPEN_OUTPUT_APPEND	stubs/unixstub.c	2482;"	d
SND_SEQ_OPEN	stubs/unixstub.c	2689;"	d
SND_SEQ_OPEN_IN	stubs/unixstub.c	2686;"	d
SND_SEQ_OPEN_OUT	stubs/unixstub.c	2683;"	d
SS	stubs/unixstub.c	5043;"	d
STA_CLOCKERR	stubs/unixstub.c	6159;"	d
STA_DEL	stubs/unixstub.c	6162;"	d
STA_FLL	stubs/unixstub.c	6165;"	d
STA_FREQHOLD	stubs/unixstub.c	6168;"	d
STA_INS	stubs/unixstub.c	6171;"	d
STA_PLL	stubs/unixstub.c	6175;"	d
STA_PPSERROR	stubs/unixstub.c	6178;"	d
STA_PPSFREQ	stubs/unixstub.c	6181;"	d
STA_PPSJITTER	stubs/unixstub.c	6184;"	d
STA_PPSSIGNAL	stubs/unixstub.c	6187;"	d
STA_PPSTIME	stubs/unixstub.c	6190;"	d
STA_PPSWANDER	stubs/unixstub.c	6193;"	d
STA_RONLY	stubs/unixstub.c	6196;"	d
STA_UNSYNC	stubs/unixstub.c	6199;"	d
STDERR_FILENO	stubs/unixstub.c	674;"	d
STDIN_FILENO	stubs/unixstub.c	678;"	d
STDOUT_FILENO	stubs/unixstub.c	681;"	d
SUBCMDMASK	stubs/unixstub.c	4859;"	d
SUBCMDSHIFT	stubs/unixstub.c	4862;"	d
SUN_LEN	stubs/unixstub.c	6945;"	d
SWAP_FLAG_PREFER	stubs/unixstub.c	5573;"	d
SWAP_FLAG_PRIO_MASK	stubs/unixstub.c	5576;"	d
SWAP_FLAG_PRIO_SHIFT	stubs/unixstub.c	5579;"	d
SYS_NMLN	stubs/unixstub.c	7066;"	d
S_BLKSIZE	stubs/unixstub.c	5286;"	d
S_IEXEC	stubs/unixstub.c	5289;"	d
S_IFBLK	stubs/unixstub.c	5292;"	d
S_IFCHR	stubs/unixstub.c	5295;"	d
S_IFDIR	stubs/unixstub.c	5298;"	d
S_IFIFO	stubs/unixstub.c	5301;"	d
S_IFLNK	stubs/unixstub.c	5304;"	d
S_IFMT	stubs/unixstub.c	5307;"	d
S_IFREG	stubs/unixstub.c	5310;"	d
S_IFSOCK	stubs/unixstub.c	5313;"	d
S_IREAD	stubs/unixstub.c	5316;"	d
S_IRGRP	stubs/unixstub.c	5319;"	d
S_IROTH	stubs/unixstub.c	5322;"	d
S_IRUSR	stubs/unixstub.c	5325;"	d
S_IRWXG	stubs/unixstub.c	5329;"	d
S_IRWXO	stubs/unixstub.c	5333;"	d
S_IRWXU	stubs/unixstub.c	5337;"	d
S_ISBLK	stubs/unixstub.c	5340;"	d
S_ISCHR	stubs/unixstub.c	5343;"	d
S_ISDIR	stubs/unixstub.c	5346;"	d
S_ISFIFO	stubs/unixstub.c	5349;"	d
S_ISGID	stubs/unixstub.c	5352;"	d
S_ISLNK	stubs/unixstub.c	5355;"	d
S_ISLNK	stubs/unixstub.c	5358;"	d
S_ISREG	stubs/unixstub.c	5361;"	d
S_ISSOCK	stubs/unixstub.c	5364;"	d
S_ISUID	stubs/unixstub.c	5367;"	d
S_ISVTX	stubs/unixstub.c	5371;"	d
S_IWGRP	stubs/unixstub.c	5374;"	d
S_IWOTH	stubs/unixstub.c	5377;"	d
S_IWRITE	stubs/unixstub.c	5380;"	d
S_IWUSR	stubs/unixstub.c	5383;"	d
S_IXGRP	stubs/unixstub.c	5386;"	d
S_IXOTH	stubs/unixstub.c	5390;"	d
S_IXUSR	stubs/unixstub.c	5394;"	d
S_TYPEISMQ	stubs/unixstub.c	5397;"	d
S_TYPEISSEM	stubs/unixstub.c	5400;"	d
S_TYPEISSHM	stubs/unixstub.c	5403;"	d
Screen	stubs/xlibstub.c	/^} Screen;$/;"	t
ScreenCount	stubs/xlibstub.c	141;"	d
ScreenFormat	stubs/xlibstub.c	/^} ScreenFormat;$/;"	t
ScreenOfDisplay	stubs/xlibstub.c	144;"	d
ServerVendor	stubs/xlibstub.c	147;"	d
Status	stubs/xlibstub.c	/^typedef int Status;$/;"	t
TEMP_FAILURE_RETRY	stubs/unixstub.c	684;"	d
TEMP_FAILURE_RETRY	stubs/unixstub.c	1573;"	d
TIMESPEC_TO_TIMEVAL	stubs/unixstub.c	5930;"	d
TIMEVAL_TO_TIMESPEC	stubs/unixstub.c	5926;"	d
TIME_BAD	stubs/unixstub.c	6202;"	d
TIME_DEL	stubs/unixstub.c	6205;"	d
TIME_ERROR	stubs/unixstub.c	6208;"	d
TIME_INS	stubs/unixstub.c	6211;"	d
TIME_OK	stubs/unixstub.c	6215;"	d
TIME_OOP	stubs/unixstub.c	6218;"	d
TIME_WAIT	stubs/unixstub.c	6221;"	d
TRUE	stubs/glibstub.c	119;"	d
TRUE	stubs/gtkstub.c	14411;"	struct:GtkWindow
TTYDEF_CFLAG	stubs/unixstub.c	6349;"	d
TTYDEF_IFLAG	stubs/unixstub.c	6355;"	d
TTYDEF_LFLAG	stubs/unixstub.c	6358;"	d
TTYDEF_OFLAG	stubs/unixstub.c	6361;"	d
TTYDEF_SPEED	stubs/unixstub.c	6364;"	d
Time	stubs/xlibstub.c	/^typedef CARD32 Time;$/;"	t
UESP	stubs/unixstub.c	5046;"	d
UPAGES	stubs/unixstub.c	6982;"	d
USRQUOTA	stubs/unixstub.c	4865;"	d
VTIMES_UNITS_PER_SECOND	stubs/unixstub.c	7104;"	d
VendorRelease	stubs/xlibstub.c	150;"	d
Visual	stubs/xlibstub.c	/^} Visual;$/;"	t
VisualID	stubs/xlibstub.c	/^typedef CARD32 VisualID;$/;"	t
WAIT_ANY	stubs/unixstub.c	7132;"	d
WAIT_MYPGRP	stubs/unixstub.c	7135;"	d
WCOREDUMP	stubs/unixstub.c	7138;"	d
WCOREFLAG	stubs/unixstub.c	7141;"	d
WEXITSTATUS	stubs/unixstub.c	7144;"	d
WIFEXITED	stubs/unixstub.c	7147;"	d
WIFSIGNALED	stubs/unixstub.c	7150;"	d
WIFSTOPPED	stubs/unixstub.c	7153;"	d
WSTOPSIG	stubs/unixstub.c	7156;"	d
WTERMSIG	stubs/unixstub.c	7159;"	d
W_EXITCODE	stubs/unixstub.c	7162;"	d
W_OK	stubs/unixstub.c	687;"	d
W_STOPCODE	stubs/unixstub.c	7165;"	d
WhitePixel	stubs/xlibstub.c	153;"	d
WhitePixelOfScreen	stubs/xlibstub.c	156;"	d
WidthMMOfScreen	stubs/xlibstub.c	159;"	d
WidthOfScreen	stubs/xlibstub.c	162;"	d
Window	stubs/xlibstub.c	/^typedef XID Window;$/;"	t
XActivateScreenSaver	stubs/xlibstub.c	/^int XActivateScreenSaver(Display \*display)$/;"	f
XAddConnectionWatch	stubs/xlibstub.c	/^Status XAddConnectionWatch(Display \*dpy, XConnectionWatchProc callback, XPointer client_data)$/;"	f
XAddExtension	stubs/xlibstub.c	/^XExtCodes \*XAddExtension(Display \*display)$/;"	f
XAddHost	stubs/xlibstub.c	/^int XAddHost(Display \*display, XHostAddress \*host)$/;"	f
XAddHosts	stubs/xlibstub.c	/^int XAddHosts(Display \*display, XHostAddress \*hosts, int	num_hosts)$/;"	f
XAddPixel	stubs/xlibstub.c	180;"	d
XAddToExtensionList	stubs/xlibstub.c	/^int XAddToExtensionList(struct _XExtData \*\*structure, XExtData \*ext_data)$/;"	f
XAddToSaveSet	stubs/xlibstub.c	/^int XAddToSaveSet(Display \*display, Window w)$/;"	f
XAllPlanes	stubs/xlibstub.c	/^unsigned long XAllPlanes(void)$/;"	f
XAllocClassHint	stubs/xlibstub.c	/^XClassHint \*XAllocClassHint (void)$/;"	f
XAllocColor	stubs/xlibstub.c	/^Status XAllocColor(Display \*display, Colormap colormap, XColor \*screen_in_out)$/;"	f
XAllocColorCells	stubs/xlibstub.c	/^Status XAllocColorCells(Display \*display, Colormap colormap, Bool contig, unsigned long \*plane_masks_return, unsigned int nplanes, unsigned long \*pixels_retu/;"	f
XAllocColorPlanes	stubs/xlibstub.c	/^Status XAllocColorPlanes(Display \*display, Colormap colormap, Bool contig, unsigned long \*pixels_return, int ncolors, int nreds, int ngreens, int nblues, unsi/;"	f
XAllocID	stubs/xlibstub.c	165;"	d
XAllocIconSize	stubs/xlibstub.c	/^XIconSize \*XAllocIconSize (void)$/;"	f
XAllocNamedColor	stubs/xlibstub.c	/^Status XAllocNamedColor(Display \*display, Colormap colormap, const char \*color_name, XColor \*screen_def_return, XColor \*exact_def_return)$/;"	f
XAllocSizeHints	stubs/xlibstub.c	/^XSizeHints \*XAllocSizeHints (void)$/;"	f
XAllocStandardColormap	stubs/xlibstub.c	/^XStandardColormap \*XAllocStandardColormap (void)$/;"	f
XAllocWMHints	stubs/xlibstub.c	/^XWMHints \*XAllocWMHints (void)$/;"	f
XAllowEvents	stubs/xlibstub.c	/^int XAllowEvents(Display \*display, int event_mode, Time time)$/;"	f
XAnyEvent	stubs/xlibstub.c	/^} XAnyEvent;$/;"	t
XArc	stubs/xlibstub.c	/^} XArc;$/;"	t
XAutoRepeatOff	stubs/xlibstub.c	/^int XAutoRepeatOff(Display \*display)$/;"	f
XAutoRepeatOn	stubs/xlibstub.c	/^int XAutoRepeatOn(Display \*display)$/;"	f
XBaseFontNameListOfFontSet	stubs/xlibstub.c	/^char \*XBaseFontNameListOfFontSet(XFontSet font_set)$/;"	f
XBell	stubs/xlibstub.c	/^int XBell(Display \*display, int percent)$/;"	f
XBitmapBitOrder	stubs/xlibstub.c	/^int XBitmapBitOrder(Display \*display)$/;"	f
XBitmapPad	stubs/xlibstub.c	/^int XBitmapPad(Display \*display)$/;"	f
XBitmapUnit	stubs/xlibstub.c	/^int XBitmapUnit(Display \*display)$/;"	f
XBlackPixel	stubs/xlibstub.c	/^unsigned long XBlackPixel(Display \*display, int screen_number)$/;"	f
XBlackPixelOfScreen	stubs/xlibstub.c	/^unsigned long XBlackPixelOfScreen(Screen \*screen)$/;"	f
XButtonEvent	stubs/xlibstub.c	/^} XButtonEvent;$/;"	t
XButtonPressedEvent	stubs/xlibstub.c	/^typedef XButtonEvent XButtonPressedEvent;$/;"	t
XButtonReleasedEvent	stubs/xlibstub.c	/^typedef XButtonEvent XButtonReleasedEvent;$/;"	t
XCellsOfScreen	stubs/xlibstub.c	/^int XCellsOfScreen(Screen \*screen)$/;"	f
XChangeActivePointerGrab	stubs/xlibstub.c	/^int XChangeActivePointerGrab(Display \*display, unsigned int event_mask, Cursor cursor, Time time)$/;"	f
XChangeGC	stubs/xlibstub.c	/^int XChangeGC(Display \*display, GC gc, unsigned long valuemask, XGCValues \*values)$/;"	f
XChangeKeyboardControl	stubs/xlibstub.c	/^int XChangeKeyboardControl(Display \*display, unsigned long value_mask, XKeyboardControl \*values)$/;"	f
XChangeKeyboardMapping	stubs/xlibstub.c	/^int XChangeKeyboardMapping(Display \*display, int first_keycode, int keysyms_per_keycode, KeySym \*keysyms, int num_codes)$/;"	f
XChangePointerControl	stubs/xlibstub.c	/^int XChangePointerControl(Display \*display, Bool do_accel, Bool do_threshold, int accel_numerator, int accel_denominator, int threshold)$/;"	f
XChangeProperty	stubs/xlibstub.c	/^int XChangeProperty(Display \*display, Window w, Atom property, Atom type, int format, int mode, const unsigned char \*data, int nelements)$/;"	f
XChangeSaveSet	stubs/xlibstub.c	/^int XChangeSaveSet(Display \*display, Window w, int change_mode)$/;"	f
XChangeWindowAttributes	stubs/xlibstub.c	/^int XChangeWindowAttributes(Display \*display, Window w, unsigned long valuemask, XSetWindowAttributes \*attributes)$/;"	f
XChar2b	stubs/xlibstub.c	/^} XChar2b;$/;"	t
XCharStruct	stubs/xlibstub.c	/^} XCharStruct;$/;"	t
XCheckIfEvent	stubs/xlibstub.c	/^Bool XCheckIfEvent(Display \*display, XEvent \*event_return, Bool (\*)(Display \*display, XEvent \*event, XPointer arg) predicate, XPointer arg)$/;"	f
XCheckMaskEvent	stubs/xlibstub.c	/^Bool XCheckMaskEvent(Display \*display, long event_mask, XEvent \*event_return)$/;"	f
XCheckTypedEvent	stubs/xlibstub.c	/^Bool XCheckTypedEvent(Display \*display, int event_type, XEvent \*event_return)$/;"	f
XCheckTypedWindowEvent	stubs/xlibstub.c	/^Bool XCheckTypedWindowEvent(Display \*display, Window w, int event_type, XEvent \*event_return)$/;"	f
XCheckWindowEvent	stubs/xlibstub.c	/^Bool XCheckWindowEvent(Display \*display, Window w, long event_mask, XEvent \*event_return)$/;"	f
XCirculateEvent	stubs/xlibstub.c	/^} XCirculateEvent;$/;"	t
XCirculateRequestEvent	stubs/xlibstub.c	/^} XCirculateRequestEvent;$/;"	t
XCirculateSubwindows	stubs/xlibstub.c	/^int XCirculateSubwindows(Display \*display, Window w, int direction)$/;"	f
XCirculateSubwindowsDown	stubs/xlibstub.c	/^int XCirculateSubwindowsDown(Display \*display, Window w)$/;"	f
XCirculateSubwindowsUp	stubs/xlibstub.c	/^int XCirculateSubwindowsUp(Display \*display, Window w)$/;"	f
XClassHint	stubs/xlibstub.c	/^} XClassHint;$/;"	t
XClearArea	stubs/xlibstub.c	/^int XClearArea(Display \*display, Window w, int x, int y, unsigned int width, unsigned int height, Bool exposures)$/;"	f
XClearWindow	stubs/xlibstub.c	/^int XClearWindow(Display \*display, Window w)$/;"	f
XClientMessageEvent	stubs/xlibstub.c	/^} XClientMessageEvent;$/;"	t
XClipBox	stubs/xlibstub.c	/^int XClipBox(Region r, XRectangle\* rect_return)$/;"	f
XCloseDisplay	stubs/xlibstub.c	/^int XCloseDisplay(Display \*display)$/;"	f
XCloseIM	stubs/xlibstub.c	/^Status XCloseIM(XIM im)$/;"	f
XCloseOM	stubs/xlibstub.c	/^Status XCloseOM(XOM om)$/;"	f
XColor	stubs/xlibstub.c	/^} XColor;$/;"	t
XColormapEvent	stubs/xlibstub.c	/^} XColormapEvent;$/;"	t
XComposeStatus	stubs/xlibstub.c	/^} XComposeStatus;$/;"	t
XCompoundTextStyle	stubs/xlibstub.c	1315;"	enum:XICCEncodingStyle
XConfigureEvent	stubs/xlibstub.c	/^} XConfigureEvent;$/;"	t
XConfigureRequestEvent	stubs/xlibstub.c	/^} XConfigureRequestEvent;$/;"	t
XConfigureWindow	stubs/xlibstub.c	/^int XConfigureWindow(Display \*display, Window w, unsigned int value_mask, XWindowChanges \*values)$/;"	f
XConnectionNumber	stubs/xlibstub.c	/^int XConnectionNumber(Display \*display)$/;"	f
XContext	stubs/xlibstub.c	/^typedef int XContext;$/;"	t
XContextDependentDrawing	stubs/xlibstub.c	/^Bool XContextDependentDrawing(XFontSet font_set)$/;"	f
XContextualDrawing	stubs/xlibstub.c	/^Bool XContextualDrawing(XFontSet font_set)$/;"	f
XConvertCase	stubs/xlibstub.c	/^void XConvertCase(KeySym sym, KeySym\* lower, KeySym\* upper)$/;"	f
XConvertSelection	stubs/xlibstub.c	/^int XConvertSelection(Display \*display, Atom selection, Atom  target, Atom property, Window requestor, Time time)$/;"	f
XCopyArea	stubs/xlibstub.c	/^int XCopyArea(Display \*display, Drawable src, Drawable dest, GC gc, int src_x, int src_y, unsigned int width, unsigned int height, int dest_x, int dest_y)$/;"	f
XCopyColormapAndFree	stubs/xlibstub.c	/^Colormap XCopyColormapAndFree(Display \*display, Colormap colormap)$/;"	f
XCopyGC	stubs/xlibstub.c	/^int XCopyGC(Display \*display, GC src, unsigned long valuemask, GC dest)$/;"	f
XCopyPlane	stubs/xlibstub.c	/^int XCopyPlane(Display \*display, Drawable src, Drawable dest, GC gc, int src_x, int src_y, unsigned int width, unsigned int height, int dest_x, int dest_y, uns/;"	f
XCreateBitmapFromData	stubs/xlibstub.c	/^Pixmap XCreateBitmapFromData(Display \*display, Drawable d, const char \*data, unsigned int width, unsigned int height)$/;"	f
XCreateColormap	stubs/xlibstub.c	/^Colormap XCreateColormap(Display \*display, Window w, Visual \*visual, int	alloc)$/;"	f
XCreateDataFromPixmap	stubs/xpmstub.c	369;"	d
XCreateFontCursor	stubs/xlibstub.c	/^Cursor XCreateFontCursor(Display \*display, unsigned int shape)$/;"	f
XCreateFontSet	stubs/xlibstub.c	/^XFontSet XCreateFontSet(Display \*display, const char \*base_font_name_list, char \*\*\*missing_charset_list, int \*missing_charset_count, char \*\*def_string)$/;"	f
XCreateGC	stubs/xlibstub.c	/^GC XCreateGC(Display \*display, Drawable d, unsigned long valuemask, XGCValues \*values)$/;"	f
XCreateGlyphCursor	stubs/xlibstub.c	/^Cursor XCreateGlyphCursor(Display \*display, Font source_font, Font mask_font, unsigned int source_char, unsigned int mask_char, XColor \*foreground_color, XCol/;"	f
XCreateIC	stubs/xlibstub.c	/^XIC XCreateIC(XIM im, \.\.\.)$/;"	f
XCreateImage	stubs/xlibstub.c	/^XImage \*XCreateImage(Display \*display, Visual \*visual, unsigned int depth, int format, int offset, char \*data, unsigned int width, unsigned int height, int /;"	f
XCreateOC	stubs/xlibstub.c	/^XOC XCreateOC(XOM om, \.\.\.)$/;"	f
XCreatePixmap	stubs/xlibstub.c	/^Pixmap XCreatePixmap(Display \*display, Drawable d, unsigned int width, unsigned int height, unsigned int depth)$/;"	f
XCreatePixmapCursor	stubs/xlibstub.c	/^Cursor XCreatePixmapCursor(Display \*display, Pixmap source, Pixmap mask, XColor \*foreground_color, XColor \*background_color, unsigned int x, unsigned int y)$/;"	f
XCreatePixmapFromBitmapData	stubs/xlibstub.c	/^Pixmap XCreatePixmapFromBitmapData(Display \*display, Drawable d, char \*data, unsigned int width, unsigned int height, unsigned long fg, unsigned long bg, unsi/;"	f
XCreatePixmapFromData	stubs/xpmstub.c	368;"	d
XCreateRegion	stubs/xlibstub.c	/^Region XCreateRegion(void)$/;"	f
XCreateSimpleWindow	stubs/xlibstub.c	/^Window XCreateSimpleWindow(Display \*display, Window parent, int x, int y, unsigned int width, unsigned int height, unsigned int border_width, unsigned long bor/;"	f
XCreateWindow	stubs/xlibstub.c	/^Window XCreateWindow(Display \*display, Window parent, int x, int y, unsigned int width, unsigned int height, unsigned int border_width, int depth, unsigned int/;"	f
XCreateWindowEvent	stubs/xlibstub.c	/^} XCreateWindowEvent;$/;"	t
XCrossingEvent	stubs/xlibstub.c	/^} XCrossingEvent;$/;"	t
XDefaultColormap	stubs/xlibstub.c	/^Colormap XDefaultColormap(Display \*display, int screen_number)$/;"	f
XDefaultColormapOfScreen	stubs/xlibstub.c	/^Colormap XDefaultColormapOfScreen(Screen \*screen)$/;"	f
XDefaultDepth	stubs/xlibstub.c	/^int XDefaultDepth(Display \*display, int screen_number)$/;"	f
XDefaultDepthOfScreen	stubs/xlibstub.c	/^int XDefaultDepthOfScreen(Screen \*screen)$/;"	f
XDefaultGC	stubs/xlibstub.c	/^GC XDefaultGC(Display \*display, int screen_number)$/;"	f
XDefaultGCOfScreen	stubs/xlibstub.c	/^GC XDefaultGCOfScreen(Screen \*screen)$/;"	f
XDefaultRootWindow	stubs/xlibstub.c	/^Window XDefaultRootWindow(Display \*display)$/;"	f
XDefaultScreen	stubs/xlibstub.c	/^int XDefaultScreen(Display \*display)$/;"	f
XDefaultScreenOfDisplay	stubs/xlibstub.c	/^Screen \*XDefaultScreenOfDisplay(Display \*display)$/;"	f
XDefaultString	stubs/xlibstub.c	/^char \*XDefaultString(void)$/;"	f
XDefaultVisual	stubs/xlibstub.c	/^Visual \*XDefaultVisual(Display \*display, int screen_number)$/;"	f
XDefaultVisualOfScreen	stubs/xlibstub.c	/^Visual \*XDefaultVisualOfScreen(Screen \*screen)$/;"	f
XDefineCursor	stubs/xlibstub.c	/^int XDefineCursor(Display \*display, Window w, Cursor cursor)$/;"	f
XDeleteContext	stubs/xlibstub.c	/^int XDeleteContext(Display\* display, XID rid, XContext context)$/;"	f
XDeleteModifiermapEntry	stubs/xlibstub.c	/^XModifierKeymap \*XDeleteModifiermapEntry(XModifierKeymap \*modmap, KeyCode keycode_entry, int modifier)$/;"	f
XDeleteProperty	stubs/xlibstub.c	/^int XDeleteProperty(Display \*display, Window w, Atom property)$/;"	f
XDestroyIC	stubs/xlibstub.c	/^void XDestroyIC(XIC ic)$/;"	f
XDestroyImage	stubs/xlibstub.c	168;"	d
XDestroyOC	stubs/xlibstub.c	/^void XDestroyOC(XOC oc)$/;"	f
XDestroyRegion	stubs/xlibstub.c	/^int XDestroyRegion(Region r)$/;"	f
XDestroySubwindows	stubs/xlibstub.c	/^int XDestroySubwindows(Display \*display, Window w)$/;"	f
XDestroyWindow	stubs/xlibstub.c	/^int XDestroyWindow(Display \*display, Window w)$/;"	f
XDestroyWindowEvent	stubs/xlibstub.c	/^} XDestroyWindowEvent;$/;"	t
XDirectionalDependentDrawing	stubs/xlibstub.c	/^Bool XDirectionalDependentDrawing(XFontSet font_set)$/;"	f
XDisableAccessControl	stubs/xlibstub.c	/^int XDisableAccessControl(Display \*display)$/;"	f
XDisplayCells	stubs/xlibstub.c	/^int XDisplayCells(Display \*display, int screen_number)$/;"	f
XDisplayHeight	stubs/xlibstub.c	/^int XDisplayHeight(Display \*display, int screen_number)$/;"	f
XDisplayHeightMM	stubs/xlibstub.c	/^int XDisplayHeightMM(Display \*display, int screen_number)$/;"	f
XDisplayKeycodes	stubs/xlibstub.c	/^int XDisplayKeycodes(Display \*display, int \*min_keycodes_return, int \*max_keycodes_return)$/;"	f
XDisplayMotionBufferSize	stubs/xlibstub.c	/^unsigned long XDisplayMotionBufferSize(Display \*display)$/;"	f
XDisplayName	stubs/xlibstub.c	/^char \*XDisplayName(const char \*string)$/;"	f
XDisplayOfIM	stubs/xlibstub.c	/^Display \*XDisplayOfIM(XIM im)$/;"	f
XDisplayOfOM	stubs/xlibstub.c	/^Display \*XDisplayOfOM(XOM om)$/;"	f
XDisplayOfScreen	stubs/xlibstub.c	/^Display \*XDisplayOfScreen(Screen \*screen)$/;"	f
XDisplayPlanes	stubs/xlibstub.c	/^int XDisplayPlanes(Display \*display, int screen_number)$/;"	f
XDisplayString	stubs/xlibstub.c	/^char \*XDisplayString(Display \*display)$/;"	f
XDisplayWidth	stubs/xlibstub.c	/^int XDisplayWidth(Display \*display, int screen_number)$/;"	f
XDisplayWidthMM	stubs/xlibstub.c	/^int XDisplayWidthMM(Display \*display, int screen_number)$/;"	f
XDoesBackingStore	stubs/xlibstub.c	/^int XDoesBackingStore(Screen \*screen)$/;"	f
XDoesSaveUnders	stubs/xlibstub.c	/^Bool XDoesSaveUnders(Screen \*screen)$/;"	f
XDrawArc	stubs/xlibstub.c	/^int XDrawArc(Display \*display, Drawable d, GC gc, int x, int y, unsigned int width, unsigned int height, int angle1, int angle2)$/;"	f
XDrawArcs	stubs/xlibstub.c	/^int XDrawArcs(Display \*display, Drawable d, GC gc, XArc \*arcs, int narcs)$/;"	f
XDrawImageString	stubs/xlibstub.c	/^int XDrawImageString(Display \*display, Drawable d, GC gc, int x, int y, const char \*string, int length)$/;"	f
XDrawImageString16	stubs/xlibstub.c	/^int XDrawImageString16(Display \*display, Drawable d, GC gc, int x, int y, const XChar2b \*string, int length)$/;"	f
XDrawLine	stubs/xlibstub.c	/^int XDrawLine(Display \*display, Drawable d, GC gc, int x1, int x2, int y1, int y2)$/;"	f
XDrawLines	stubs/xlibstub.c	/^int XDrawLines(Display \*display, Drawable d, GC gc, XPoint \*points, int npoints, int mode)$/;"	f
XDrawPoint	stubs/xlibstub.c	/^int XDrawPoint(Display \*display, Drawable d, GC gc, int x, int y)$/;"	f
XDrawPoints	stubs/xlibstub.c	/^int XDrawPoints(Display \*display, Drawable d, GC gc, XPoint \*points, int npoints, int mode)$/;"	f
XDrawRectangle	stubs/xlibstub.c	/^int XDrawRectangle(Display \*display, Drawable d, GC gc, int x, int y, unsigned int width, unsigned int height)$/;"	f
XDrawRectangles	stubs/xlibstub.c	/^int XDrawRectangles(Display \*display, Drawable d, GC gc, XRectangle \*rectangles, int nrectangles)$/;"	f
XDrawSegments	stubs/xlibstub.c	/^int XDrawSegments(Display \*display, Drawable d, GC gc, XSegment \*segments, int nsegments)$/;"	f
XDrawString	stubs/xlibstub.c	/^int XDrawString(Display \*display, Drawable d, GC gc, int x, int y, const char \*string, int length)$/;"	f
XDrawString16	stubs/xlibstub.c	/^int XDrawString16(Display \*display, Drawable d, GC gc, int x, int y, const XChar2b \*string, int length)$/;"	f
XDrawText	stubs/xlibstub.c	/^int XDrawText(Display \*display, Drawable d, GC gc, int x, int y, XTextItem \*items, int nitems)$/;"	f
XDrawText16	stubs/xlibstub.c	/^int XDrawText16(Display \*display, Drawable d, GC gc, int x, int y, XTextItem16 \*items, int nitems)$/;"	f
XEDataObject	stubs/xlibstub.c	/^} XEDataObject;$/;"	t
XEHeadOfExtensionList	stubs/xlibstub.c	/^XExtData \*\*XEHeadOfExtensionList(XEDataObject object)$/;"	f
XEmptyRegion	stubs/xlibstub.c	/^int XEmptyRegion(Region r)$/;"	f
XEnableAccessControl	stubs/xlibstub.c	/^int XEnableAccessControl(Display \*display)$/;"	f
XEnterWindowEvent	stubs/xlibstub.c	/^typedef XCrossingEvent XEnterWindowEvent;$/;"	t
XEqualRegion	stubs/xlibstub.c	/^int XEqualRegion(Region r1, Region r2)$/;"	f
XErrorEvent	stubs/xlibstub.c	/^} XErrorEvent;$/;"	t
XEvent	stubs/xlibstub.c	/^} XEvent;$/;"	t
XEventMaskOfScreen	stubs/xlibstub.c	/^long XEventMaskOfScreen(Screen \*screen)$/;"	f
XEventsQueued	stubs/xlibstub.c	/^int XEventsQueued(Display \*display, int mode)$/;"	f
XExposeEvent	stubs/xlibstub.c	/^} XExposeEvent;$/;"	t
XExtCodes	stubs/xlibstub.c	/^} XExtCodes;$/;"	t
XExtData	stubs/xlibstub.c	/^} XExtData;$/;"	t
XExtendedMaxRequestSize	stubs/xlibstub.c	/^long XExtendedMaxRequestSize(Display \*display)$/;"	f
XExtentsOfFontSet	stubs/xlibstub.c	/^XFontSetExtents \*XExtentsOfFontSet(XFontSet font_set)$/;"	f
XFT_ANTIALIAS	stubs/xftstub.c	264;"	d
XFT_CHARCELL	stubs/xftstub.c	339;"	d
XFT_CHAR_HEIGHT	stubs/xftstub.c	303;"	d
XFT_CHAR_WIDTH	stubs/xftstub.c	300;"	d
XFT_CORE	stubs/xftstub.c	261;"	d
XFT_DPI	stubs/xftstub.c	297;"	d
XFT_ENCODING	stubs/xftstub.c	252;"	d
XFT_FAMILY	stubs/xftstub.c	234;"	d
XFT_FILE	stubs/xftstub.c	270;"	d
XFT_FOUNDRY	stubs/xftstub.c	258;"	d
XFT_INDEX	stubs/xftstub.c	273;"	d
XFT_MATRIX	stubs/xftstub.c	306;"	d
XFT_MINSPACE	stubs/xftstub.c	294;"	d
XFT_MONO	stubs/xftstub.c	336;"	d
XFT_OUTLINE	stubs/xftstub.c	279;"	d
XFT_PIXEL_SIZE	stubs/xftstub.c	249;"	d
XFT_PROPORTIONAL	stubs/xftstub.c	333;"	d
XFT_RASTERIZER	stubs/xftstub.c	276;"	d
XFT_RENDER	stubs/xftstub.c	291;"	d
XFT_RGBA	stubs/xftstub.c	285;"	d
XFT_RGBA_BGR	stubs/xftstub.c	348;"	d
XFT_RGBA_NONE	stubs/xftstub.c	342;"	d
XFT_RGBA_RGB	stubs/xftstub.c	345;"	d
XFT_RGBA_VBGR	stubs/xftstub.c	354;"	d
XFT_RGBA_VRGB	stubs/xftstub.c	351;"	d
XFT_SCALABLE	stubs/xftstub.c	282;"	d
XFT_SCALE	stubs/xftstub.c	288;"	d
XFT_SIZE	stubs/xftstub.c	246;"	d
XFT_SLANT	stubs/xftstub.c	240;"	d
XFT_SLANT_ITALIC	stubs/xftstub.c	327;"	d
XFT_SLANT_OBLIQUE	stubs/xftstub.c	330;"	d
XFT_SLANT_ROMAN	stubs/xftstub.c	324;"	d
XFT_SPACING	stubs/xftstub.c	255;"	d
XFT_STYLE	stubs/xftstub.c	237;"	d
XFT_WEIGHT	stubs/xftstub.c	243;"	d
XFT_WEIGHT_BLACK	stubs/xftstub.c	321;"	d
XFT_WEIGHT_BOLD	stubs/xftstub.c	318;"	d
XFT_WEIGHT_DEMIBOLD	stubs/xftstub.c	315;"	d
XFT_WEIGHT_LIGHT	stubs/xftstub.c	309;"	d
XFT_WEIGHT_MEDIUM	stubs/xftstub.c	312;"	d
XFT_XLFD	stubs/xftstub.c	267;"	d
XFetchBuffer	stubs/xlibstub.c	/^char \*XFetchBuffer(Display \*display, int \*nbytes_return, int buffer)$/;"	f
XFetchBytes	stubs/xlibstub.c	/^char \*XFetchBytes(Display \*display, int \*nbytes_return)$/;"	f
XFetchName	stubs/xlibstub.c	/^Status XFetchName(Display \*display, Window w, char \*\*window_name_return)$/;"	f
XFillArc	stubs/xlibstub.c	/^int XFillArc(Display \*display, Drawable d, GC gc, int x, int y, unsigned int width, unsigned int height, int angle1, int angle2)$/;"	f
XFillArcs	stubs/xlibstub.c	/^int XFillArcs(Display \*display, Drawable d, GC gc, XArc \*arcs, int narcs)$/;"	f
XFillPolygon	stubs/xlibstub.c	/^int XFillPolygon(Display \*display, Drawable d, GC gc, XPoint \*points, int npoints, int shape, int mode)$/;"	f
XFillRectangle	stubs/xlibstub.c	/^int XFillRectangle(Display \*display, Drawable d, GC gc, int x, int y, unsigned int width, unsigned int height)$/;"	f
XFillRectangles	stubs/xlibstub.c	/^int XFillRectangles(Display \*display, Drawable d, GC gc, XRectangle \*rectangles, int nrectangles)$/;"	f
XFilterEvent	stubs/xlibstub.c	/^Bool XFilterEvent(XEvent \*event, Window window)$/;"	f
XFindContext	stubs/xlibstub.c	/^int XFindContext(Display\* display, XID rid, XContext context, XPointer\* data_return)$/;"	f
XFindOnExtensionList	stubs/xlibstub.c	/^XExtData \*XFindOnExtensionList(XExtData \*\*structure, int number)$/;"	f
XFlush	stubs/xlibstub.c	/^int XFlush(Display \*display)$/;"	f
XFlushGC	stubs/xlibstub.c	/^void XFlushGC(Display \*display, GC gc)$/;"	f
XFocusChangeEvent	stubs/xlibstub.c	/^} XFocusChangeEvent;$/;"	t
XFocusInEvent	stubs/xlibstub.c	/^typedef XFocusChangeEvent XFocusInEvent;$/;"	t
XFocusOutEvent	stubs/xlibstub.c	/^typedef XFocusChangeEvent XFocusOutEvent;$/;"	t
XFontProp	stubs/xlibstub.c	/^} XFontProp;$/;"	t
XFontSetExtents	stubs/xlibstub.c	/^} XFontSetExtents;$/;"	t
XFontStruct	stubs/xlibstub.c	/^} XFontStruct;$/;"	t
XFontsOfFontSet	stubs/xlibstub.c	/^int XFontsOfFontSet(XFontSet font_set, XFontStruct \*\*\*font_struct_list, char \*\*\*font_name_list)$/;"	f
XForceScreenSaver	stubs/xlibstub.c	/^int XForceScreenSaver(Display \*display, int mode)$/;"	f
XFree	stubs/xlibstub.c	/^int XFree(void \*data)$/;"	f
XFreeColormap	stubs/xlibstub.c	/^int XFreeColormap(Display \*display, Colormap colormap)$/;"	f
XFreeColors	stubs/xlibstub.c	/^int XFreeColors(Display \*display, Colormap colormap, unsigned long \*pixels, int npixels, unsigned long planes)$/;"	f
XFreeCursor	stubs/xlibstub.c	/^int XFreeCursor(Display \*display, Cursor cursor)$/;"	f
XFreeExtensionList	stubs/xlibstub.c	/^int XFreeExtensionList(char \*\*list)$/;"	f
XFreeFont	stubs/xlibstub.c	/^int XFreeFont(Display \*display, XFontStruct \*font_struct)$/;"	f
XFreeFontInfo	stubs/xlibstub.c	/^int XFreeFontInfo(char \*\*names, XFontStruct \*free_info, int actual_count)$/;"	f
XFreeFontNames	stubs/xlibstub.c	/^int XFreeFontNames(char \*\*list)$/;"	f
XFreeFontPath	stubs/xlibstub.c	/^int XFreeFontPath(char \*\*list)$/;"	f
XFreeFontSet	stubs/xlibstub.c	/^void XFreeFontSet(Display \*display, XFontSet font_set)$/;"	f
XFreeGC	stubs/xlibstub.c	/^int XFreeGC(Display \*display, GC gc)$/;"	f
XFreeModifiermap	stubs/xlibstub.c	/^int XFreeModifiermap(XModifierKeymap \*modmap)$/;"	f
XFreePixmap	stubs/xlibstub.c	/^int XFreePixmap(Display \*display, Pixmap pixmap)$/;"	f
XFreeStringList	stubs/xlibstub.c	/^void XFreeStringList(char \*\*list)$/;"	f
XGCValues	stubs/xlibstub.c	/^} XGCValues;$/;"	t
XGContextFromGC	stubs/xlibstub.c	/^GContext XGContextFromGC(GC gc)$/;"	f
XGeometry	stubs/xlibstub.c	/^int XGeometry(Display \*display, int screen, const char \*position, const char \*default_position, unsigned int bwidth, unsigned int fwidth, unsigned int fheigh/;"	f
XGetAtomName	stubs/xlibstub.c	/^char \*XGetAtomName(Display \*display, Atom atom)$/;"	f
XGetAtomNames	stubs/xlibstub.c	/^Status XGetAtomNames(Display \*dpy, Atom \*atoms, int count, char \*\*names_return)$/;"	f
XGetClassHint	stubs/xlibstub.c	/^Status XGetClassHint(Display\* display, Window w, XClassHint\* class_hints_return)$/;"	f
XGetCommand	stubs/xlibstub.c	/^Status XGetCommand(Display \*display, Window w, char \*\*\*argv_return, int \*argc_return)$/;"	f
XGetDefault	stubs/xlibstub.c	/^char \*XGetDefault(Display \*display, const char \*program, const char \*option)$/;"	f
XGetErrorDatabaseText	stubs/xlibstub.c	/^int XGetErrorDatabaseText(Display \*display, const char \*name, const char \*message, const char \*default_string, char \*buffer_return, int length)$/;"	f
XGetErrorText	stubs/xlibstub.c	/^int XGetErrorText(Display \*display, int code, char \*buffer_return, int length)$/;"	f
XGetFontPath	stubs/xlibstub.c	/^char \*\*XGetFontPath(Display \*display, int \*npaths_return)$/;"	f
XGetFontProperty	stubs/xlibstub.c	/^Bool XGetFontProperty(XFontStruct \*font_struct, Atom atom, unsigned long \*value_return)$/;"	f
XGetGCValues	stubs/xlibstub.c	/^Status XGetGCValues(Display \*display, GC gc, unsigned long valuemask, XGCValues \*values_return)$/;"	f
XGetGeometry	stubs/xlibstub.c	/^Status XGetGeometry(Display \*display, Drawable d, Window \*root_return, int \*x_return, int \*y_return, unsigned int \*width_return, unsigned int \*height_retu/;"	f
XGetICValues	stubs/xlibstub.c	/^char \*XGetICValues(XIC ic, \.\.\.)$/;"	f
XGetIMValues	stubs/xlibstub.c	/^char \*XGetIMValues(XIM im, \.\.\.)$/;"	f
XGetIconName	stubs/xlibstub.c	/^Status XGetIconName(Display \*display, Window w, char \*\*icon_name_return)$/;"	f
XGetIconSizes	stubs/xlibstub.c	/^Status XGetIconSizes(Display\* display, Window w, XIconSize\*\* size_list_return, int\* count_return)$/;"	f
XGetImage	stubs/xlibstub.c	/^XImage \*XGetImage(Display \*display, Drawable d, int x, int y, unsigned int width, unsigned int height, unsigned long plane_mask, int format)$/;"	f
XGetInputFocus	stubs/xlibstub.c	/^int XGetInputFocus(Display \*display, Window \*focus_return, int \*revert_to_return)$/;"	f
XGetKeyboardControl	stubs/xlibstub.c	/^int XGetKeyboardControl(Display \*display, XKeyboardState \*values_return)$/;"	f
XGetKeyboardMapping	stubs/xlibstub.c	/^KeySym \*XGetKeyboardMapping(Display \*display, KeyCode first_keycode, int keycode_count, int \*keysyms_per_keycode_return)$/;"	f
XGetModifierMapping	stubs/xlibstub.c	/^XModifierKeymap \*XGetModifierMapping(Display \*display)$/;"	f
XGetMotionEvents	stubs/xlibstub.c	/^XTimeCoord \*XGetMotionEvents(Display \*display, Window w, Time start, Time stop, int \*nevents_return)$/;"	f
XGetNormalHints	stubs/xlibstub.c	/^Status XGetNormalHints(Display\* display, Window w, XSizeHints\* hints_return)$/;"	f
XGetOCValues	stubs/xlibstub.c	/^char \*XGetOCValues(XOC oc, \.\.\.)$/;"	f
XGetOMValues	stubs/xlibstub.c	/^char \*XGetOMValues(XOM om, \.\.\.)$/;"	f
XGetPixel	stubs/xlibstub.c	171;"	d
XGetPointerControl	stubs/xlibstub.c	/^int XGetPointerControl(Display \*display, int \*accel_numerator_return, int \*accel_denominator_return, int \*threshold_return)$/;"	f
XGetPointerMapping	stubs/xlibstub.c	/^int XGetPointerMapping(Display \*display, unsigned char \*map_return, int nmap)$/;"	f
XGetRGBColormaps	stubs/xlibstub.c	/^Status XGetRGBColormaps(Display\* display, Window w, XStandardColormap\*\* stdcmap_return, int\* count_return, Atom property)$/;"	f
XGetScreenSaver	stubs/xlibstub.c	/^int XGetScreenSaver(Display \*display, int \*timeout_return, int \*interval_return, int \*prefer_blanking_return, int \*allow_exposures_return)$/;"	f
XGetSelectionOwner	stubs/xlibstub.c	/^Window XGetSelectionOwner(Display \*display, Atom selection)$/;"	f
XGetSizeHints	stubs/xlibstub.c	/^Status XGetSizeHints(Display\* display, Window w, XSizeHints\* hints_return, Atom property)$/;"	f
XGetStandardColormap	stubs/xlibstub.c	/^Status XGetStandardColormap(Display\* display, Window w, XStandardColormap\* colormap_return, Atom		\/\* property \*\/			    )$/;"	f
XGetSubImage	stubs/xlibstub.c	/^XImage \*XGetSubImage(Display \*display, Drawable d, int x, int y, unsigned int width, unsigned int height, unsigned long plane_mask, int format, XImage \*dest_/;"	f
XGetTextProperty	stubs/xlibstub.c	/^Status XGetTextProperty(Display\* display, Window window, XTextProperty\* text_prop_return, Atom property)$/;"	f
XGetTransientForHint	stubs/xlibstub.c	/^Status XGetTransientForHint(Display \*display, Window w, Window \*prop_window_return)$/;"	f
XGetVisualInfo	stubs/xlibstub.c	/^XVisualInfo \*XGetVisualInfo(Display\* display, long vinfo_mask, XVisualInfo\* vinfo_template, int\* nitems_return)$/;"	f
XGetWMClientMachine	stubs/xlibstub.c	/^Status XGetWMClientMachine(Display\* display, Window w, XTextProperty\* text_prop_return)$/;"	f
XGetWMColormapWindows	stubs/xlibstub.c	/^Status XGetWMColormapWindows(Display \*display, Window w, Window \*\*windows_return, int \*count_return)$/;"	f
XGetWMHints	stubs/xlibstub.c	/^XWMHints \*XGetWMHints(Display\* display, Window w)$/;"	f
XGetWMIconName	stubs/xlibstub.c	/^Status XGetWMIconName(Display\* display, Window w, XTextProperty\* text_prop_return)$/;"	f
XGetWMName	stubs/xlibstub.c	/^Status XGetWMName(Display\* display, Window w, XTextProperty\* text_prop_return)$/;"	f
XGetWMNormalHints	stubs/xlibstub.c	/^Status XGetWMNormalHints(Display\* display, Window w, XSizeHints\* hints_return, long\* supplied_return)$/;"	f
XGetWMProtocols	stubs/xlibstub.c	/^Status XGetWMProtocols(Display \*display, Window w, Atom \*\*protocols_return, int \*count_return)$/;"	f
XGetWMSizeHints	stubs/xlibstub.c	/^Status XGetWMSizeHints(Display\* display, Window w, XSizeHints\* hints_return, long\* supplied_return, Atom property)$/;"	f
XGetWindowAttributes	stubs/xlibstub.c	/^Status XGetWindowAttributes(Display \*display, Window w, XWindowAttributes \*window_attributes_return)$/;"	f
XGetWindowProperty	stubs/xlibstub.c	/^int XGetWindowProperty(Display \*display, Window w, Atom property, long long_offset, long long_length, Bool delete, Atom req_type, Atom \*actual_type_return, in/;"	f
XGetZoomHints	stubs/xlibstub.c	/^Status XGetZoomHints(Display\* display, Window w, XSizeHints\* zhints_return)$/;"	f
XGlyphInfo	stubs/xftstub.c	/^} XGlyphInfo;$/;"	t
XGrabButton	stubs/xlibstub.c	/^int XGrabButton(Display \*display, unsigned int button, unsigned int modifiers, Window grab_window, Bool owner_events, unsigned int event_mask, int pointer_mode/;"	f
XGrabKey	stubs/xlibstub.c	/^int XGrabKey(Display \*display, int keycode, unsigned int modifiers, Window grab_window, Bool owner_events, int pointer_mode, int keyboard_mode)$/;"	f
XGrabKeyboard	stubs/xlibstub.c	/^int XGrabKeyboard(Display \*display, Window grab_window, Bool owner_events, int pointer_mode, int keyboard_mode, Time time)$/;"	f
XGrabPointer	stubs/xlibstub.c	/^int XGrabPointer(Display \*display, Window grab_window, Bool owner_events, unsigned int event_mask, int pointer_mode, int keyboard_mode, Window confine_to, Curs/;"	f
XGrabServer	stubs/xlibstub.c	/^int XGrabServer(Display \*display)$/;"	f
XGraphicsExposeEvent	stubs/xlibstub.c	/^} XGraphicsExposeEvent;$/;"	t
XGravityEvent	stubs/xlibstub.c	/^} XGravityEvent;$/;"	t
XHeightMMOfScreen	stubs/xlibstub.c	/^int XHeightMMOfScreen(Screen \*screen)$/;"	f
XHeightOfScreen	stubs/xlibstub.c	/^int XHeightOfScreen(Screen \*screen)$/;"	f
XHostAddress	stubs/xlibstub.c	/^} XHostAddress;$/;"	t
XIC	stubs/xlibstub.c	/^typedef struct _XIC \*XIC;$/;"	t
XICCEncodingStyle	stubs/xlibstub.c	/^} XICCEncodingStyle;$/;"	v
XICCallback	stubs/xlibstub.c	/^} XICCallback;$/;"	t
XID	stubs/xlibstub.c	/^typedef CARD32 XID;$/;"	t
XIM	stubs/xlibstub.c	/^typedef struct _XIM \*XIM;$/;"	t
XIMAbsolutePosition	stubs/xlibstub.c	1200;"	enum:XIMCaretDirection
XIMBackwardChar	stubs/xlibstub.c	1200;"	enum:XIMCaretDirection
XIMBackwardWord	stubs/xlibstub.c	1200;"	enum:XIMCaretDirection
XIMBitmapType	stubs/xlibstub.c	1236;"	enum:XIMStatusDataType
XIMCallback	stubs/xlibstub.c	/^} XIMCallback;$/;"	t
XIMCaretDirection	stubs/xlibstub.c	/^} XIMCaretDirection;$/;"	v
XIMCaretDown	stubs/xlibstub.c	1200;"	enum:XIMCaretDirection
XIMCaretStyle	stubs/xlibstub.c	/^} XIMCaretStyle;$/;"	v
XIMCaretUp	stubs/xlibstub.c	1200;"	enum:XIMCaretDirection
XIMDontChange	stubs/xlibstub.c	1200;"	enum:XIMCaretDirection
XIMFeedback	stubs/xlibstub.c	/^typedef unsigned long XIMFeedback;$/;"	t
XIMForwardChar	stubs/xlibstub.c	1200;"	enum:XIMCaretDirection
XIMForwardWord	stubs/xlibstub.c	1200;"	enum:XIMCaretDirection
XIMHotKeyState	stubs/xlibstub.c	/^typedef	unsigned long	 XIMHotKeyState;$/;"	t
XIMHotKeyTrigger	stubs/xlibstub.c	/^} XIMHotKeyTrigger;$/;"	t
XIMHotKeyTriggers	stubs/xlibstub.c	/^} XIMHotKeyTriggers;$/;"	t
XIMIsInvisible	stubs/xlibstub.c	1224;"	enum:XIMCaretStyle
XIMIsPrimary	stubs/xlibstub.c	1224;"	enum:XIMCaretStyle
XIMIsSecondary	stubs/xlibstub.c	1224;"	enum:XIMCaretStyle
XIMLineEnd	stubs/xlibstub.c	1200;"	enum:XIMCaretDirection
XIMLineStart	stubs/xlibstub.c	1200;"	enum:XIMCaretDirection
XIMNextLine	stubs/xlibstub.c	1200;"	enum:XIMCaretDirection
XIMOfIC	stubs/xlibstub.c	/^XIM XIMOfIC(XIC ic)$/;"	f
XIMPreeditCaretCallbackStruct	stubs/xlibstub.c	/^} XIMPreeditCaretCallbackStruct;$/;"	t
XIMPreeditDrawCallbackStruct	stubs/xlibstub.c	/^} XIMPreeditDrawCallbackStruct;$/;"	t
XIMPreeditState	stubs/xlibstub.c	/^typedef	unsigned long	 XIMPreeditState;$/;"	t
XIMPreeditStateNotifyCallbackStruct	stubs/xlibstub.c	/^} XIMPreeditStateNotifyCallbackStruct;$/;"	t
XIMPreviousLine	stubs/xlibstub.c	1200;"	enum:XIMCaretDirection
XIMResetState	stubs/xlibstub.c	/^typedef	unsigned long	 XIMResetState;$/;"	t
XIMStatusDataType	stubs/xlibstub.c	/^} XIMStatusDataType;$/;"	v
XIMStatusDrawCallbackStruct	stubs/xlibstub.c	/^} XIMStatusDrawCallbackStruct;$/;"	t
XIMStringConversionCallbackStruct	stubs/xlibstub.c	/^} XIMStringConversionCallbackStruct;$/;"	t
XIMStringConversionFeedback	stubs/xlibstub.c	/^typedef unsigned long XIMStringConversionFeedback;$/;"	t
XIMStringConversionOperation	stubs/xlibstub.c	/^typedef	unsigned short	XIMStringConversionOperation;$/;"	t
XIMStringConversionPosition	stubs/xlibstub.c	/^typedef	unsigned short	XIMStringConversionPosition;$/;"	t
XIMStringConversionText	stubs/xlibstub.c	/^} XIMStringConversionText;$/;"	t
XIMStringConversionType	stubs/xlibstub.c	/^typedef	unsigned short	XIMStringConversionType;$/;"	t
XIMStyle	stubs/xlibstub.c	/^typedef unsigned long XIMStyle;$/;"	t
XIMStyles	stubs/xlibstub.c	/^} XIMStyles;$/;"	t
XIMText	stubs/xlibstub.c	/^} XIMText;$/;"	t
XIMTextType	stubs/xlibstub.c	1236;"	enum:XIMStatusDataType
XIMValuesList	stubs/xlibstub.c	/^} XIMValuesList;$/;"	t
XIconSize	stubs/xlibstub.c	/^} XIconSize;$/;"	t
XIconifyWindow	stubs/xlibstub.c	/^Status XIconifyWindow(Display \*display, Window w, int screen_number)$/;"	f
XIfEvent	stubs/xlibstub.c	/^int XIfEvent(Display \*display, XEvent \*event_return, Bool (\*)(Display \*display, XEvent \*event, XPointer arg ) predicate, XPointer arg)$/;"	f
XImage	stubs/xlibstub.c	/^} XImage;$/;"	t
XImageByteOrder	stubs/xlibstub.c	/^int XImageByteOrder(Display \*display)$/;"	f
XInitExtension	stubs/xlibstub.c	/^XExtCodes \*XInitExtension(Display \*display, const char \*name)$/;"	f
XInitImage	stubs/xlibstub.c	/^Status XInitImage(XImage \*image)$/;"	f
XInitThreads	stubs/xlibstub.c	/^Status XInitThreads(void)$/;"	f
XInsertModifiermapEntry	stubs/xlibstub.c	/^XModifierKeymap	\*XInsertModifiermapEntry(XModifierKeymap \*modmap, KeyCode keycode_entry, int modifier)$/;"	f
XInstallColormap	stubs/xlibstub.c	/^int XInstallColormap(Display \*display, Colormap colormap)$/;"	f
XInternAtom	stubs/xlibstub.c	/^Atom XInternAtom(Display \*display, const char \*atom_name, Bool only_if_exists)$/;"	f
XInternAtoms	stubs/xlibstub.c	/^Status XInternAtoms(Display \*dpy, char \*\*names, int count, Bool onlyIfExists, Atom \*atoms_return)$/;"	f
XInternalConnectionNumbers	stubs/xlibstub.c	/^Status XInternalConnectionNumbers(Display \*dpy, int \*\*fd_return, int \*count_return)$/;"	f
XIntersectRegion	stubs/xlibstub.c	/^int XIntersectRegion(Region sra, Region srb, Region dr_return)$/;"	f
XKeyEvent	stubs/xlibstub.c	/^} XKeyEvent;$/;"	t
XKeyPressedEvent	stubs/xlibstub.c	/^typedef XKeyEvent XKeyPressedEvent;$/;"	t
XKeyReleasedEvent	stubs/xlibstub.c	/^typedef XKeyEvent XKeyReleasedEvent;$/;"	t
XKeyboardControl	stubs/xlibstub.c	/^} XKeyboardControl;$/;"	t
XKeyboardState	stubs/xlibstub.c	/^} XKeyboardState;$/;"	t
XKeycodeToKeysym	stubs/xlibstub.c	/^KeySym XKeycodeToKeysym(Display \*display, KeyCode keycode, int index)$/;"	f
XKeymapEvent	stubs/xlibstub.c	/^} XKeymapEvent;	$/;"	t
XKeysymToKeycode	stubs/xlibstub.c	/^KeyCode XKeysymToKeycode(Display \*display, KeySym keysym)$/;"	f
XKeysymToString	stubs/xlibstub.c	/^char \*XKeysymToString(KeySym keysym)$/;"	f
XKillClient	stubs/xlibstub.c	/^int XKillClient(Display \*display, XID resource)$/;"	f
XLastKnownRequestProcessed	stubs/xlibstub.c	/^unsigned long XLastKnownRequestProcessed(Display \*display)$/;"	f
XLeaveWindowEvent	stubs/xlibstub.c	/^typedef XCrossingEvent XLeaveWindowEvent;$/;"	t
XListDepths	stubs/xlibstub.c	/^int \*XListDepths(Display \*display, int screen_number, int \*count_return)$/;"	f
XListExtensions	stubs/xlibstub.c	/^char \*\*XListExtensions(Display \*display, int \*nextensions_return)$/;"	f
XListFonts	stubs/xlibstub.c	/^char \*\*XListFonts(Display \*display, const char \*pattern, int maxnames, int \*actual_count_return)$/;"	f
XListFontsWithInfo	stubs/xlibstub.c	/^char \*\*XListFontsWithInfo(Display \*display, const char \*pattern, int maxnames, int \*count_return, XFontStruct \*\*info_return)$/;"	f
XListHosts	stubs/xlibstub.c	/^XHostAddress \*XListHosts(Display \*display, int \*nhosts_return, Bool \*state_return)$/;"	f
XListInstalledColormaps	stubs/xlibstub.c	/^Colormap \*XListInstalledColormaps(Display \*display, Window w, int \*num_return)$/;"	f
XListPixmapFormats	stubs/xlibstub.c	/^XPixmapFormatValues \*XListPixmapFormats(Display \*display, int \*count_return)$/;"	f
XListProperties	stubs/xlibstub.c	/^Atom \*XListProperties(Display \*display, Window w, int \*num_prop_return)$/;"	f
XLoadFont	stubs/xlibstub.c	/^Font XLoadFont(Display \*display, const char \*name)$/;"	f
XLoadQueryFont	stubs/xlibstub.c	/^XFontStruct \*XLoadQueryFont(Display \*display, const char \*name)$/;"	f
XLocaleOfFontSet	stubs/xlibstub.c	/^char \*XLocaleOfFontSet(XFontSet font_set)$/;"	f
XLocaleOfIM	stubs/xlibstub.c	/^char \*XLocaleOfIM(XIM im)$/;"	f
XLocaleOfOM	stubs/xlibstub.c	/^char \*XLocaleOfOM(XOM om)$/;"	f
XLockDisplay	stubs/xlibstub.c	/^void XLockDisplay(Display \*display)$/;"	f
XLookupColor	stubs/xlibstub.c	/^Status XLookupColor(Display \*display, Colormap colormap, const char \*color_name, XColor \*exact_def_return, XColor \*screen_def_return)$/;"	f
XLookupKeysym	stubs/xlibstub.c	/^KeySym XLookupKeysym(XKeyEvent \*key_event, int index)$/;"	f
XLookupString	stubs/xlibstub.c	/^int XLookupString(XKeyEvent\* event_struct, char\* buffer_return, int bytes_buffer, KeySym\* keysym_return, XComposeStatus\* status_in_out)$/;"	f
XLowerWindow	stubs/xlibstub.c	/^int XLowerWindow(Display \*display, Window w)$/;"	f
XMapEvent	stubs/xlibstub.c	/^} XMapEvent;$/;"	t
XMapRaised	stubs/xlibstub.c	/^int XMapRaised(Display \*display, Window w)$/;"	f
XMapRequestEvent	stubs/xlibstub.c	/^} XMapRequestEvent;$/;"	t
XMapSubwindows	stubs/xlibstub.c	/^int XMapSubwindows(Display \*display, Window w)$/;"	f
XMapWindow	stubs/xlibstub.c	/^int XMapWindow(Display \*display, Window w)$/;"	f
XMappingEvent	stubs/xlibstub.c	/^} XMappingEvent;$/;"	t
XMaskEvent	stubs/xlibstub.c	/^int XMaskEvent(Display \*display, long event_mask, XEvent \*event_return)$/;"	f
XMatchVisualInfo	stubs/xlibstub.c	/^Status XMatchVisualInfo(Display\* display, int screen, int depth, int class, XVisualInfo\* vinfo_return)$/;"	f
XMaxCmapsOfScreen	stubs/xlibstub.c	/^int XMaxCmapsOfScreen(Screen \*screen)$/;"	f
XMaxRequestSize	stubs/xlibstub.c	/^long XMaxRequestSize(Display \*display)$/;"	f
XMinCmapsOfScreen	stubs/xlibstub.c	/^int XMinCmapsOfScreen(Screen \*screen)$/;"	f
XModifierKeymap	stubs/xlibstub.c	/^} XModifierKeymap;$/;"	t
XMotionEvent	stubs/xlibstub.c	/^} XMotionEvent;$/;"	t
XMoveResizeWindow	stubs/xlibstub.c	/^int XMoveResizeWindow(Display \*display, Window w, int x, int y, unsigned int width, unsigned int height)$/;"	f
XMoveWindow	stubs/xlibstub.c	/^int XMoveWindow(Display \*display, Window w, int x, int y)$/;"	f
XNewModifiermap	stubs/xlibstub.c	/^XModifierKeymap \*XNewModifiermap(int max_keys_per_mod)$/;"	f
XNextEvent	stubs/xlibstub.c	/^int XNextEvent(Display \*display, XEvent \*event_return)$/;"	f
XNextRequest	stubs/xlibstub.c	/^unsigned long XNextRequest(Display \*display)$/;"	f
XNoExposeEvent	stubs/xlibstub.c	/^} XNoExposeEvent;$/;"	t
XNoOp	stubs/xlibstub.c	/^int XNoOp(Display \*display)$/;"	f
XOMCharSetList	stubs/xlibstub.c	/^} XOMCharSetList;$/;"	t
XOMFontInfo	stubs/xlibstub.c	/^} XOMFontInfo;$/;"	t
XOMOfOC	stubs/xlibstub.c	/^XOM XOMOfOC(XOC oc)$/;"	f
XOMOrientation	stubs/xlibstub.c	/^    } XOMOrientation;$/;"	t
XOMOrientation_Context	stubs/xlibstub.c	1094;"	enum:XOrientation
XOMOrientation_LTR_TTB	stubs/xlibstub.c	1094;"	enum:XOrientation
XOMOrientation_RTL_TTB	stubs/xlibstub.c	1094;"	enum:XOrientation
XOMOrientation_TTB_LTR	stubs/xlibstub.c	1094;"	enum:XOrientation
XOMOrientation_TTB_RTL	stubs/xlibstub.c	1094;"	enum:XOrientation
XOffsetRegion	stubs/xlibstub.c	/^int XOffsetRegion(Region r, int dx, int dy)$/;"	f
XOpenDisplay	stubs/xlibstub.c	/^Display \*XOpenDisplay(const char \*display_name)$/;"	f
XOpenIM	stubs/xlibstub.c	/^XIM XOpenIM(Display \*dpy, struct _XrmHashBucketRec \*rdb, char \*res_name, char \*res_class)$/;"	f
XOpenOM	stubs/xlibstub.c	/^XOM XOpenOM(Display \*display, struct _XrmHashBucketRec \*rdb, const char \*res_name, const char \*res_class)$/;"	f
XOrientation	stubs/xlibstub.c	/^} XOrientation;$/;"	v
XPM_COLOR	stubs/xpmstub.c	170;"	d
XPM_GRAY	stubs/xpmstub.c	169;"	d
XPM_GRAY4	stubs/xpmstub.c	167;"	d
XPM_GREY	stubs/xpmstub.c	168;"	d
XPM_GREY4	stubs/xpmstub.c	166;"	d
XPM_MONO	stubs/xpmstub.c	165;"	d
XParseColor	stubs/xlibstub.c	/^Status XParseColor(Display \*display, Colormap colormap, const char \*spec, XColor \*exact_def_return)$/;"	f
XParseGeometry	stubs/xlibstub.c	/^int XParseGeometry(const char \*parsestring, int \*x_return, int \*y_return, unsigned int \*width_return, unsigned int \*height_return)$/;"	f
XPeekEvent	stubs/xlibstub.c	/^int XPeekEvent(Display \*display, XEvent \*event_return)$/;"	f
XPeekIfEvent	stubs/xlibstub.c	/^int XPeekIfEvent(Display \*display, XEvent \*event_return, Bool (\*)(Display \*display, XEvent \*event, XPointer arg ) predicate, XPointer arg)$/;"	f
XPending	stubs/xlibstub.c	/^int XPending(Display \*display)$/;"	f
XPixmapFormatValues	stubs/xlibstub.c	/^} XPixmapFormatValues;$/;"	t
XPlanesOfScreen	stubs/xlibstub.c	/^int XPlanesOfScreen(Screen \*screen )$/;"	f
XPoint	stubs/xlibstub.c	/^} XPoint;$/;"	t
XPointInRegion	stubs/xlibstub.c	/^Bool XPointInRegion(Region r, int x, int y)$/;"	f
XPointerMovedEvent	stubs/xlibstub.c	/^typedef XMotionEvent XPointerMovedEvent;$/;"	t
XPolygonRegion	stubs/xlibstub.c	/^Region XPolygonRegion(XPoint\* points, int n, int fill_rule)$/;"	f
XProcessInternalConnection	stubs/xlibstub.c	/^void XProcessInternalConnection(Display \*dpy, int fd)$/;"	f
XPropertyEvent	stubs/xlibstub.c	/^} XPropertyEvent;$/;"	t
XProtocolRevision	stubs/xlibstub.c	/^int XProtocolRevision(Display \*display)$/;"	f
XProtocolVersion	stubs/xlibstub.c	/^int XProtocolVersion(Display \*display)$/;"	f
XPutBackEvent	stubs/xlibstub.c	/^int XPutBackEvent(Display \*display, XEvent \*event)$/;"	f
XPutImage	stubs/xlibstub.c	/^int XPutImage(Display \*display, Drawable d, GC gc, XImage \*image, int src_x, int src_y, int dest_x, int dest_y, unsigned int width, unsigned int height)$/;"	f
XPutPixel	stubs/xlibstub.c	174;"	d
XQLength	stubs/xlibstub.c	/^int XQLength(Display \*display)$/;"	f
XQueryBestCursor	stubs/xlibstub.c	/^Status XQueryBestCursor(Display \*display, Drawable d, unsigned int width, unsigned int height, unsigned int \*width_return, unsigned int \*height_return)$/;"	f
XQueryBestSize	stubs/xlibstub.c	/^Status XQueryBestSize(Display \*display, int class, Drawable which_screen, unsigned int width, unsigned int height, unsigned int \*width_return, unsigned int \*/;"	f
XQueryBestStipple	stubs/xlibstub.c	/^Status XQueryBestStipple(Display \*display, Drawable which_screen, unsigned int width, unsigned int height, unsigned int \*width_return, unsigned int \*height_r/;"	f
XQueryBestTile	stubs/xlibstub.c	/^Status XQueryBestTile(Display \*display, Drawable which_screen, unsigned int width, unsigned int height, unsigned int \*width_return, unsigned int \*height_retu/;"	f
XQueryColor	stubs/xlibstub.c	/^int XQueryColor(Display \*display, Colormap colormap, XColor \*def_in_out)$/;"	f
XQueryColors	stubs/xlibstub.c	/^int XQueryColors(Display \*display, Colormap colormap, XColor \*defs_in_out, int ncolors)$/;"	f
XQueryExtension	stubs/xlibstub.c	/^Bool XQueryExtension(Display \*display, const char \*name, int \*major_opcode_return, int \*first_event_return, int \*first_error_return)$/;"	f
XQueryFont	stubs/xlibstub.c	/^XFontStruct \*XQueryFont(Display \*display, XID font_ID)$/;"	f
XQueryKeymap	stubs/xlibstub.c	/^int XQueryKeymap(Display \*display, char \[32\] keys_return)$/;"	f
XQueryPointer	stubs/xlibstub.c	/^Bool XQueryPointer(Display \*display, Window w, Window \*root_return, Window \*child_return, int \*root_x_return, int \*root_y_return, int \*win_x_return, int \*/;"	f
XQueryTextExtents	stubs/xlibstub.c	/^int XQueryTextExtents(Display \*display, XID font_ID, const char \*string, int nchars, int \*direction_return, int \*font_ascent_return, int \*font_descent_retu/;"	f
XQueryTextExtents16	stubs/xlibstub.c	/^int XQueryTextExtents16(Display \*display, XID font_ID, const XChar2b \*string, int nchars, int \*direction_return, int \*font_ascent_return, int \*font_descent/;"	f
XQueryTree	stubs/xlibstub.c	/^Status XQueryTree(Display \*display, Window w, Window \*root_return, Window \*parent_return, Window \*\*children_return, unsigned int \*nchildren_return)$/;"	f
XRaiseWindow	stubs/xlibstub.c	/^int XRaiseWindow(Display \*display, Window w)$/;"	f
XReadBitmapFile	stubs/xlibstub.c	/^int XReadBitmapFile(Display \*display, Drawable  d, const char \*filename, unsigned int \*width_return, unsigned int \*height_return, Pixmap \*bitmap_return, in/;"	f
XReadBitmapFileData	stubs/xlibstub.c	/^int XReadBitmapFileData(const char \*filename, unsigned int \*width_return, unsigned int \*height_return, unsigned char \*\*data_return, int \*x_hot_return, int/;"	f
XReadPixmapFile	stubs/xpmstub.c	366;"	d
XRebindKeysym	stubs/xlibstub.c	/^int XRebindKeysym(Display \*display, KeySym keysym, KeySym \*list, int mod_count, const unsigned char \*string, int bytes_string)$/;"	f
XRecolorCursor	stubs/xlibstub.c	/^int XRecolorCursor(Display \*display, Cursor cursor, XColor \*foreground_color, XColor \*background_color)$/;"	f
XReconfigureWMWindow	stubs/xlibstub.c	/^Status XReconfigureWMWindow(Display \*display, Window w, int screen_number, unsigned int mask, XWindowChanges \*changes)$/;"	f
XRectInRegion	stubs/xlibstub.c	/^int XRectInRegion(Region r, int x, int y, unsigned int width, unsigned int height)$/;"	f
XRectangle	stubs/xlibstub.c	/^} XRectangle;$/;"	t
XRefreshKeyboardMapping	stubs/xlibstub.c	/^int XRefreshKeyboardMapping(XMappingEvent \*event_map)$/;"	f
XRegisterIMInstantiateCallback	stubs/xlibstub.c	/^Bool XRegisterIMInstantiateCallback(Display \*dpy, struct _XrmHashBucketRec \*rdb, char \*res_name, char \*res_class, XIDProc callback, XPointer client_data)$/;"	f
XRemoveConnectionWatch	stubs/xlibstub.c	/^void XRemoveConnectionWatch(Display \*dpy, XConnectionWatchProc callback, XPointer client_data)$/;"	f
XRemoveFromSaveSet	stubs/xlibstub.c	/^int XRemoveFromSaveSet(Display \*display, Window w)$/;"	f
XRemoveHost	stubs/xlibstub.c	/^int XRemoveHost(Display \*display, XHostAddress \*host)$/;"	f
XRemoveHosts	stubs/xlibstub.c	/^int XRemoveHosts(Display \*display, XHostAddress \*hosts, int num_hosts)$/;"	f
XRenderAddGlyphs	stubs/xftstub.c	/^void XRenderAddGlyphs(Display \*dpy, GlyphSet glyphset, Glyph \*gids, XGlyphInfo \*glyphs, int nglyphs, char \*images, int nbyte_images)$/;"	f
XRenderChangePicture	stubs/xftstub.c	/^void XRenderChangePicture(Display \*dpy, Picture picture, unsigned long valuemask, XRenderPictureAttributes \*attributes)$/;"	f
XRenderColor	stubs/xftstub.c	/^} XRenderColor;$/;"	t
XRenderComposite	stubs/xftstub.c	/^void XRenderComposite(Display \*dpy, int op, Picture src, Picture mask, Picture dst, int src_x, int src_y, int mask_x, int mask_y, int dst_x, int dst_y, unsigne/;"	f
XRenderCompositeString16	stubs/xftstub.c	/^void XRenderCompositeString16(Display \*dpy, int op, Picture src, Picture dst, XRenderPictFormat \*maskFormat, GlyphSet glyphset, int xSrc, int ySrc, int xDst, /;"	f
XRenderCompositeString32	stubs/xftstub.c	/^void XRenderCompositeString32(Display \*dpy, int op, Picture src, Picture dst, XRenderPictFormat \*maskFormat, GlyphSet glyphset, int xSrc, int ySrc, int xDst, /;"	f
XRenderCompositeString8	stubs/xftstub.c	/^void XRenderCompositeString8(Display \*dpy, int op, Picture src, Picture dst, XRenderPictFormat \*maskFormat, GlyphSet glyphset, int xSrc, int ySrc, int xDst, i/;"	f
XRenderCreateGlyphSet	stubs/xftstub.c	/^GlyphSet XRenderCreateGlyphSet(Display \*dpy, XRenderPictFormat \*format)$/;"	f
XRenderCreatePicture	stubs/xftstub.c	/^Picture XRenderCreatePicture(Display \*dpy, Drawable drawable, XRenderPictFormat \*format, unsigned long valuemask, XRenderPictureAttributes \*attributes)$/;"	f
XRenderDepth	stubs/xftstub.c	/^} XRenderDepth;$/;"	t
XRenderDirectFormat	stubs/xftstub.c	/^} XRenderDirectFormat;$/;"	t
XRenderFillRectangle	stubs/xftstub.c	/^void XRenderFillRectangle(Display \*dpy, int op, Picture dst, XRenderColor \*color, int x, int y, unsigned int width, unsigned int height)$/;"	f
XRenderFillRectangles	stubs/xftstub.c	/^void XRenderFillRectangles(Display \*dpy, int op, Picture dst, XRenderColor \*color, XRectangle \*rectangles, int n_rects)$/;"	f
XRenderFindFormat	stubs/xftstub.c	/^XRenderPictFormat \*XRenderFindFormat(Display \*dpy, unsigned long mask, XRenderPictFormat \*templ, int count)$/;"	f
XRenderFindVisualFormat	stubs/xftstub.c	/^XRenderPictFormat \*XRenderFindVisualFormat(Display \*dpy, Visual \*visual)$/;"	f
XRenderFreeGlyphSet	stubs/xftstub.c	/^void XRenderFreeGlyphSet(Display \*dpy, GlyphSet glyphset)$/;"	f
XRenderFreeGlyphs	stubs/xftstub.c	/^void XRenderFreeGlyphs(Display \*dpy, GlyphSet glyphset, Glyph \*gids, int nglyphs)$/;"	f
XRenderFreePicture	stubs/xftstub.c	/^void XRenderFreePicture(Display \*dpy, Picture picture)$/;"	f
XRenderInfo	stubs/xftstub.c	/^} XRenderInfo;$/;"	t
XRenderPictFormat	stubs/xftstub.c	/^} XRenderPictFormat;$/;"	t
XRenderPictureAttributes	stubs/xftstub.c	/^} XRenderPictureAttributes;$/;"	t
XRenderQueryExtension	stubs/xftstub.c	/^Bool XRenderQueryExtension(Display \*dpy, int \*event_basep, int \*error_basep)$/;"	f
XRenderQueryFormats	stubs/xftstub.c	/^Status XRenderQueryFormats(Display \*dpy)$/;"	f
XRenderQueryVersion	stubs/xftstub.c	/^Status XRenderQueryVersion(Display \*dpy, int \*major_versionp, int \*minor_versionp)$/;"	f
XRenderReferenceGlyphSet	stubs/xftstub.c	/^GlyphSet XRenderReferenceGlyphSet(Display \*dpy, GlyphSet existing)$/;"	f
XRenderScreen	stubs/xftstub.c	/^} XRenderScreen;$/;"	t
XRenderSetPictureClipRectangles	stubs/xftstub.c	/^void XRenderSetPictureClipRectangles(Display \*dpy, Picture picture, int xOrigin, int yOrigin, XRectangle \*rects, int n)$/;"	f
XRenderSetPictureClipRegion	stubs/xftstub.c	/^void XRenderSetPictureClipRegion(Display \*dpy, Picture picture, Region r)$/;"	f
XRenderVisual	stubs/xftstub.c	/^} XRenderVisual;$/;"	t
XReparentEvent	stubs/xlibstub.c	/^} XReparentEvent;$/;"	t
XReparentWindow	stubs/xlibstub.c	/^int XReparentWindow(Display \*display, Window w, Window parent, int x, int y)$/;"	f
XResetScreenSaver	stubs/xlibstub.c	/^int XResetScreenSaver(Display \*display)$/;"	f
XResizeRequestEvent	stubs/xlibstub.c	/^} XResizeRequestEvent;$/;"	t
XResizeWindow	stubs/xlibstub.c	/^int XResizeWindow(Display \*display, Window w, unsigned int width, unsigned int height)$/;"	f
XResourceManagerString	stubs/xlibstub.c	/^char \*XResourceManagerString(Display \*display)$/;"	f
XRestackWindows	stubs/xlibstub.c	/^int XRestackWindows(Display \*display, Window \*windows, int nwindows)$/;"	f
XRootWindow	stubs/xlibstub.c	/^Window XRootWindow(Display \*display, int screen_number)$/;"	f
XRootWindowOfScreen	stubs/xlibstub.c	/^Window XRootWindowOfScreen(Screen \*screen)$/;"	f
XRotateBuffers	stubs/xlibstub.c	/^int XRotateBuffers(Display \*display, int rotate)$/;"	f
XRotateWindowProperties	stubs/xlibstub.c	/^int XRotateWindowProperties(Display \*display, Window w, Atom \*properties, int num_prop, int npositions)$/;"	f
XSaveContext	stubs/xlibstub.c	/^int XSaveContext(Display\* display, XID rid, XContext context, const char\* data)$/;"	f
XScreenCount	stubs/xlibstub.c	/^int XScreenCount(Display \*display)$/;"	f
XScreenNumberOfScreen	stubs/xlibstub.c	/^int XScreenNumberOfScreen(Screen \*screen)$/;"	f
XScreenOfDisplay	stubs/xlibstub.c	/^Screen \*XScreenOfDisplay(Display \*display, int screen_number)$/;"	f
XScreenResourceString	stubs/xlibstub.c	/^char \*XScreenResourceString(Screen \*screen)$/;"	f
XSegment	stubs/xlibstub.c	/^} XSegment;$/;"	t
XSelectInput	stubs/xlibstub.c	/^int XSelectInput(Display \*display, Window w, long event_mask)$/;"	f
XSelectionClearEvent	stubs/xlibstub.c	/^} XSelectionClearEvent;$/;"	t
XSelectionEvent	stubs/xlibstub.c	/^} XSelectionEvent;$/;"	t
XSelectionRequestEvent	stubs/xlibstub.c	/^} XSelectionRequestEvent;$/;"	t
XSendEvent	stubs/xlibstub.c	/^Status XSendEvent(Display \*display, Window w, Bool propagate, long event_mask, XEvent \*event_send)$/;"	f
XServerVendor	stubs/xlibstub.c	/^char \*XServerVendor(Display \*display)$/;"	f
XSetAccessControl	stubs/xlibstub.c	/^int XSetAccessControl(Display \*display, int mode)$/;"	f
XSetAfterFunction	stubs/xlibstub.c	/^int (\*XSetAfterFunction(Display \*display, int (\*) (Display \*display) procedure))(Display \*display)$/;"	f
XSetArcMode	stubs/xlibstub.c	/^int XSetArcMode(Display \*display, GC gc, int arc_mode)$/;"	f
XSetBackground	stubs/xlibstub.c	/^int XSetBackground(Display \*display, GC gc, unsigned long background)$/;"	f
XSetClassHint	stubs/xlibstub.c	/^int XSetClassHint(Display\* display, Window w, XClassHint\* class_hints)$/;"	f
XSetClipMask	stubs/xlibstub.c	/^int XSetClipMask(Display \*display, GC gc, Pixmap pixmap)$/;"	f
XSetClipOrigin	stubs/xlibstub.c	/^int XSetClipOrigin(Display \*display, GC gc, int clip_x_origin, int clip_y_origin)$/;"	f
XSetClipRectangles	stubs/xlibstub.c	/^int XSetClipRectangles(Display \*display, GC gc, int clip_x_origin, int clip_y_origin, XRectangle \*rectangles, int n, int ordering)$/;"	f
XSetCloseDownMode	stubs/xlibstub.c	/^int XSetCloseDownMode(Display \*display, int close_mode)$/;"	f
XSetCommand	stubs/xlibstub.c	/^int XSetCommand(Display \*display, Window w, char \*\*argv, int argc)$/;"	f
XSetDashes	stubs/xlibstub.c	/^int XSetDashes(Display \*display, GC gc, int dash_offset, const char \*dash_list, int n)$/;"	f
XSetErrorHandler	stubs/xlibstub.c	/^XErrorHandler XSetErrorHandler (XErrorHandler handler)$/;"	f
XSetFillRule	stubs/xlibstub.c	/^int XSetFillRule(Display \*display, GC gc, int fill_rule)$/;"	f
XSetFillStyle	stubs/xlibstub.c	/^int XSetFillStyle(Display \*display, GC gc, int fill_style)$/;"	f
XSetFont	stubs/xlibstub.c	/^int XSetFont(Display \*display, GC gc, Font font)$/;"	f
XSetFontPath	stubs/xlibstub.c	/^int XSetFontPath(Display \*display, char \*\*directories, int	ndirs)$/;"	f
XSetForeground	stubs/xlibstub.c	/^int XSetForeground(Display \*display, GC gc, unsigned long foreground)$/;"	f
XSetFunction	stubs/xlibstub.c	/^int XSetFunction(Display \*display, GC gc, int function)$/;"	f
XSetGraphicsExposures	stubs/xlibstub.c	/^int XSetGraphicsExposures(Display \*display, GC gc, Bool graphics_exposures)$/;"	f
XSetICFocus	stubs/xlibstub.c	/^void XSetICFocus(XIC ic)$/;"	f
XSetICValues	stubs/xlibstub.c	/^char \*XSetICValues(XIC ic, \.\.\.)$/;"	f
XSetIMValues	stubs/xlibstub.c	/^char \*XSetIMValues(XIM im, \.\.\.)$/;"	f
XSetIOErrorHandler	stubs/xlibstub.c	/^XIOErrorHandler XSetIOErrorHandler (XIOErrorHandler handler)$/;"	f
XSetIconName	stubs/xlibstub.c	/^int XSetIconName(Display \*display, Window w, const char \*icon_name)$/;"	f
XSetIconSizes	stubs/xlibstub.c	/^int XSetIconSizes(Display\* display, Window w, XIconSize\* size_list, int	count)$/;"	f
XSetInputFocus	stubs/xlibstub.c	/^int XSetInputFocus(Display \*display, Window focus, int revert_to, Time time)$/;"	f
XSetLineAttributes	stubs/xlibstub.c	/^int XSetLineAttributes(Display \*display, GC gc, unsigned int line_width, int line_style, int cap_style, int join_style)$/;"	f
XSetLocaleModifiers	stubs/xlibstub.c	/^char \*XSetLocaleModifiers(const char \*modifier_list)$/;"	f
XSetModifierMapping	stubs/xlibstub.c	/^int XSetModifierMapping(Display \*display, XModifierKeymap \*modmap)$/;"	f
XSetNormalHints	stubs/xlibstub.c	/^int XSetNormalHints(Display\* display, Window w, XSizeHints\* hints)$/;"	f
XSetOCValues	stubs/xlibstub.c	/^char \*XSetOCValues(XOC oc, \.\.\.)$/;"	f
XSetOMValues	stubs/xlibstub.c	/^char \*XSetOMValues(XOM om, \.\.\.)$/;"	f
XSetPlaneMask	stubs/xlibstub.c	/^int XSetPlaneMask(Display \*display, GC gc, unsigned long plane_mask)$/;"	f
XSetPointerMapping	stubs/xlibstub.c	/^int XSetPointerMapping(Display \*display, const unsigned char \*map, int nmap)$/;"	f
XSetRGBColormaps	stubs/xlibstub.c	/^void XSetRGBColormaps(Display\* display, Window w, XStandardColormap\* stdcmaps, int count, Atom property)$/;"	f
XSetRegion	stubs/xlibstub.c	/^int XSetRegion(Display\* display, GC gc, Region r)$/;"	f
XSetScreenSaver	stubs/xlibstub.c	/^int XSetScreenSaver(Display \*display, int timeout, int interval, int prefer_blanking, int allow_exposures)$/;"	f
XSetSelectionOwner	stubs/xlibstub.c	/^int XSetSelectionOwner(Display \*display, Atom selection, Window owner, Time time)$/;"	f
XSetSizeHints	stubs/xlibstub.c	/^int XSetSizeHints(Display\* display, Window w, XSizeHints\* hints, Atom property)$/;"	f
XSetStandardColormap	stubs/xlibstub.c	/^void XSetStandardColormap(Display\* display, Window w, XStandardColormap\* colormap, Atom property)$/;"	f
XSetStandardProperties	stubs/xlibstub.c	/^int XSetStandardProperties(Display\* display, Window w, const char\* window_name, const char\* icon_name, Pixmap icon_pixmap, char\*\* argv, int argc, XSizeHint/;"	f
XSetState	stubs/xlibstub.c	/^int XSetState(Display \*display, GC gc, unsigned long  foreground, unsigned long background, int function, unsigned long plane_mask)$/;"	f
XSetStipple	stubs/xlibstub.c	/^int XSetStipple(Display \*display, GC gc, Pixmap stipple)$/;"	f
XSetSubwindowMode	stubs/xlibstub.c	/^int XSetSubwindowMode(Display \*display, GC gc, int subwindow_mode)$/;"	f
XSetTSOrigin	stubs/xlibstub.c	/^int XSetTSOrigin(Display \*display, GC gc, int ts_x_origin, int ts_y_origin)$/;"	f
XSetTextProperty	stubs/xlibstub.c	/^void XSetTextProperty(Display\* display, Window w, XTextProperty\* text_prop, Atom property)$/;"	f
XSetTile	stubs/xlibstub.c	/^int XSetTile(Display \*display, GC gc, Pixmap tile)$/;"	f
XSetTransientForHint	stubs/xlibstub.c	/^int XSetTransientForHint(Display \*display, Window w, Window prop_window)$/;"	f
XSetWMClientMachine	stubs/xlibstub.c	/^void XSetWMClientMachine(Display\* display, Window w, XTextProperty\* text_prop)$/;"	f
XSetWMColormapWindows	stubs/xlibstub.c	/^Status XSetWMColormapWindows(Display \*display, Window w, Window \*colormap_windows, int count)$/;"	f
XSetWMHints	stubs/xlibstub.c	/^int XSetWMHints(Display\* display, Window w, XWMHints\* wm_hints)$/;"	f
XSetWMIconName	stubs/xlibstub.c	/^void XSetWMIconName(Display\* display, Window w, XTextProperty\* text_prop)$/;"	f
XSetWMName	stubs/xlibstub.c	/^void XSetWMName(Display\* display, Window w, XTextProperty\* text_prop)$/;"	f
XSetWMNormalHints	stubs/xlibstub.c	/^void XSetWMNormalHints(Display\* display, Window w, XSizeHints\* hints)$/;"	f
XSetWMProperties	stubs/xlibstub.c	/^void XSetWMProperties(Display\* display, Window w, XTextProperty\* window_name, XTextProperty\* icon_name, char\*\* argv, int argc, XSizeHints\* normal_hints, X/;"	f
XSetWMProtocols	stubs/xlibstub.c	/^Status XSetWMProtocols(Display \*display, Window w, Atom \*protocols, int count)$/;"	f
XSetWMSizeHints	stubs/xlibstub.c	/^void XSetWMSizeHints(Display\* display, Window w, XSizeHints\* hints, Atom property)$/;"	f
XSetWindowAttributes	stubs/xlibstub.c	/^} XSetWindowAttributes;$/;"	t
XSetWindowBackground	stubs/xlibstub.c	/^int XSetWindowBackground(Display \*display, Window w, unsigned long background_pixel)$/;"	f
XSetWindowBackgroundPixmap	stubs/xlibstub.c	/^int XSetWindowBackgroundPixmap(Display \*display, Window w, Pixmap background_pixmap)$/;"	f
XSetWindowBorder	stubs/xlibstub.c	/^int XSetWindowBorder(Display \*display, Window w, unsigned long border_pixel)$/;"	f
XSetWindowBorderPixmap	stubs/xlibstub.c	/^int XSetWindowBorderPixmap(Display \*display, Window w, Pixmap border_pixmap)$/;"	f
XSetWindowBorderWidth	stubs/xlibstub.c	/^int XSetWindowBorderWidth(Display \*display, Window w, unsigned int width)$/;"	f
XSetWindowColormap	stubs/xlibstub.c	/^int XSetWindowColormap(Display \*display, Window w, Colormap colormap)$/;"	f
XSetZoomHints	stubs/xlibstub.c	/^int XSetZoomHints(Display\* display, Window w, XSizeHints\* zhints)$/;"	f
XShrinkRegion	stubs/xlibstub.c	/^int XShrinkRegion(Region r, int dx, int dy)$/;"	f
XSizeHints	stubs/xlibstub.c	/^} XSizeHints;$/;"	t
XStandardColormap	stubs/xlibstub.c	/^} XStandardColormap;$/;"	t
XStdICCTextStyle	stubs/xlibstub.c	1315;"	enum:XICCEncodingStyle
XStoreBuffer	stubs/xlibstub.c	/^int XStoreBuffer(Display \*display, const char \*bytes, int nbytes, int buffer)$/;"	f
XStoreBytes	stubs/xlibstub.c	/^int XStoreBytes(Display \*display, const char \*bytes, int nbytes)$/;"	f
XStoreColor	stubs/xlibstub.c	/^int XStoreColor(Display \*display, Colormap colormap, XColor \*color)$/;"	f
XStoreColors	stubs/xlibstub.c	/^int XStoreColors(Display \*display, Colormap colormap, XColor \*color, int ncolors)$/;"	f
XStoreName	stubs/xlibstub.c	/^int XStoreName(Display \*display, Window w, const char \*window_name)$/;"	f
XStoreNamedColor	stubs/xlibstub.c	/^int XStoreNamedColor(Display \*display, Colormap colormap, const char \*color, unsigned long pixel, int flags)$/;"	f
XStringListToTextProperty	stubs/xlibstub.c	/^Status XStringListToTextProperty(char\*\* list, int count, XTextProperty\* text_prop_return)$/;"	f
XStringStyle	stubs/xlibstub.c	1315;"	enum:XICCEncodingStyle
XStringToContext	stubs/xlibstub.c	207;"	d
XStringToKeysym	stubs/xlibstub.c	/^KeySym XStringToKeysym(const char \*string)$/;"	f
XSubImage	stubs/xlibstub.c	177;"	d
XSubtractRegion	stubs/xlibstub.c	/^int XSubtractRegion(Region sra, Region srb, Region dr_return)$/;"	f
XSupportsLocale	stubs/xlibstub.c	/^Bool XSupportsLocale(void)$/;"	f
XSync	stubs/xlibstub.c	/^int XSync(Display \*display, Bool discard)$/;"	f
XSynchronize	stubs/xlibstub.c	/^int (\*XSynchronize(Display \*display, Bool onoff))(Display \*display)$/;"	f
XTextExtents	stubs/xlibstub.c	/^int XTextExtents(XFontStruct \*font_struct, const char \*string, int nchars, int \*direction_return, int \*font_ascent_return, int \*font_descent_return, XCharS/;"	f
XTextExtents16	stubs/xlibstub.c	/^int XTextExtents16(XFontStruct \*font_struct, const XChar2b \*string, int nchars, int \*direction_return, int \*font_ascent_return, int \*font_descent_return, X/;"	f
XTextItem	stubs/xlibstub.c	/^} XTextItem;$/;"	t
XTextItem16	stubs/xlibstub.c	/^} XTextItem16;$/;"	t
XTextProperty	stubs/xlibstub.c	/^} XTextProperty;$/;"	t
XTextPropertyToStringList	stubs/xlibstub.c	/^Status XTextPropertyToStringList(XTextProperty\* text_prop, char\*\*\* list_return, int\* count_return)$/;"	f
XTextStyle	stubs/xlibstub.c	1315;"	enum:XICCEncodingStyle
XTextWidth	stubs/xlibstub.c	/^int XTextWidth(XFontStruct \*font_struct, const char \*string, int count)$/;"	f
XTextWidth16	stubs/xlibstub.c	/^int XTextWidth16(XFontStruct \*font_struct, const XChar2b \*string, int count)$/;"	f
XTimeCoord	stubs/xlibstub.c	/^} XTimeCoord;$/;"	t
XTranslateCoordinates	stubs/xlibstub.c	/^Bool XTranslateCoordinates(Display \*display, Window src_w, Window dest_w, int src_x, int src_y, int \*dest_x_return, int \*dest_y_return, Window \*child_return/;"	f
XUndefineCursor	stubs/xlibstub.c	/^int XUndefineCursor(Display \*display, Window w)$/;"	f
XUngrabButton	stubs/xlibstub.c	/^int XUngrabButton(Display \*display, unsigned int button, unsigned int modifiers, Window grab_window)$/;"	f
XUngrabKey	stubs/xlibstub.c	/^int XUngrabKey(Display \*display, int keycode, unsigned int modifiers, Window grab_window)$/;"	f
XUngrabKeyboard	stubs/xlibstub.c	/^int XUngrabKeyboard(Display \*display, Time time)$/;"	f
XUngrabPointer	stubs/xlibstub.c	/^int XUngrabPointer(Display \*display, Time time)$/;"	f
XUngrabServer	stubs/xlibstub.c	/^int XUngrabServer(Display \*display)$/;"	f
XUninstallColormap	stubs/xlibstub.c	/^int XUninstallColormap(Display \*display, Colormap colormap)$/;"	f
XUnionRectWithRegion	stubs/xlibstub.c	/^int XUnionRectWithRegion(XRectangle\* rectangle, Region src_region, Region dest_region_return)$/;"	f
XUnionRegion	stubs/xlibstub.c	/^int XUnionRegion(Region sra, Region srb, Region dr_return)$/;"	f
XUniqueContext	stubs/xlibstub.c	204;"	d
XUnloadFont	stubs/xlibstub.c	/^int XUnloadFont(Display \*display, Font font)$/;"	f
XUnlockDisplay	stubs/xlibstub.c	/^void XUnlockDisplay(Display \*display)$/;"	f
XUnmapEvent	stubs/xlibstub.c	/^} XUnmapEvent;$/;"	t
XUnmapSubwindows	stubs/xlibstub.c	/^int XUnmapSubwindows(Display \*display, Window w)$/;"	f
XUnmapWindow	stubs/xlibstub.c	/^int XUnmapWindow(Display \*display, Window w)$/;"	f
XUnregisterIMInstantiateCallback	stubs/xlibstub.c	/^Bool XUnregisterIMInstantiateCallback(Display \*dpy, struct _XrmHashBucketRec \*rdb, char \*res_name, char \*res_class, XIDProc callback, XPointer client_data)$/;"	f
XUnsetICFocus	stubs/xlibstub.c	/^void XUnsetICFocus(XIC ic)$/;"	f
XVaCreateNestedList	stubs/xlibstub.c	/^XVaNestedList XVaCreateNestedList(int dummy, \.\.\.)$/;"	f
XVaNestedList	stubs/xlibstub.c	/^typedef void \*XVaNestedList;$/;"	t
XVendorRelease	stubs/xlibstub.c	/^int XVendorRelease(Display \*display)$/;"	f
XVisibilityEvent	stubs/xlibstub.c	/^} XVisibilityEvent;$/;"	t
XVisualIDFromVisual	stubs/xlibstub.c	/^VisualID XVisualIDFromVisual(Visual \*visual)$/;"	f
XVisualInfo	stubs/xlibstub.c	/^} XVisualInfo;$/;"	t
XWMGeometry	stubs/xlibstub.c	/^int XWMGeometry(Display\* display, int screen_number, const char\* user_geometry, const char\* default_geometry, unsigned int border_width, XSizeHints\* hints, /;"	f
XWMHints	stubs/xlibstub.c	/^} XWMHints;$/;"	t
XWarpPointer	stubs/xlibstub.c	/^int XWarpPointer(Display \*display, Window src_w, Window dest_w, int src_x, int src_y, unsigned int src_width, unsigned int src_height, int dest_x, int			\/ \*d/;"	f
XWhitePixel	stubs/xlibstub.c	/^unsigned long XWhitePixel(Display \*display, int screen_number)$/;"	f
XWhitePixelOfScreen	stubs/xlibstub.c	/^unsigned long XWhitePixelOfScreen(Screen \*screen)$/;"	f
XWidthMMOfScreen	stubs/xlibstub.c	/^int XWidthMMOfScreen(Screen \*screen)$/;"	f
XWidthOfScreen	stubs/xlibstub.c	/^int XWidthOfScreen(Screen \*screen)$/;"	f
XWindowAttributes	stubs/xlibstub.c	/^} XWindowAttributes;$/;"	t
XWindowChanges	stubs/xlibstub.c	/^} XWindowChanges;$/;"	t
XWindowEvent	stubs/xlibstub.c	/^int XWindowEvent(Display \*display, Window w, long event_mask, XEvent \*event_return)$/;"	f
XWithdrawWindow	stubs/xlibstub.c	/^Status XWithdrawWindow(Display \*display, Window w, int screen_number)$/;"	f
XWriteBitmapFile	stubs/xlibstub.c	/^int XWriteBitmapFile(Display \*display, const char \*filename, Pixmap bitmap, unsigned int width, unsigned int height, int x_hot, int	y_hot)$/;"	f
XWritePixmapFile	stubs/xpmstub.c	367;"	d
XXorRegion	stubs/xlibstub.c	/^int XXorRegion(Region sra, Region srb, Region dr_return)$/;"	f
X_OK	stubs/unixstub.c	690;"	d
XauDisposeAuth	stubs/xlibstub.c	/^void XauDisposeAuth(Xauth\* auth)$/;"	f
XauFileName	stubs/xlibstub.c	/^char \*XauFileName(void)$/;"	f
XauGetAuthByAddr	stubs/xlibstub.c	/^Xauth \*XauGetAuthByAddr(unsigned short family, unsigned short address_length, const char\* address, unsigned short number_length, const char\* number, unsigned/;"	f
XauGetAuthByName	stubs/xlibstub.c	/^Xauth \*XauGetAuthByName(const char\* display_name)$/;"	f
XauGetBestAuthByAddr	stubs/xlibstub.c	/^Xauth \*XauGetBestAuthByAddr(unsigned short family, unsigned short address_length, const char\* address, unsigned short number_length, const char\* number, int /;"	f
XauKrb5Decode	stubs/xlibstub.c	/^int XauKrb5Decode(krb5_data inbuf, krb5_principal \*princ)$/;"	f
XauKrb5Encode	stubs/xlibstub.c	/^int XauKrb5Encode(krb5_principal princ, krb5_data \*outbuf)$/;"	f
XauLockAuth	stubs/xlibstub.c	/^int XauLockAuth(const char\* file_name, int retries, int timeout, long dead)$/;"	f
XauReadAuth	stubs/xlibstub.c	/^Xauth \*XauReadAuth(FILE\* auth_file)$/;"	f
XauUnlockAuth	stubs/xlibstub.c	/^int XauUnlockAuth(const char\* file_name)$/;"	f
XauWriteAuth	stubs/xlibstub.c	/^int XauWriteAuth(FILE\* auth_file, Xauth\* auth)$/;"	f
XftChar16	stubs/xftstub.c	/^typedef unsigned short XftChar16;$/;"	t
XftChar32	stubs/xftstub.c	/^typedef unsigned int XftChar32;$/;"	t
XftChar8	stubs/xftstub.c	/^typedef unsigned char XftChar8;$/;"	t
XftColor	stubs/xftstub.c	/^} XftColor;$/;"	t
XftColorAllocName	stubs/xftstub.c	/^Bool XftColorAllocName(Display \*dpy, Visual \*visual, Colormap cmap, char \*name, XftColor \*result)$/;"	f
XftColorAllocValue	stubs/xftstub.c	/^Bool XftColorAllocValue(Display \*dpy, Visual\*visual, Colormap cmap, XRenderColor \*color, XftColor \*result)$/;"	f
XftColorFree	stubs/xftstub.c	/^void XftColorFree(Display \*dpy, Visual \*visual, Colormap cmap, XftColor \*color)$/;"	f
XftConfigSubstitute	stubs/xftstub.c	/^Bool XftConfigSubstitute(XftPattern \*p)$/;"	f
XftCoreClose	stubs/xftstub.c	/^void XftCoreClose(Display \*dpy, XFontStruct \*font)$/;"	f
XftCoreOpen	stubs/xftstub.c	/^XFontStruct \*XftCoreOpen(Display \*dpy, XftPattern \*pattern)$/;"	f
XftDefaultHasRender	stubs/xftstub.c	/^Bool XftDefaultHasRender(Display \*dpy)$/;"	f
XftDefaultSet	stubs/xftstub.c	/^Bool XftDefaultSet(Display \*dpy, XftPattern \*defaults)$/;"	f
XftDefaultSubstitute	stubs/xftstub.c	/^void XftDefaultSubstitute(Display \*dpy, int screen, XftPattern \*pattern)$/;"	f
XftDraw	stubs/xftstub.c	/^typedef struct _XftDraw XftDraw;$/;"	t
XftDrawChange	stubs/xftstub.c	/^void XftDrawChange(XftDraw \*draw, Drawable drawable)$/;"	f
XftDrawCreate	stubs/xftstub.c	/^XftDraw \*XftDrawCreate(Display \*dpy, Drawable drawable, Visual \*visual, Colormap colormap)$/;"	f
XftDrawCreateBitmap	stubs/xftstub.c	/^XftDraw \*XftDrawCreateBitmap(Display \*dpy, Pixmap bitmap)$/;"	f
XftDrawDestroy	stubs/xftstub.c	/^void XftDrawDestroy(XftDraw \*draw)$/;"	f
XftDrawRect	stubs/xftstub.c	/^void XftDrawRect(XftDraw \*d, XftColor \*color, int x, int y, unsigned int width, unsigned int height)$/;"	f
XftDrawSetClip	stubs/xftstub.c	/^Bool XftDrawSetClip(XftDraw \*d, Region r)$/;"	f
XftDrawString16	stubs/xftstub.c	/^void XftDrawString16(XftDraw \*draw, XftColor \*color, XftFont \*font, int x, int y, XftChar16 \*string, int len)$/;"	f
XftDrawString32	stubs/xftstub.c	/^void XftDrawString32(XftDraw \*draw, XftColor \*color, XftFont \*font, int x, int y, XftChar32 \*string, int len)$/;"	f
XftDrawString8	stubs/xftstub.c	/^void XftDrawString8(XftDraw \*d, XftColor \*color, XftFont \*font, int x, int y, XftChar8 \*string, int len)$/;"	f
XftDrawStringUtf8	stubs/xftstub.c	/^void XftDrawStringUtf8(XftDraw \*d, XftColor \*color, XftFont \*font, int x, int y, XftChar8 \*string, int len)$/;"	f
XftFont	stubs/xftstub.c	/^} XftFont;$/;"	t
XftFontClose	stubs/xftstub.c	/^void XftFontClose(Display \*dpy, XftFont \*font)$/;"	f
XftFontMatch	stubs/xftstub.c	/^XftPattern \*XftFontMatch(Display \*dpy, int screen, XftPattern \*pattern, XftResult \*result)$/;"	f
XftFontOpen	stubs/xftstub.c	/^XftFont \*XftFontOpen(Display \*dpy, int screen, \.\.\.)$/;"	f
XftFontOpenName	stubs/xftstub.c	/^XftFont \*XftFontOpenName(Display \*dpy, int screen, const char \*name)$/;"	f
XftFontOpenPattern	stubs/xftstub.c	/^XftFont \*XftFontOpenPattern(Display \*dpy, XftPattern \*pattern)$/;"	f
XftFontOpenXlfd	stubs/xftstub.c	/^XftFont \*XftFontOpenXlfd(Display \*dpy, int screen, const char \*xlfd)$/;"	f
XftFontSet	stubs/xftstub.c	/^} XftFontSet;$/;"	t
XftFontSetAdd	stubs/xftstub.c	/^Bool XftFontSetAdd(XftFontSet \*s, XftPattern \*font)$/;"	f
XftFontSetCreate	stubs/xftstub.c	/^XftFontSet \*XftFontSetCreate(void)$/;"	f
XftFontSetDestroy	stubs/xftstub.c	/^void XftFontSetDestroy(XftFontSet \*s)$/;"	f
XftFontSetMatch	stubs/xftstub.c	/^XftPattern \*XftFontSetMatch(XftFontSet \*\*sets, int nsets, XftPattern \*p, XftResult \*result)$/;"	f
XftFontSetPrint	stubs/xftstub.c	/^void XftFontSetPrint(XftFontSet \*s)$/;"	f
XftFontStruct	stubs/xftstub.c	/^typedef struct _XftFontStruct	XftFontStruct;$/;"	t
XftGlyphExists	stubs/xftstub.c	/^Bool XftGlyphExists(Display \*dpy, XftFont \*font, XftChar32 glyph)$/;"	f
XftInit	stubs/xftstub.c	/^Bool XftInit(char \*config)$/;"	f
XftListFontSets	stubs/xftstub.c	/^XftFontSet \*XftListFontSets(XftFontSet \*\*sets, int nsets, XftPattern \*p, XftObjectSet \*os)$/;"	f
XftListFonts	stubs/xftstub.c	/^XftFontSet \*XftListFonts(Display \*dpy, int screen, \.\.\.)$/;"	f
XftListFontsPatternObjects	stubs/xftstub.c	/^XftFontSet \*XftListFontsPatternObjects(Display \*dpy, int screen, XftPattern \*pattern, XftObjectSet \*os)$/;"	f
XftMatrix	stubs/xftstub.c	/^} XftMatrix;$/;"	t
XftMatrixEqual	stubs/xftstub.c	/^int XftMatrixEqual(const XftMatrix \*mat1, const XftMatrix \*mat2)$/;"	f
XftMatrixInit	stubs/xftstub.c	372;"	d
XftMatrixMultiply	stubs/xftstub.c	/^void XftMatrixMultiply(XftMatrix \*result, XftMatrix \*a, XftMatrix \*b)$/;"	f
XftMatrixRotate	stubs/xftstub.c	/^void XftMatrixRotate(XftMatrix \*m, double c, double s)$/;"	f
XftMatrixScale	stubs/xftstub.c	/^void XftMatrixScale(XftMatrix \*m, double sx, double sy)$/;"	f
XftMatrixShear	stubs/xftstub.c	/^void XftMatrixShear(XftMatrix \*m, double sh, double sv)$/;"	f
XftNameParse	stubs/xftstub.c	/^XftPattern \*XftNameParse(const char \*name)$/;"	f
XftNameUnparse	stubs/xftstub.c	/^Bool XftNameUnparse(XftPattern \*pat, char \*dest, int len)$/;"	f
XftObjectSet	stubs/xftstub.c	/^} XftObjectSet;$/;"	t
XftObjectSetAdd	stubs/xftstub.c	/^Bool XftObjectSetAdd(XftObjectSet \*os, const char \*object)$/;"	f
XftObjectSetBuild	stubs/xftstub.c	/^XftObjectSet \*XftObjectSetBuild(const char \*first, \.\.\.)$/;"	f
XftObjectSetCreate	stubs/xftstub.c	/^XftObjectSet \*XftObjectSetCreate(void)$/;"	f
XftObjectSetDestroy	stubs/xftstub.c	/^void XftObjectSetDestroy(XftObjectSet \*os)$/;"	f
XftObjectSetVaBuild	stubs/xftstub.c	/^XftObjectSet \*XftObjectSetVaBuild(const char \*first, va_list va)$/;"	f
XftPattern	stubs/xftstub.c	/^} XftPattern;$/;"	t
XftPatternAdd	stubs/xftstub.c	/^Bool XftPatternAdd(XftPattern \*p, const char \*object, XftValue value, Bool append)$/;"	f
XftPatternAddBool	stubs/xftstub.c	/^Bool XftPatternAddBool(XftPattern \*p, const char \*object, Bool b)$/;"	f
XftPatternAddDouble	stubs/xftstub.c	/^Bool XftPatternAddDouble(XftPattern \*p, const char \*object, double d)$/;"	f
XftPatternAddInteger	stubs/xftstub.c	/^Bool XftPatternAddInteger(XftPattern \*p, const char \*object, int i)$/;"	f
XftPatternAddMatrix	stubs/xftstub.c	/^Bool XftPatternAddMatrix(XftPattern \*p, const char \*object, const XftMatrix \*s)$/;"	f
XftPatternAddString	stubs/xftstub.c	/^Bool XftPatternAddString(XftPattern \*p, const char \*object, const char \*s)$/;"	f
XftPatternBuild	stubs/xftstub.c	/^XftPattern \*XftPatternBuild(XftPattern \*orig, \.\.\.)$/;"	f
XftPatternCreate	stubs/xftstub.c	/^XftPattern \*XftPatternCreate(void)$/;"	f
XftPatternDel	stubs/xftstub.c	/^Bool XftPatternDel(XftPattern \*p, const char \*object)$/;"	f
XftPatternDestroy	stubs/xftstub.c	/^void XftPatternDestroy(XftPattern \*p)$/;"	f
XftPatternDuplicate	stubs/xftstub.c	/^XftPattern \*XftPatternDuplicate(XftPattern \*p)$/;"	f
XftPatternElt	stubs/xftstub.c	/^} XftPatternElt;$/;"	t
XftPatternFind	stubs/xftstub.c	/^XftPatternElt \*XftPatternFind(XftPattern \*p, const char \*object, Bool insert)$/;"	f
XftPatternGet	stubs/xftstub.c	/^XftResult XftPatternGet(XftPattern \*p, const char \*object, int id, XftValue \*v)$/;"	f
XftPatternGetBool	stubs/xftstub.c	/^XftResult XftPatternGetBool(XftPattern \*p, const char \*object, int n, Bool \*b)$/;"	f
XftPatternGetDouble	stubs/xftstub.c	/^XftResult XftPatternGetDouble(XftPattern \*p, const char \*object, int n, double \*d)$/;"	f
XftPatternGetInteger	stubs/xftstub.c	/^XftResult XftPatternGetInteger(XftPattern \*p, const char \*object, int n, int \*i)$/;"	f
XftPatternGetMatrix	stubs/xftstub.c	/^XftResult XftPatternGetMatrix(XftPattern \*p, const char \*object, int n, XftMatrix \*\*s)$/;"	f
XftPatternGetString	stubs/xftstub.c	/^XftResult XftPatternGetString(XftPattern \*p, const char \*object, int n, char \*\*s)$/;"	f
XftPatternPrint	stubs/xftstub.c	/^void XftPatternPrint(XftPattern \*p)$/;"	f
XftPatternVaBuild	stubs/xftstub.c	/^XftPattern \*XftPatternVaBuild(XftPattern \*orig, va_list va)$/;"	f
XftResult	stubs/xftstub.c	/^} XftResult;$/;"	v
XftResultMatch	stubs/xftstub.c	377;"	enum:XftResult
XftResultNoId	stubs/xftstub.c	377;"	enum:XftResult
XftResultNoMatch	stubs/xftstub.c	377;"	enum:XftResult
XftResultTypeMismatch	stubs/xftstub.c	377;"	enum:XftResult
XftTextExtents16	stubs/xftstub.c	/^void XftTextExtents16(Display \*dpy, XftFont \*font, XftChar16 \*string, int len, XGlyphInfo \*extents)$/;"	f
XftTextExtents32	stubs/xftstub.c	/^void XftTextExtents32(Display \*dpy, XftFont \*font, XftChar32 \*string, int len, XGlyphInfo \*extents)$/;"	f
XftTextExtents8	stubs/xftstub.c	/^void XftTextExtents8(Display \*dpy, XftFont \*font, XftChar8 \*string, int len, XGlyphInfo \*extents)$/;"	f
XftTextExtentsUtf8	stubs/xftstub.c	/^void XftTextExtentsUtf8(Display \*dpy, XftFont \*font, XftChar8 \*string, int len, XGlyphInfo \*extents)$/;"	f
XftType	stubs/xftstub.c	/^} XftType;$/;"	v
XftTypeBool	stubs/xftstub.c	364;"	enum:XftType
XftTypeDouble	stubs/xftstub.c	364;"	enum:XftType
XftTypeInteger	stubs/xftstub.c	364;"	enum:XftType
XftTypeMatrix	stubs/xftstub.c	364;"	enum:XftType
XftTypeString	stubs/xftstub.c	364;"	enum:XftType
XftTypeVoid	stubs/xftstub.c	364;"	enum:XftType
XftUtf8Len	stubs/xftstub.c	/^Bool XftUtf8Len(XftChar8 \*string, int len, int \*nchar, int \*wchar)$/;"	f
XftUtf8ToUcs4	stubs/xftstub.c	/^int XftUtf8ToUcs4(XftChar8 \*src_orig, XftChar32 \*dst, int len)$/;"	f
XftValue	stubs/xftstub.c	/^} XftValue;$/;"	t
XftValueDestroy	stubs/xftstub.c	/^void XftValueDestroy(XftValue v)$/;"	f
XftValueList	stubs/xftstub.c	/^} XftValueList;$/;"	t
XftValueListDestroy	stubs/xftstub.c	/^void XftValueListDestroy(XftValueList \*l)$/;"	f
XftValueListPrint	stubs/xftstub.c	/^void XftValueListPrint(XftValueList \*l)$/;"	f
XftValuePrint	stubs/xftstub.c	/^void XftValuePrint(XftValue v)$/;"	f
XftXlfdParse	stubs/xftstub.c	/^XftPattern \*XftXlfdParse(const char \*xlfd_orig, Bool ignore_scalable, Bool complete)$/;"	f
XmbDrawImageString	stubs/xlibstub.c	/^void XmbDrawImageString(Display \*display, Drawable d, XFontSet font_set, GC gc, int x, int y, const char \*text, int bytes_text)$/;"	f
XmbDrawString	stubs/xlibstub.c	/^void XmbDrawString(Display \*display, Drawable d, XFontSet font_set, GC gc, int x, int y, const char \*text, int bytes_text)$/;"	f
XmbDrawText	stubs/xlibstub.c	/^void XmbDrawText(Display \*display, Drawable d, GC gc, int x, int y, XmbTextItem \*text_items, int nitems)$/;"	f
XmbLookupString	stubs/xlibstub.c	/^int XmbLookupString(XIC ic, XKeyPressedEvent \*event, char \*buffer_return, int bytes_buffer, KeySym \*keysym_return, Status \*status_return)$/;"	f
XmbResetIC	stubs/xlibstub.c	/^char \*XmbResetIC(XIC ic)$/;"	f
XmbSetWMProperties	stubs/xlibstub.c	/^void XmbSetWMProperties(Display\* display, Window w, const char\* window_name, const char\* icon_name, char\*\* argv, int argc, XSizeHints\* normal_hints, XWMHi/;"	f
XmbTextEscapement	stubs/xlibstub.c	/^int XmbTextEscapement(XFontSet font_set, const char \*text, int bytes_text)$/;"	f
XmbTextExtents	stubs/xlibstub.c	/^int XmbTextExtents(XFontSet font_set, const char \*text, int bytes_text, XRectangle \*overall_ink_return, XRectangle \*overall_logical_return)$/;"	f
XmbTextItem	stubs/xlibstub.c	/^} XmbTextItem;$/;"	t
XmbTextListToTextProperty	stubs/xlibstub.c	/^int XmbTextListToTextProperty(Display\* display, char\*\* list, int count, XICCEncodingStyle style, XTextProperty\* text_prop_return)$/;"	f
XmbTextPerCharExtents	stubs/xlibstub.c	/^Status XmbTextPerCharExtents(XFontSet font_set, const char \*text, int bytes_text, XRectangle \*ink_extents_buffer, XRectangle \*logical_extents_buffer, int buf/;"	f
XmbTextPropertyToTextList	stubs/xlibstub.c	/^int XmbTextPropertyToTextList(Display\* display, XTextProperty\* text_prop, char\*\*\* list_return, int\* count_return)$/;"	f
XpmAllocCloseColors	stubs/xpmstub.c	146;"	d
XpmAllocColor	stubs/xpmstub.c	149;"	d
XpmAttributes	stubs/xpmstub.c	/^}      XpmAttributes;$/;"	t
XpmAttributesSize	stubs/xpmstub.c	/^int XpmAttributesSize(void)$/;"	f
XpmBitmapFormat	stubs/xpmstub.c	147;"	d
XpmCharsPerPixel	stubs/xpmstub.c	126;"	d
XpmCloseness	stubs/xpmstub.c	138;"	d
XpmColor	stubs/xpmstub.c	/^}      XpmColor;$/;"	t
XpmColorClosure	stubs/xpmstub.c	151;"	d
XpmColorError	stubs/xpmstub.c	6;"	d
XpmColorFailed	stubs/xpmstub.c	11;"	d
XpmColorKey	stubs/xpmstub.c	140;"	d
XpmColorSymbol	stubs/xpmstub.c	/^}      XpmColorSymbol;$/;"	t
XpmColorSymbols	stubs/xpmstub.c	127;"	d
XpmColorTable	stubs/xpmstub.c	142;"	d
XpmColormap	stubs/xpmstub.c	122;"	d
XpmComments	stubs/xpmstub.c	155;"	d
XpmCreateBufferFromImage	stubs/xpmstub.c	/^int XpmCreateBufferFromImage(Display \*display, char \*\*buffer_return, XImage \*image, XImage \*shapeimage, XpmAttributes \*attributes)$/;"	f
XpmCreateBufferFromPixmap	stubs/xpmstub.c	/^int XpmCreateBufferFromPixmap(Display \*display, char \*\*buffer_return, Pixmap pixmap, Pixmap shapemask, XpmAttributes \*attributes)$/;"	f
XpmCreateBufferFromXpmImage	stubs/xpmstub.c	/^int XpmCreateBufferFromXpmImage(char \*\*buffer_return, XpmImage \*image, XpmInfo \*info)$/;"	f
XpmCreateDataFromImage	stubs/xpmstub.c	/^int XpmCreateDataFromImage(Display \*display, char \*\*\*data_return, XImage \*image, XImage \*shapeimage, XpmAttributes \*attributes)$/;"	f
XpmCreateDataFromPixmap	stubs/xpmstub.c	/^int XpmCreateDataFromPixmap(Display \*display, char \*\*\*data_return, Pixmap pixmap, Pixmap shapemask, XpmAttributes \*attributes)$/;"	f
XpmCreateDataFromXpmImage	stubs/xpmstub.c	/^int XpmCreateDataFromXpmImage(char \*\*\*data_return, XpmImage \*image, XpmInfo \*info)$/;"	f
XpmCreateImageFromBuffer	stubs/xpmstub.c	/^int XpmCreateImageFromBuffer(Display \*display, char \*buffer, XImage \*\*image_return, XImage \*\*shapemask_return, XpmAttributes \*attributes)$/;"	f
XpmCreateImageFromData	stubs/xpmstub.c	/^int XpmCreateImageFromData(Display \*display, char \*\*data, XImage \*\*image_return, XImage \*\*shapemask_return, XpmAttributes \*attributes)$/;"	f
XpmCreateImageFromXpmImage	stubs/xpmstub.c	/^int XpmCreateImageFromXpmImage(Display \*display, XpmImage \*image, XImage \*\*image_return, XImage \*\*shapeimage_return, XpmAttributes \*attributes)$/;"	f
XpmCreatePixmapFromBuffer	stubs/xpmstub.c	/^int XpmCreatePixmapFromBuffer(Display \*display, Drawable d, char \*buffer, Pixmap \*pixmap_return, Pixmap \*shapemask_return, XpmAttributes \*attributes)$/;"	f
XpmCreatePixmapFromData	stubs/xpmstub.c	/^int XpmCreatePixmapFromData(Display \*display, Drawable d, char \*\*data, Pixmap \*pixmap_return, Pixmap \*shapemask_return, XpmAttributes \*attributes)$/;"	f
XpmCreatePixmapFromXpmImage	stubs/xpmstub.c	/^int XpmCreatePixmapFromXpmImage(Display \*display, Drawable d, XpmImage \*image, Pixmap \*pixmap_return, Pixmap \*shapemask_return, XpmAttributes \*attributes)$/;"	f
XpmCreateXpmImageFromBuffer	stubs/xpmstub.c	/^int XpmCreateXpmImageFromBuffer(char \*buffer, XpmImage \*image, XpmInfo \*info)$/;"	f
XpmCreateXpmImageFromData	stubs/xpmstub.c	/^int XpmCreateXpmImageFromData(char \*\*data, XpmImage \*image, XpmInfo \*info)$/;"	f
XpmCreateXpmImageFromImage	stubs/xpmstub.c	/^int XpmCreateXpmImageFromImage(Display \*display, XImage \*image, XImage \*shapeimage, XpmImage \*xpmimage, XpmAttributes \*attributes)$/;"	f
XpmCreateXpmImageFromPixmap	stubs/xpmstub.c	/^int XpmCreateXpmImageFromPixmap(Display \*display, Pixmap pixmap, Pixmap shapemask, XpmImage \*xpmimage, XpmAttributes \*attributes)$/;"	f
XpmDepth	stubs/xpmstub.c	123;"	d
XpmExactColors	stubs/xpmstub.c	137;"	d
XpmExtension	stubs/xpmstub.c	/^}      XpmExtension;$/;"	t
XpmExtensions	stubs/xpmstub.c	134;"	d
XpmFileInvalid	stubs/xpmstub.c	9;"	d
XpmFree	stubs/xpmstub.c	/^void XpmFree(void \*ptr)$/;"	f
XpmFreeAttributes	stubs/xpmstub.c	/^void XpmFreeAttributes(XpmAttributes \*attributes)$/;"	f
XpmFreeColors	stubs/xpmstub.c	150;"	d
XpmFreeExtensions	stubs/xpmstub.c	/^void XpmFreeExtensions(XpmExtension \*extensions, int nextensions)$/;"	f
XpmFreeXpmImage	stubs/xpmstub.c	/^void XpmFreeXpmImage(XpmImage \*image)$/;"	f
XpmFreeXpmInfo	stubs/xpmstub.c	/^void XpmFreeXpmInfo(XpmInfo \*info)$/;"	f
XpmGetErrorString	stubs/xpmstub.c	/^char \* XpmGetErrorString(int errcode)$/;"	f
XpmGetParseError	stubs/xpmstub.c	/^int XpmGetParseError(char \*filename, int \*linenum_return, int \*charnum_return)$/;"	f
XpmHotspot	stubs/xpmstub.c	125;"	d
XpmImage	stubs/xpmstub.c	/^}      XpmImage;$/;"	t
XpmInfo	stubs/xpmstub.c	/^}      XpmInfo;$/;"	t
XpmInfos	stubs/xpmstub.c	130;"	d
XpmLibraryVersion	stubs/xpmstub.c	/^int XpmLibraryVersion(void)$/;"	f
XpmNoMemory	stubs/xpmstub.c	10;"	d
XpmOpenFailed	stubs/xpmstub.c	8;"	d
XpmPixmapColorError	stubs/xpmstub.c	349;"	d
XpmPixmapColorFailed	stubs/xpmstub.c	354;"	d
XpmPixmapFileInvalid	stubs/xpmstub.c	352;"	d
XpmPixmapNoMemory	stubs/xpmstub.c	353;"	d
XpmPixmapOpenFailed	stubs/xpmstub.c	351;"	d
XpmPixmapSuccess	stubs/xpmstub.c	350;"	d
XpmRGBCloseness	stubs/xpmstub.c	139;"	d
XpmReadFileToBuffer	stubs/xpmstub.c	/^int XpmReadFileToBuffer(char \*filename, char \*\*buffer_return)$/;"	f
XpmReadFileToData	stubs/xpmstub.c	/^int XpmReadFileToData(char \*filename, char \*\*\*data_return)$/;"	f
XpmReadFileToImage	stubs/xpmstub.c	/^int XpmReadFileToImage(Display \*display, char \*filename, XImage \*\*image_return, XImage \*\*shapeimage_return, XpmAttributes \*attributes)$/;"	f
XpmReadFileToPixmap	stubs/xpmstub.c	/^int XpmReadFileToPixmap(Display \*display, Drawable d, char \*filename, Pixmap \*pixmap_return, Pixmap \*shapemask_return, XpmAttributes \*attributes)$/;"	f
XpmReadFileToXpmImage	stubs/xpmstub.c	/^int XpmReadFileToXpmImage(char \*filename, XpmImage \*image, XpmInfo \*info)$/;"	f
XpmReadPixmapFile	stubs/xpmstub.c	355;"	d
XpmReturnAllocPixels	stubs/xpmstub.c	145;"	d
XpmReturnColorTable	stubs/xpmstub.c	143;"	d
XpmReturnComments	stubs/xpmstub.c	156;"	d
XpmReturnExtensions	stubs/xpmstub.c	135;"	d
XpmReturnInfos	stubs/xpmstub.c	131;"	d
XpmReturnPixels	stubs/xpmstub.c	133;"	d
XpmRgbFilename	stubs/xpmstub.c	128;"	d
XpmSize	stubs/xpmstub.c	124;"	d
XpmSuccess	stubs/xpmstub.c	7;"	d
XpmUndefPixel	stubs/xpmstub.c	159;"	d
XpmVisual	stubs/xpmstub.c	121;"	d
XpmWriteFileFromBuffer	stubs/xpmstub.c	/^int XpmWriteFileFromBuffer(char \*filename, char \*buffer)$/;"	f
XpmWriteFileFromData	stubs/xpmstub.c	/^int XpmWriteFileFromData(char \*filename, char \*\*data)$/;"	f
XpmWriteFileFromImage	stubs/xpmstub.c	/^int XpmWriteFileFromImage(Display \*display, char \*filename, XImage \*image, XImage \*shapeimage, XpmAttributes \*attributes)$/;"	f
XpmWriteFileFromPixmap	stubs/xpmstub.c	/^int XpmWriteFileFromPixmap(Display \*display, char \*filename, Pixmap pixmap, Pixmap shapemask, XpmAttributes \*attributes)$/;"	f
XpmWriteFileFromXpmImage	stubs/xpmstub.c	/^int XpmWriteFileFromXpmImage(char \*filename, XpmImage \*image, XpmInfo \*info)$/;"	f
XpmWritePixmapFile	stubs/xpmstub.c	356;"	d
XrmInitialize	stubs/xlibstub.c	/^void XrmInitialize(void)$/;"	f
XwcDrawImageString	stubs/xlibstub.c	/^void XwcDrawImageString(Display \*display, Drawable d, XFontSet font_set, GC gc, int x, int y, const wchar_t \*text, int num_wchars)$/;"	f
XwcDrawString	stubs/xlibstub.c	/^void XwcDrawString(Display \*display, Drawable d, XFontSet font_set, GC gc, int x, int y, const wchar_t \*text, int num_wchars)$/;"	f
XwcDrawText	stubs/xlibstub.c	/^void XwcDrawText(Display \*display, Drawable d, GC gc, int x, int y, XwcTextItem \*text_items, int nitems)$/;"	f
XwcFreeStringList	stubs/xlibstub.c	/^void XwcFreeStringList(wchar_t\*\* list)$/;"	f
XwcLookupString	stubs/xlibstub.c	/^int XwcLookupString(XIC ic, XKeyPressedEvent \*event, wchar_t \*buffer_return, int wchars_buffer, KeySym \*keysym_return, Status \*status_return)$/;"	f
XwcResetIC	stubs/xlibstub.c	/^wchar_t \*XwcResetIC(XIC ic)$/;"	f
XwcTextEscapement	stubs/xlibstub.c	/^int XwcTextEscapement(XFontSet font_set, const wchar_t \*text, int num_wchars)$/;"	f
XwcTextExtents	stubs/xlibstub.c	/^int XwcTextExtents(XFontSet font_set, const wchar_t \*text, int num_wchars, XRectangle \*overall_ink_return, XRectangle \*overall_logical_return)$/;"	f
XwcTextItem	stubs/xlibstub.c	/^} XwcTextItem;$/;"	t
XwcTextListToTextProperty	stubs/xlibstub.c	/^int XwcTextListToTextProperty(Display\* display, wchar_t\*\* list, int count, XICCEncodingStyle style, XTextProperty\* text_prop_return)$/;"	f
XwcTextPerCharExtents	stubs/xlibstub.c	/^Status XwcTextPerCharExtents(XFontSet font_set, const wchar_t \*text, int num_wchars, XRectangle \*ink_extents_buffer, XRectangle \*logical_extents_buffer, int /;"	f
XwcTextPropertyToTextList	stubs/xlibstub.c	/^int XwcTextPropertyToTextList(Display\* display, XTextProperty\* text_prop, wchar_t\*\*\* list_return, int\* count_return)$/;"	f
_GArray	stubs/glibstub.c	/^typedef struct _GArray$/;"	s
_GByteArray	stubs/glibstub.c	/^typedef struct _GByteArray$/;"	s
_GCompletion	stubs/glibstub.c	/^typedef struct _GCompletion$/;"	s
_GDate	stubs/glibstub.c	/^typedef struct _GDate$/;"	s
_GDebugKey	stubs/glibstub.c	/^typedef struct _GDebugKey$/;"	s
_GHook	stubs/glibstub.c	/^typedef struct _GHook$/;"	s
_GHookList	stubs/glibstub.c	/^typedef struct _GHookList$/;"	s
_GList	stubs/glibstub.c	/^typedef struct _GList$/;"	s
_GNode	stubs/glibstub.c	/^typedef struct _GNode$/;"	s
_GPtrArray	stubs/glibstub.c	/^typedef struct _GPtrArray$/;"	s
_GSList	stubs/glibstub.c	/^typedef struct _GSList$/;"	s
_GScanner	stubs/glibstub.c	/^typedef struct	_GScanner$/;"	s
_GScannerConfig	stubs/glibstub.c	/^typedef struct	_GScannerConfig$/;"	s
_GString	stubs/glibstub.c	/^typedef struct _GString$/;"	s
_GTokenValue	stubs/glibstub.c	/^typedef union	_GTokenValue$/;"	u
_GTuples	stubs/glibstub.c	/^typedef struct _GTuples$/;"	s
_GdkColor	stubs/gdkstub.c	/^typedef struct _GdkColor$/;"	s
_GdkColorContext	stubs/gdkstub.c	/^typedef struct _GdkColorContext$/;"	s
_GdkColorContextDither	stubs/gdkstub.c	/^typedef struct _GdkColorContextDither$/;"	s
_GdkColormap	stubs/gdkstub.c	/^typedef struct _GdkColormap$/;"	s
_GdkCursor	stubs/gdkstub.c	/^typedef struct _GdkCursor$/;"	s
_GdkDeviceInfo	stubs/gdkstub.c	/^typedef struct _GdkDeviceInfo$/;"	s
_GdkDeviceKey	stubs/gdkstub.c	/^typedef struct _GdkDeviceKey$/;"	s
_GdkDragContext	stubs/gdkstub.c	/^typedef struct _GdkDragContext$/;"	s
_GdkEvent	stubs/gdkstub.c	/^typedef union _GdkEvent$/;"	u
_GdkEventAny	stubs/gdkstub.c	/^typedef struct _GdkEventAny$/;"	s
_GdkEventButton	stubs/gdkstub.c	/^typedef struct _GdkEventButton$/;"	s
_GdkEventClient	stubs/gdkstub.c	/^typedef struct _GdkEventClient$/;"	s
_GdkEventConfigure	stubs/gdkstub.c	/^typedef struct _GdkEventConfigure$/;"	s
_GdkEventCrossing	stubs/gdkstub.c	/^typedef struct _GdkEventCrossing$/;"	s
_GdkEventDND	stubs/gdkstub.c	/^typedef struct _GdkEventDND$/;"	s
_GdkEventExpose	stubs/gdkstub.c	/^typedef struct _GdkEventExpose$/;"	s
_GdkEventFocus	stubs/gdkstub.c	/^typedef struct _GdkEventFocus$/;"	s
_GdkEventKey	stubs/gdkstub.c	/^typedef struct _GdkEventKey$/;"	s
_GdkEventMotion	stubs/gdkstub.c	/^typedef struct _GdkEventMotion$/;"	s
_GdkEventNoExpose	stubs/gdkstub.c	/^typedef struct _GdkEventNoExpose$/;"	s
_GdkEventProperty	stubs/gdkstub.c	/^typedef struct _GdkEventProperty$/;"	s
_GdkEventProximity	stubs/gdkstub.c	/^typedef struct _GdkEventProximity$/;"	s
_GdkEventSelection	stubs/gdkstub.c	/^typedef struct _GdkEventSelection$/;"	s
_GdkEventVisibility	stubs/gdkstub.c	/^typedef struct _GdkEventVisibility$/;"	s
_GdkFont	stubs/gdkstub.c	/^typedef struct _GdkFont$/;"	s
_GdkGC	stubs/gdkstub.c	/^typedef struct _GdkGC$/;"	s
_GdkGCValues	stubs/gdkstub.c	/^typedef struct _GdkGCValues$/;"	s
_GdkGeometry	stubs/gdkstub.c	/^typedef struct _GdkGeometry {$/;"	s
_GdkICAttr	stubs/gdkstub.c	/^typedef struct _GdkICAttr$/;"	s
_GdkImage	stubs/gdkstub.c	/^typedef struct _GdkImage$/;"	s
_GdkPoint	stubs/gdkstub.c	/^typedef struct _GdkPoint$/;"	s
_GdkRectangle	stubs/gdkstub.c	/^typedef struct _GdkRectangle$/;"	s
_GdkRegion	stubs/gdkstub.c	/^typedef struct _GdkRegion$/;"	s
_GdkRgbCmap	stubs/gdkstub.c	/^typedef struct _GdkRgbCmap {$/;"	s
_GdkSegment	stubs/gdkstub.c	/^typedef struct _GdkSegment$/;"	s
_GdkTimeCoord	stubs/gdkstub.c	/^typedef struct _GdkTimeCoord$/;"	s
_GdkVisual	stubs/gdkstub.c	/^typedef struct _GdkVisual$/;"	s
_GdkWindow	stubs/gdkstub.c	/^typedef struct _GdkWindow$/;"	s
_GdkWindowAttr	stubs/gdkstub.c	/^typedef struct _GdkWindowAttr$/;"	s
_GtkAccelEntry	stubs/gtkstub.c	/^typedef struct _GtkAccelEntry$/;"	s
_GtkAccelGroup	stubs/gtkstub.c	/^typedef struct _GtkAccelGroup$/;"	s
_GtkAccelLabel	stubs/gtkstub.c	/^typedef struct _GtkAccelLabel$/;"	s
_GtkAccelLabelClass	stubs/gtkstub.c	/^typedef struct _GtkAccelLabelClass$/;"	s
_GtkAdjustment	stubs/gtkstub.c	/^typedef struct _GtkAdjustment$/;"	s
_GtkAdjustmentClass	stubs/gtkstub.c	/^typedef struct _GtkAdjustmentClass$/;"	s
_GtkAlignment	stubs/gtkstub.c	/^typedef struct _GtkAlignment$/;"	s
_GtkAlignmentClass	stubs/gtkstub.c	/^typedef struct _GtkAlignmentClass$/;"	s
_GtkAllocation	stubs/gtkstub.c	/^typedef struct _GtkAllocation$/;"	s
_GtkArg	stubs/gtkstub.c	/^typedef struct _GtkArg$/;"	s
_GtkArgInfo	stubs/gtkstub.c	/^typedef struct _GtkArgInfo$/;"	s
_GtkArrow	stubs/gtkstub.c	/^typedef struct _GtkArrow$/;"	s
_GtkArrowClass	stubs/gtkstub.c	/^typedef struct _GtkArrowClass$/;"	s
_GtkAspectFrame	stubs/gtkstub.c	/^typedef struct _GtkAspectFrame$/;"	s
_GtkAspectFrameClass	stubs/gtkstub.c	/^typedef struct _GtkAspectFrameClass$/;"	s
_GtkBin	stubs/gtkstub.c	/^typedef struct _GtkBin$/;"	s
_GtkBinClass	stubs/gtkstub.c	/^typedef struct _GtkBinClass$/;"	s
_GtkBindingArg	stubs/gtkstub.c	/^typedef struct _GtkBindingArg$/;"	s
_GtkBindingEntry	stubs/gtkstub.c	/^typedef struct _GtkBindingEntry$/;"	s
_GtkBindingSet	stubs/gtkstub.c	/^typedef struct _GtkBindingSet$/;"	s
_GtkBindingSignal	stubs/gtkstub.c	/^typedef struct _GtkBindingSignal$/;"	s
_GtkBox	stubs/gtkstub.c	/^typedef struct _GtkBox$/;"	s
_GtkBoxChild	stubs/gtkstub.c	/^typedef struct _GtkBoxChild$/;"	s
_GtkBoxClass	stubs/gtkstub.c	/^typedef struct _GtkBoxClass$/;"	s
_GtkButton	stubs/gtkstub.c	/^typedef struct _GtkButton$/;"	s
_GtkButtonBox	stubs/gtkstub.c	/^typedef struct _GtkButtonBox$/;"	s
_GtkButtonBoxClass	stubs/gtkstub.c	/^typedef struct _GtkButtonBoxClass$/;"	s
_GtkButtonClass	stubs/gtkstub.c	/^typedef struct _GtkButtonClass$/;"	s
_GtkCList	stubs/gtkstub.c	/^typedef struct _GtkCList$/;"	s
_GtkCListCellInfo	stubs/gtkstub.c	/^typedef struct _GtkCListCellInfo$/;"	s
_GtkCListClass	stubs/gtkstub.c	/^typedef struct _GtkCListClass$/;"	s
_GtkCListColumn	stubs/gtkstub.c	/^typedef struct _GtkCListColumn$/;"	s
_GtkCListDestInfo	stubs/gtkstub.c	/^typedef struct _GtkCListDestInfo$/;"	s
_GtkCListRow	stubs/gtkstub.c	/^typedef struct _GtkCListRow$/;"	s
_GtkCTree	stubs/gtkstub.c	/^typedef struct _GtkCTree$/;"	s
_GtkCTreeClass	stubs/gtkstub.c	/^typedef struct _GtkCTreeClass$/;"	s
_GtkCTreeNode	stubs/gtkstub.c	/^typedef struct _GtkCTreeNode$/;"	s
_GtkCTreeRow	stubs/gtkstub.c	/^typedef struct _GtkCTreeRow$/;"	s
_GtkCalendar	stubs/gtkstub.c	/^typedef struct _GtkCalendar$/;"	s
_GtkCalendarClass	stubs/gtkstub.c	/^typedef struct _GtkCalendarClass$/;"	s
_GtkCell	stubs/gtkstub.c	/^typedef struct _GtkCell$/;"	s
_GtkCellPixText	stubs/gtkstub.c	/^typedef struct _GtkCellPixText$/;"	s
_GtkCellPixmap	stubs/gtkstub.c	/^typedef struct _GtkCellPixmap$/;"	s
_GtkCellText	stubs/gtkstub.c	/^typedef struct _GtkCellText$/;"	s
_GtkCellWidget	stubs/gtkstub.c	/^typedef struct _GtkCellWidget$/;"	s
_GtkCheckButton	stubs/gtkstub.c	/^typedef struct _GtkCheckButton$/;"	s
_GtkCheckButtonClass	stubs/gtkstub.c	/^typedef struct _GtkCheckButtonClass$/;"	s
_GtkCheckMenuItem	stubs/gtkstub.c	/^typedef struct _GtkCheckMenuItem$/;"	s
_GtkCheckMenuItemClass	stubs/gtkstub.c	/^typedef struct _GtkCheckMenuItemClass$/;"	s
_GtkColorSelection	stubs/gtkstub.c	/^typedef struct _GtkColorSelection$/;"	s
_GtkColorSelectionClass	stubs/gtkstub.c	/^typedef struct _GtkColorSelectionClass$/;"	s
_GtkColorSelectionDialog	stubs/gtkstub.c	/^typedef struct _GtkColorSelectionDialog$/;"	s
_GtkColorSelectionDialogClass	stubs/gtkstub.c	/^typedef struct _GtkColorSelectionDialogClass$/;"	s
_GtkCombo	stubs/gtkstub.c	/^typedef struct _GtkCombo$/;"	s
_GtkComboClass	stubs/gtkstub.c	/^typedef struct _GtkComboClass$/;"	s
_GtkContainer	stubs/gtkstub.c	/^typedef struct _GtkContainer$/;"	s
_GtkContainerClass	stubs/gtkstub.c	/^typedef struct _GtkContainerClass$/;"	s
_GtkCurve	stubs/gtkstub.c	/^typedef struct _GtkCurve$/;"	s
_GtkCurveClass	stubs/gtkstub.c	/^typedef struct _GtkCurveClass$/;"	s
_GtkData	stubs/gtkstub.c	/^typedef struct _GtkData$/;"	s
_GtkDataClass	stubs/gtkstub.c	/^typedef struct _GtkDataClass$/;"	s
_GtkDialog	stubs/gtkstub.c	/^typedef struct _GtkDialog$/;"	s
_GtkDialogClass	stubs/gtkstub.c	/^typedef struct _GtkDialogClass$/;"	s
_GtkDitherInfo	stubs/gtkstub.c	/^union _GtkDitherInfo$/;"	u
_GtkDrawingArea	stubs/gtkstub.c	/^typedef struct _GtkDrawingArea$/;"	s
_GtkDrawingAreaClass	stubs/gtkstub.c	/^typedef struct _GtkDrawingAreaClass$/;"	s
_GtkEditable	stubs/gtkstub.c	/^typedef struct _GtkEditable$/;"	s
_GtkEditableClass	stubs/gtkstub.c	/^typedef struct _GtkEditableClass$/;"	s
_GtkEntry	stubs/gtkstub.c	/^typedef struct _GtkEntry$/;"	s
_GtkEntryClass	stubs/gtkstub.c	/^typedef struct _GtkEntryClass$/;"	s
_GtkEnumValue	stubs/gtkstub.c	/^typedef struct _GtkEnumValue$/;"	s
_GtkEventBox	stubs/gtkstub.c	/^typedef struct _GtkEventBox$/;"	s
_GtkEventBoxClass	stubs/gtkstub.c	/^typedef struct _GtkEventBoxClass$/;"	s
_GtkFileSelection	stubs/gtkstub.c	/^typedef struct _GtkFileSelection$/;"	s
_GtkFileSelectionClass	stubs/gtkstub.c	/^typedef struct _GtkFileSelectionClass$/;"	s
_GtkFixed	stubs/gtkstub.c	/^typedef struct _GtkFixed$/;"	s
_GtkFixedChild	stubs/gtkstub.c	/^typedef struct _GtkFixedChild$/;"	s
_GtkFixedClass	stubs/gtkstub.c	/^typedef struct _GtkFixedClass$/;"	s
_GtkFontFilter	stubs/gtkstub.c	/^typedef struct _GtkFontFilter$/;"	s
_GtkFontSelection	stubs/gtkstub.c	/^typedef struct _GtkFontSelection$/;"	s
_GtkFontSelectionClass	stubs/gtkstub.c	/^typedef struct _GtkFontSelectionClass$/;"	s
_GtkFontSelectionDialog	stubs/gtkstub.c	/^typedef struct _GtkFontSelectionDialog$/;"	s
_GtkFontSelectionDialogClass	stubs/gtkstub.c	/^typedef struct _GtkFontSelectionDialogClass$/;"	s
_GtkFrame	stubs/gtkstub.c	/^typedef struct _GtkFrame$/;"	s
_GtkFrameClass	stubs/gtkstub.c	/^typedef struct _GtkFrameClass$/;"	s
_GtkGammaCurve	stubs/gtkstub.c	/^typedef struct _GtkGammaCurve$/;"	s
_GtkGammaCurveClass	stubs/gtkstub.c	/^typedef struct _GtkGammaCurveClass$/;"	s
_GtkHBox	stubs/gtkstub.c	/^typedef struct _GtkHBox$/;"	s
_GtkHBoxClass	stubs/gtkstub.c	/^typedef struct _GtkHBoxClass$/;"	s
_GtkHButtonBox	stubs/gtkstub.c	/^typedef struct _GtkHButtonBox$/;"	s
_GtkHButtonBoxClass	stubs/gtkstub.c	/^typedef struct _GtkHButtonBoxClass$/;"	s
_GtkHPaned	stubs/gtkstub.c	/^typedef struct _GtkHPaned$/;"	s
_GtkHPanedClass	stubs/gtkstub.c	/^typedef struct _GtkHPanedClass$/;"	s
_GtkHRuler	stubs/gtkstub.c	/^typedef struct _GtkHRuler$/;"	s
_GtkHRulerClass	stubs/gtkstub.c	/^typedef struct _GtkHRulerClass$/;"	s
_GtkHScale	stubs/gtkstub.c	/^typedef struct _GtkHScale$/;"	s
_GtkHScaleClass	stubs/gtkstub.c	/^typedef struct _GtkHScaleClass$/;"	s
_GtkHScrollbar	stubs/gtkstub.c	/^typedef struct _GtkHScrollbar$/;"	s
_GtkHScrollbarClass	stubs/gtkstub.c	/^typedef struct _GtkHScrollbarClass$/;"	s
_GtkHSeparator	stubs/gtkstub.c	/^typedef struct _GtkHSeparator$/;"	s
_GtkHSeparatorClass	stubs/gtkstub.c	/^typedef struct _GtkHSeparatorClass$/;"	s
_GtkHandleBox	stubs/gtkstub.c	/^typedef struct _GtkHandleBox$/;"	s
_GtkHandleBoxClass	stubs/gtkstub.c	/^typedef struct _GtkHandleBoxClass$/;"	s
_GtkImage	stubs/gtkstub.c	/^typedef struct _GtkImage$/;"	s
_GtkImageClass	stubs/gtkstub.c	/^typedef struct _GtkImageClass$/;"	s
_GtkInputDialog	stubs/gtkstub.c	/^typedef struct _GtkInputDialog$/;"	s
_GtkInputDialogClass	stubs/gtkstub.c	/^typedef struct _GtkInputDialogClass$/;"	s
_GtkInvisible	stubs/gtkstub.c	/^typedef struct _GtkInvisible$/;"	s
_GtkInvisibleClass	stubs/gtkstub.c	/^typedef struct _GtkInvisibleClass$/;"	s
_GtkItem	stubs/gtkstub.c	/^typedef struct _GtkItem$/;"	s
_GtkItemClass	stubs/gtkstub.c	/^typedef struct _GtkItemClass$/;"	s
_GtkItemFactory	stubs/gtkstub.c	/^typedef struct _GtkItemFactory$/;"	s
_GtkItemFactoryClass	stubs/gtkstub.c	/^typedef struct _GtkItemFactoryClass$/;"	s
_GtkItemFactoryEntry	stubs/gtkstub.c	/^typedef struct _GtkItemFactoryEntry$/;"	s
_GtkItemFactoryItem	stubs/gtkstub.c	/^typedef struct _GtkItemFactoryItem$/;"	s
_GtkLabel	stubs/gtkstub.c	/^typedef struct _GtkLabel$/;"	s
_GtkLabelClass	stubs/gtkstub.c	/^typedef struct _GtkLabelClass$/;"	s
_GtkLayout	stubs/gtkstub.c	/^typedef struct _GtkLayout$/;"	s
_GtkLayoutClass	stubs/gtkstub.c	/^typedef struct _GtkLayoutClass$/;"	s
_GtkList	stubs/gtkstub.c	/^typedef struct _GtkList$/;"	s
_GtkListClass	stubs/gtkstub.c	/^typedef struct _GtkListClass$/;"	s
_GtkListItem	stubs/gtkstub.c	/^typedef struct _GtkListItem$/;"	s
_GtkListItemClass	stubs/gtkstub.c	/^typedef struct _GtkListItemClass$/;"	s
_GtkMenu	stubs/gtkstub.c	/^typedef struct _GtkMenu$/;"	s
_GtkMenuBar	stubs/gtkstub.c	/^typedef struct _GtkMenuBar$/;"	s
_GtkMenuBarClass	stubs/gtkstub.c	/^typedef struct _GtkMenuBarClass$/;"	s
_GtkMenuClass	stubs/gtkstub.c	/^typedef struct _GtkMenuClass$/;"	s
_GtkMenuEntry	stubs/gtkstub.c	/^typedef struct _GtkMenuEntry$/;"	s
_GtkMenuFactory	stubs/gtkstub.c	/^typedef struct _GtkMenuFactory$/;"	s
_GtkMenuItem	stubs/gtkstub.c	/^typedef struct _GtkMenuItem$/;"	s
_GtkMenuItemClass	stubs/gtkstub.c	/^typedef struct _GtkMenuItemClass$/;"	s
_GtkMenuPath	stubs/gtkstub.c	/^typedef struct _GtkMenuPath$/;"	s
_GtkMenuShell	stubs/gtkstub.c	/^typedef struct _GtkMenuShell$/;"	s
_GtkMenuShellClass	stubs/gtkstub.c	/^typedef struct _GtkMenuShellClass$/;"	s
_GtkMisc	stubs/gtkstub.c	/^typedef struct _GtkMisc$/;"	s
_GtkMiscClass	stubs/gtkstub.c	/^typedef struct _GtkMiscClass$/;"	s
_GtkNotebook	stubs/gtkstub.c	/^typedef struct _GtkNotebook$/;"	s
_GtkNotebookClass	stubs/gtkstub.c	/^typedef struct _GtkNotebookClass$/;"	s
_GtkNotebookPage	stubs/gtkstub.c	/^typedef struct _GtkNotebookPage$/;"	s
_GtkObject	stubs/gtkstub.c	/^typedef struct _GtkObject$/;"	s
_GtkObjectClass	stubs/gtkstub.c	/^typedef struct _GtkObjectClass$/;"	s
_GtkOptionMenu	stubs/gtkstub.c	/^typedef struct _GtkOptionMenu$/;"	s
_GtkOptionMenuClass	stubs/gtkstub.c	/^typedef struct _GtkOptionMenuClass$/;"	s
_GtkPacker	stubs/gtkstub.c	/^typedef struct _GtkPacker$/;"	s
_GtkPackerChild	stubs/gtkstub.c	/^typedef struct _GtkPackerChild$/;"	s
_GtkPackerClass	stubs/gtkstub.c	/^typedef struct _GtkPackerClass$/;"	s
_GtkPaned	stubs/gtkstub.c	/^typedef struct _GtkPaned$/;"	s
_GtkPanedClass	stubs/gtkstub.c	/^typedef struct _GtkPanedClass$/;"	s
_GtkPatternSpec	stubs/gtkstub.c	/^typedef struct _GtkPatternSpec$/;"	s
_GtkPixmap	stubs/gtkstub.c	/^typedef struct _GtkPixmap$/;"	s
_GtkPixmapClass	stubs/gtkstub.c	/^typedef struct _GtkPixmapClass$/;"	s
_GtkPlug	stubs/gtkstub.c	/^typedef struct _GtkPlug$/;"	s
_GtkPlugClass	stubs/gtkstub.c	/^typedef struct _GtkPlugClass$/;"	s
_GtkPreview	stubs/gtkstub.c	/^typedef struct _GtkPreview$/;"	s
_GtkPreviewClass	stubs/gtkstub.c	/^typedef struct _GtkPreviewClass$/;"	s
_GtkPreviewInfo	stubs/gtkstub.c	/^typedef struct _GtkPreviewInfo$/;"	s
_GtkProgress	stubs/gtkstub.c	/^typedef struct _GtkProgress$/;"	s
_GtkProgressBar	stubs/gtkstub.c	/^typedef struct _GtkProgressBar$/;"	s
_GtkProgressBarClass	stubs/gtkstub.c	/^typedef struct _GtkProgressBarClass$/;"	s
_GtkProgressClass	stubs/gtkstub.c	/^typedef struct _GtkProgressClass$/;"	s
_GtkPropertyMark	stubs/gtkstub.c	/^typedef struct _GtkPropertyMark$/;"	s
_GtkRadioButton	stubs/gtkstub.c	/^typedef struct _GtkRadioButton$/;"	s
_GtkRadioButtonClass	stubs/gtkstub.c	/^typedef struct _GtkRadioButtonClass$/;"	s
_GtkRadioMenuItem	stubs/gtkstub.c	/^typedef struct _GtkRadioMenuItem$/;"	s
_GtkRadioMenuItemClass	stubs/gtkstub.c	/^typedef struct _GtkRadioMenuItemClass$/;"	s
_GtkRange	stubs/gtkstub.c	/^typedef struct _GtkRange$/;"	s
_GtkRangeClass	stubs/gtkstub.c	/^typedef struct _GtkRangeClass$/;"	s
_GtkRcStyle	stubs/gtkstub.c	/^typedef struct _GtkRcStyle$/;"	s
_GtkRequisition	stubs/gtkstub.c	/^typedef struct _GtkRequisition$/;"	s
_GtkRuler	stubs/gtkstub.c	/^typedef struct _GtkRuler$/;"	s
_GtkRulerClass	stubs/gtkstub.c	/^typedef struct _GtkRulerClass$/;"	s
_GtkRulerMetric	stubs/gtkstub.c	/^typedef struct _GtkRulerMetric$/;"	s
_GtkScale	stubs/gtkstub.c	/^typedef struct _GtkScale$/;"	s
_GtkScaleClass	stubs/gtkstub.c	/^typedef struct _GtkScaleClass$/;"	s
_GtkScrollbar	stubs/gtkstub.c	/^typedef struct _GtkScrollbar$/;"	s
_GtkScrollbarClass	stubs/gtkstub.c	/^typedef struct _GtkScrollbarClass$/;"	s
_GtkScrolledWindow	stubs/gtkstub.c	/^typedef struct _GtkScrolledWindow$/;"	s
_GtkScrolledWindowClass	stubs/gtkstub.c	/^typedef struct _GtkScrolledWindowClass$/;"	s
_GtkSelectionData	stubs/gtkstub.c	/^typedef struct _GtkSelectionData$/;"	s
_GtkSeparator	stubs/gtkstub.c	/^typedef struct _GtkSeparator$/;"	s
_GtkSeparatorClass	stubs/gtkstub.c	/^typedef struct _GtkSeparatorClass$/;"	s
_GtkSignalQuery	stubs/gtkstub.c	/^struct _GtkSignalQuery$/;"	s
_GtkSocket	stubs/gtkstub.c	/^typedef struct _GtkSocket$/;"	s
_GtkSocketClass	stubs/gtkstub.c	/^typedef struct _GtkSocketClass$/;"	s
_GtkSpinButton	stubs/gtkstub.c	/^typedef struct _GtkSpinButton$/;"	s
_GtkSpinButtonClass	stubs/gtkstub.c	/^typedef struct _GtkSpinButtonClass$/;"	s
_GtkStatusbar	stubs/gtkstub.c	/^typedef struct _GtkStatusbar$/;"	s
_GtkStatusbarClass	stubs/gtkstub.c	/^typedef struct _GtkStatusbarClass$/;"	s
_GtkStatusbarMsg	stubs/gtkstub.c	/^typedef struct _GtkStatusbarMsg$/;"	s
_GtkStyle	stubs/gtkstub.c	/^typedef struct _GtkStyle$/;"	s
_GtkStyleClass	stubs/gtkstub.c	/^typedef struct _GtkStyleClass$/;"	s
_GtkTable	stubs/gtkstub.c	/^typedef struct _GtkTable$/;"	s
_GtkTableChild	stubs/gtkstub.c	/^typedef struct _GtkTableChild$/;"	s
_GtkTableClass	stubs/gtkstub.c	/^typedef struct _GtkTableClass$/;"	s
_GtkTableRowCol	stubs/gtkstub.c	/^typedef struct _GtkTableRowCol$/;"	s
_GtkTargetEntry	stubs/gtkstub.c	/^typedef struct _GtkTargetEntry$/;"	s
_GtkTargetList	stubs/gtkstub.c	/^typedef struct _GtkTargetList$/;"	s
_GtkTargetPair	stubs/gtkstub.c	/^typedef struct _GtkTargetPair$/;"	s
_GtkTearoffMenuItem	stubs/gtkstub.c	/^typedef struct _GtkTearoffMenuItem$/;"	s
_GtkTearoffMenuItemClass	stubs/gtkstub.c	/^typedef struct _GtkTearoffMenuItemClass$/;"	s
_GtkText	stubs/gtkstub.c	/^typedef struct _GtkText$/;"	s
_GtkTextClass	stubs/gtkstub.c	/^typedef struct _GtkTextClass$/;"	s
_GtkThemeEngine	stubs/gtkstub.c	/^typedef struct _GtkThemeEngine$/;"	s
_GtkTipsQuery	stubs/gtkstub.c	/^struct _GtkTipsQuery$/;"	s
_GtkTipsQueryClass	stubs/gtkstub.c	/^struct _GtkTipsQueryClass$/;"	s
_GtkToggleButton	stubs/gtkstub.c	/^typedef struct _GtkToggleButton$/;"	s
_GtkToggleButtonClass	stubs/gtkstub.c	/^typedef struct _GtkToggleButtonClass$/;"	s
_GtkToolbar	stubs/gtkstub.c	/^typedef struct _GtkToolbar$/;"	s
_GtkToolbarChild	stubs/gtkstub.c	/^typedef struct _GtkToolbarChild$/;"	s
_GtkToolbarClass	stubs/gtkstub.c	/^typedef struct _GtkToolbarClass$/;"	s
_GtkTooltips	stubs/gtkstub.c	/^typedef struct _GtkTooltips$/;"	s
_GtkTooltipsClass	stubs/gtkstub.c	/^typedef struct _GtkTooltipsClass$/;"	s
_GtkTooltipsData	stubs/gtkstub.c	/^typedef struct _GtkTooltipsData$/;"	s
_GtkTree	stubs/gtkstub.c	/^typedef struct _GtkTree$/;"	s
_GtkTreeClass	stubs/gtkstub.c	/^typedef struct _GtkTreeClass$/;"	s
_GtkTreeItem	stubs/gtkstub.c	/^typedef struct _GtkTreeItem$/;"	s
_GtkTreeItemClass	stubs/gtkstub.c	/^typedef struct _GtkTreeItemClass$/;"	s
_GtkTypeClass	stubs/gtkstub.c	/^typedef struct _GtkTypeClass$/;"	s
_GtkTypeInfo	stubs/gtkstub.c	/^typedef struct _GtkTypeInfo$/;"	s
_GtkTypeObject	stubs/gtkstub.c	/^typedef struct _GtkTypeObject$/;"	s
_GtkTypeQuery	stubs/gtkstub.c	/^typedef struct _GtkTypeQuery$/;"	s
_GtkVBox	stubs/gtkstub.c	/^typedef struct _GtkVBox$/;"	s
_GtkVBoxClass	stubs/gtkstub.c	/^typedef struct _GtkVBoxClass$/;"	s
_GtkVButtonBox	stubs/gtkstub.c	/^typedef struct _GtkVButtonBox$/;"	s
_GtkVButtonBoxClass	stubs/gtkstub.c	/^typedef struct _GtkVButtonBoxClass$/;"	s
_GtkVPaned	stubs/gtkstub.c	/^typedef struct _GtkVPaned$/;"	s
_GtkVPanedClass	stubs/gtkstub.c	/^typedef struct _GtkVPanedClass$/;"	s
_GtkVRuler	stubs/gtkstub.c	/^typedef struct _GtkVRuler$/;"	s
_GtkVRulerClass	stubs/gtkstub.c	/^typedef struct _GtkVRulerClass$/;"	s
_GtkVScale	stubs/gtkstub.c	/^typedef struct _GtkVScale$/;"	s
_GtkVScaleClass	stubs/gtkstub.c	/^typedef struct _GtkVScaleClass$/;"	s
_GtkVScrollbar	stubs/gtkstub.c	/^typedef struct _GtkVScrollbar$/;"	s
_GtkVScrollbarClass	stubs/gtkstub.c	/^typedef struct _GtkVScrollbarClass$/;"	s
_GtkVSeparator	stubs/gtkstub.c	/^typedef struct _GtkVSeparator$/;"	s
_GtkVSeparatorClass	stubs/gtkstub.c	/^typedef struct _GtkVSeparatorClass$/;"	s
_GtkViewport	stubs/gtkstub.c	/^typedef struct _GtkViewport$/;"	s
_GtkViewportClass	stubs/gtkstub.c	/^typedef struct _GtkViewportClass$/;"	s
_GtkWidget	stubs/gtkstub.c	/^typedef struct _GtkWidget$/;"	s
_GtkWidgetAuxInfo	stubs/gtkstub.c	/^typedef struct _GtkWidgetAuxInfo$/;"	s
_GtkWidgetClass	stubs/gtkstub.c	/^typedef struct _GtkWidgetClass$/;"	s
_GtkWidgetShapeInfo	stubs/gtkstub.c	/^typedef struct _GtkWidgetShapeInfo$/;"	s
_GtkWindow	stubs/gtkstub.c	/^typedef struct _GtkWindow$/;"	s
_GtkWindowClass	stubs/gtkstub.c	/^typedef struct _GtkWindowClass$/;"	s
_IOT_mtconfiginfo	stubs/unixstub.c	4392;"	d
_IOT_mtget	stubs/unixstub.c	4400;"	d
_IOT_mtop	stubs/unixstub.c	4410;"	d
_IOT_mtop	stubs/unixstub.c	4454;"	d
_IOT_mtpos	stubs/unixstub.c	4418;"	d
_IOT_mtpos	stubs/unixstub.c	4462;"	d
_MKNOD_VER	stubs/unixstub.c	5406;"	d
_PATH_LOG	stubs/unixstub.c	5767;"	d
_POSIX2_C_BIND	stubs/unixstub.c	695;"	d
_POSIX2_C_DEV	stubs/unixstub.c	700;"	d
_POSIX2_C_VERSION	stubs/unixstub.c	704;"	d
_POSIX2_LOCALEDEF	stubs/unixstub.c	709;"	d
_POSIX2_SW_DEV	stubs/unixstub.c	714;"	d
_POSIX2_VERSION	stubs/unixstub.c	718;"	d
_POSIX_VERSION	stubs/unixstub.c	723;"	d
_PROFIL_H	stubs/unixstub.c	4653;"	d
_STAT_VER	stubs/unixstub.c	5409;"	d
_SYSCALL_H	stubs/unixstub.c	5586;"	d
_SYS_ACCT_H	stubs/unixstub.c	1654;"	d
_SYS_DEBUGREG_H	stubs/unixstub.c	3548;"	d
_SYS_DIR_H	stubs/unixstub.c	3553;"	d
_SYS_ELF_H	stubs/unixstub.c	3561;"	d
_SYS_GMON_H	stubs/unixstub.c	3655;"	d
_SYS_GMON_OUT_H	stubs/unixstub.c	3765;"	d
_SYS_IO_H	stubs/unixstub.c	3802;"	d
_SYS_IPC_H	stubs/unixstub.c	3900;"	d
_SYS_MMAN_H	stubs/unixstub.c	3933;"	d
_SYS_MTIO_H	stubs/unixstub.c	4422;"	d
_SYS_PARAM_H	stubs/unixstub.c	4503;"	d
_SYS_PCI_H	stubs/unixstub.c	4529;"	d
_SYS_PERM_H	stubs/unixstub.c	4533;"	d
_SYS_POLL_H	stubs/unixstub.c	4537;"	d
_SYS_PRCTL_H	stubs/unixstub.c	4554;"	d
_SYS_PROCFS_H	stubs/unixstub.c	4569;"	d
_SYS_PTRACE_H	stubs/unixstub.c	4771;"	d
_SYS_QUOTA_H	stubs/unixstub.c	4868;"	d
_SYS_RAW_H	stubs/unixstub.c	4962;"	d
_SYS_REBOOT_H	stubs/unixstub.c	4994;"	d
_SYS_REG_H	stubs/unixstub.c	5049;"	d
_SYS_RESOURCE_H	stubs/unixstub.c	5053;"	d
_SYS_SELECT_H	stubs/unixstub.c	5108;"	d
_SYS_SEM_H	stubs/unixstub.c	5158;"	d
_SYS_SENDFILE_H	stubs/unixstub.c	5174;"	d
_SYS_SHM_H	stubs/unixstub.c	5187;"	d
_SYS_SOCKET_H	stubs/unixstub.c	5222;"	d
_SYS_STATFS_H	stubs/unixstub.c	5266;"	d
_SYS_STATVFS_H	stubs/unixstub.c	5534;"	d
_SYS_STAT_H	stubs/unixstub.c	5412;"	d
_SYS_SWAP_H	stubs/unixstub.c	5582;"	d
_SYS_SYSCTL_H	stubs/unixstub.c	5590;"	d
_SYS_SYSINFO_H	stubs/unixstub.c	5597;"	d
_SYS_SYSLOG_H	stubs/unixstub.c	5770;"	d
_SYS_SYSMACROS_H	stubs/unixstub.c	5843;"	d
_SYS_TERMIOS_H	stubs/unixstub.c	5883;"	d
_SYS_TIMEB_H	stubs/unixstub.c	5887;"	d
_SYS_TIMES_H	stubs/unixstub.c	6091;"	d
_SYS_TIMEX_H	stubs/unixstub.c	6224;"	d
_SYS_TIME_H	stubs/unixstub.c	5933;"	d
_SYS_TTYCHARS_H	stubs/unixstub.c	6251;"	d
_SYS_TTYDEFAULTS_H_	stubs/unixstub.c	6367;"	d
_SYS_TYPES_H	stubs/unixstub.c	6378;"	d
_SYS_UCONTEXT_H	stubs/unixstub.c	6759;"	d
_SYS_UIO_H	stubs/unixstub.c	6938;"	d
_SYS_UN_H	stubs/unixstub.c	6949;"	d
_SYS_USER_H	stubs/unixstub.c	6985;"	d
_SYS_USTAT_H	stubs/unixstub.c	7062;"	d
_SYS_UTSNAME_H	stubs/unixstub.c	7069;"	d
_SYS_VLIMIT_H	stubs/unixstub.c	7087;"	d
_SYS_VM86_H	stubs/unixstub.c	7096;"	d
_SYS_VTIMES_H	stubs/unixstub.c	7107;"	d
_SYS_WAIT_H	stubs/unixstub.c	7168;"	d
_UNISTD_H	stubs/unixstub.c	726;"	d
_UTSNAME_NODENAME_LENGTH	stubs/unixstub.c	7072;"	d
_XComposeStatus	stubs/xlibstub.c	/^typedef struct _XComposeStatus {$/;"	s
_XEvent	stubs/xlibstub.c	/^typedef union _XEvent {$/;"	u
_XExtData	stubs/xlibstub.c	/^typedef struct _XExtData {$/;"	s
_XGC	stubs/xlibstub.c	/^typedef struct _XGC$/;"	s
_XGlyphInfo	stubs/xftstub.c	/^typedef struct _XGlyphInfo {$/;"	s
_XIMHotKeyTrigger	stubs/xlibstub.c	/^typedef struct _XIMHotKeyTrigger {$/;"	s
_XIMHotKeyTriggers	stubs/xlibstub.c	/^typedef struct _XIMHotKeyTriggers {$/;"	s
_XIMPreeditCaretCallbackStruct	stubs/xlibstub.c	/^typedef struct _XIMPreeditCaretCallbackStruct {$/;"	s
_XIMPreeditDrawCallbackStruct	stubs/xlibstub.c	/^typedef struct _XIMPreeditDrawCallbackStruct {$/;"	s
_XIMPreeditStateNotifyCallbackStruct	stubs/xlibstub.c	/^typedef	struct	_XIMPreeditStateNotifyCallbackStruct {$/;"	s
_XIMStatusDrawCallbackStruct	stubs/xlibstub.c	/^typedef struct _XIMStatusDrawCallbackStruct {$/;"	s
_XIMStringConversionCallbackStruct	stubs/xlibstub.c	/^typedef struct _XIMStringConversionCallbackStruct {$/;"	s
_XIMStringConversionText	stubs/xlibstub.c	/^typedef struct _XIMStringConversionText {$/;"	s
_XIMText	stubs/xlibstub.c	/^typedef struct _XIMText {$/;"	s
_XImage	stubs/xlibstub.c	/^typedef struct _XImage {$/;"	s
_XOPEN_CRYPT	stubs/unixstub.c	730;"	d
_XOPEN_ENH_I18N	stubs/unixstub.c	735;"	d
_XOPEN_LEGACY	stubs/unixstub.c	739;"	d
_XOPEN_UNIX	stubs/unixstub.c	743;"	d
_XOPEN_VERSION	stubs/unixstub.c	746;"	d
_XOPEN_VERSION	stubs/unixstub.c	749;"	d
_XOPEN_XCU_VERSION	stubs/unixstub.c	753;"	d
_XOPEN_XPG2	stubs/unixstub.c	757;"	d
_XOPEN_XPG3	stubs/unixstub.c	760;"	d
_XOPEN_XPG4	stubs/unixstub.c	763;"	d
_XRenderInfo	stubs/xftstub.c	/^typedef struct _XRenderInfo {$/;"	s
_XRenderPictureAttributes	stubs/xftstub.c	/^typedef struct _XRenderPictureAttributes {$/;"	s
_XftColor	stubs/xftstub.c	/^typedef struct _XftColor {$/;"	s
_XftFont	stubs/xftstub.c	/^typedef struct _XftFont {$/;"	s
_XftFontSet	stubs/xftstub.c	/^typedef struct _XftFontSet {$/;"	s
_XftMatrix	stubs/xftstub.c	/^typedef struct _XftMatrix {$/;"	s
_XftObjectSet	stubs/xftstub.c	/^typedef struct _XftObjectSet {$/;"	s
_XftPattern	stubs/xftstub.c	/^typedef struct _XftPattern {$/;"	s
_XftPatternElt	stubs/xftstub.c	/^typedef struct _XftPatternElt {$/;"	s
_XftResult	stubs/xftstub.c	/^typedef enum _XftResult {$/;"	u
_XftType	stubs/xftstub.c	/^typedef enum _XftType {$/;"	u
_XftValue	stubs/xftstub.c	/^typedef struct _XftValue {$/;"	s
_XftValueList	stubs/xftstub.c	/^typedef struct _XftValueList {$/;"	s
__BEGIN_DECLS	stubs/unixstub.c	3385;"	d
__BIT_TYPES_DEFINED__	stubs/unixstub.c	6381;"	d
__CONCAT	stubs/unixstub.c	3388;"	d
__CONST_SOCKADDR_ARG	stubs/unixstub.c	5225;"	d
__CONST_SOCKADDR_ARG	stubs/unixstub.c	/^	      } __CONST_SOCKADDR_ARG ;$/;"	t
__END_DECLS	stubs/unixstub.c	3391;"	d
__END_DECLS	stubs/unixstub.c	3394;"	d
__FDELT	stubs/unixstub.c	5111;"	d
__FDMASK	stubs/unixstub.c	5114;"	d
__FDS_BITS	stubs/unixstub.c	5117;"	d
__FDS_BITS	stubs/unixstub.c	5120;"	d
__NFDBITS	stubs/unixstub.c	5124;"	d
__P	stubs/unixstub.c	3397;"	d
__PMT	stubs/unixstub.c	3400;"	d
__SOCKADDR_ALLTYPES	stubs/unixstub.c	5228;"	d
__SOCKADDR_ALLTYPES	stubs/unixstub.c	5245;"	union:__CONST_SOCKADDR_ARG
__SOCKADDR_ARG	stubs/unixstub.c	5231;"	d
__SOCKADDR_ONETYPE	stubs/unixstub.c	5234;"	d
__SOCKADDR_ONETYPE	stubs/unixstub.c	5237;"	d
__STRING	stubs/unixstub.c	3403;"	d
__S_ISTYPE	stubs/unixstub.c	5415;"	d
__WAIT_INT	stubs/unixstub.c	7171;"	d
__WAIT_INT	stubs/unixstub.c	7176;"	d
__WAIT_INT	stubs/unixstub.c	7179;"	d
__WAIT_STATUS	stubs/unixstub.c	7182;"	d
__WAIT_STATUS	stubs/unixstub.c	7185;"	d
__WAIT_STATUS	stubs/unixstub.c	/^  } __WAIT_STATUS ;$/;"	t
__WAIT_STATUS	stubs/unixstub.c	/^  } __WAIT_STATUS ;$/;"	t
__WAIT_STATUS_DEFN	stubs/unixstub.c	7188;"	d
__WAIT_STATUS_DEFN	stubs/unixstub.c	7197;"	d
__WAIT_STATUS_DEFN	stubs/unixstub.c	7200;"	d
__ba_lock	stubs/pthread.c	93;"	struct:pthread_barrier_t
__ba_present	stubs/pthread.c	93;"	struct:pthread_barrier_t
__ba_required	stubs/pthread.c	93;"	struct:pthread_barrier_t
__ba_waiting	stubs/pthread.c	93;"	struct:pthread_barrier_t
__bb	stubs/unixstub.c	/^struct __bb$/;"	s
__blkcnt_t_defined	stubs/unixstub.c	5418;"	d
__blkcnt_t_defined	stubs/unixstub.c	6387;"	d
__blkcnt_t_defined	stubs/unixstub.c	6390;"	d
__blksize_t_defined	stubs/unixstub.c	5421;"	d
__blksize_t_defined	stubs/unixstub.c	6393;"	d
__bounded	stubs/unixstub.c	3406;"	d
__c_lock	stubs/pthread.c	29;"	struct:pthread_cond_t
__c_waiting	stubs/pthread.c	29;"	struct:pthread_cond_t
__const	stubs/unixstub.c	3409;"	d
__daddr_t_defined	stubs/unixstub.c	6396;"	d
__detachstate	stubs/pthread.c	21;"	struct:pthread_attr_t
__dev_t_defined	stubs/unixstub.c	5424;"	d
__dev_t_defined	stubs/unixstub.c	6399;"	d
__dummy	stubs/pthread.c	36;"	struct:pthread_condattr_t
__extension__	stubs/unixstub.c	3412;"	d
__fd_mask	stubs/unixstub.c	/^typedef long __fd_mask;$/;"	t
__flexarr	stubs/unixstub.c	3416;"	d
__flexarr	stubs/unixstub.c	3419;"	d
__flexarr	stubs/unixstub.c	3422;"	d
__flexarr	stubs/unixstub.c	3426;"	d
__fpregs_mem	stubs/unixstub.c	6771
__fpregs_mem	stubs/unixstub.c	6862;"	struct:ucontext_t
__fpregs_mem	stubs/unixstub.c	6874;"	struct:ucontext_t
__fpregs_mem	stubs/unixstub.c	6886;"	struct:ucontext_t
__fpregs_mem	stubs/unixstub.c	6898;"	struct:ucontext_t
__fpregs_mem	stubs/unixstub.c	6910;"	struct:ucontext_t
__fpregs_mem	stubs/unixstub.c	6922;"	struct:ucontext_t
__fpregs_mem	stubs/unixstub.c	6934;"	struct:ucontext_t
__fsblkcnt_t_defined	stubs/unixstub.c	5537;"	d
__fsblkcnt_t_defined	stubs/unixstub.c	5540;"	d
__fsblkcnt_t_defined	stubs/unixstub.c	6402;"	d
__fsblkcnt_t_defined	stubs/unixstub.c	6405;"	d
__fsfilcnt_t_defined	stubs/unixstub.c	5543;"	d
__fsfilcnt_t_defined	stubs/unixstub.c	5546;"	d
__fsfilcnt_t_defined	stubs/unixstub.c	6408;"	d
__fsfilcnt_t_defined	stubs/unixstub.c	6411;"	d
__fxstat	stubs/unixstub.c	5427;"	d
__getpagesize	stubs/unixstub.c	/^int __getpagesize (void)$/;"	f
__gid_t_defined	stubs/unixstub.c	3903;"	d
__gid_t_defined	stubs/unixstub.c	5430;"	d
__gid_t_defined	stubs/unixstub.c	6414;"	d
__guardsize	stubs/pthread.c	21;"	struct:pthread_attr_t
__id_t_defined	stubs/unixstub.c	5056;"	d
__id_t_defined	stubs/unixstub.c	6417;"	d
__inheritsched	stubs/pthread.c	21;"	struct:pthread_attr_t
__inline	stubs/unixstub.c	3429;"	d
__ino64_t_defined	stubs/unixstub.c	6420;"	d
__ino_t_defined	stubs/unixstub.c	5433;"	d
__ino_t_defined	stubs/unixstub.c	6423;"	d
__int8_t_defined	stubs/unixstub.c	6426;"	d
__int8_t_defined	stubs/unixstub.c	6429;"	d
__intN_t	stubs/unixstub.c	6433;"	d
__intN_t	stubs/unixstub.c	/^__intN_t (8, __QI__)$/;"	f
__intN_t	stubs/unixstub.c	/^__intN_t (16, __HI__)$/;"	f
__intN_t	stubs/unixstub.c	/^__intN_t (32, __SI__)$/;"	f
__intN_t	stubs/unixstub.c	/^__intN_t (64, __DI__)$/;"	f
__intN_t	stubs/unixstub.c	6502;"	d
__iptr	stubs/unixstub.c	7196;"	union:__WAIT_STATUS
__iptr	stubs/unixstub.c	7208;"	union:__WAIT_STATUS
__itimer_which_t	stubs/unixstub.c	/^typedef int __itimer_which_t;$/;"	t
__key_t_defined	stubs/unixstub.c	3906;"	d
__key_t_defined	stubs/unixstub.c	6459;"	d
__lockkind	stubs/pthread.c	82;"	struct:pthread_rwlockattr_t
__long_double_t	stubs/unixstub.c	3432;"	d
__lxstat	stubs/unixstub.c	5436;"	d
__m_count	stubs/pthread.c	50;"	struct:pthread_mutex_t
__m_kind	stubs/pthread.c	50;"	struct:pthread_mutex_t
__m_lock	stubs/pthread.c	50;"	struct:pthread_mutex_t
__m_owner	stubs/pthread.c	50;"	struct:pthread_mutex_t
__m_reserved	stubs/pthread.c	50;"	struct:pthread_mutex_t
__mode_t_defined	stubs/unixstub.c	3909;"	d
__mode_t_defined	stubs/unixstub.c	3936;"	d
__mode_t_defined	stubs/unixstub.c	5439;"	d
__mode_t_defined	stubs/unixstub.c	6462;"	d
__mutexkind	stubs/pthread.c	57;"	struct:pthread_mutexattr_t
__need___va_list	stubs/unixstub.c	5773;"	d
__need_clock_t	stubs/unixstub.c	6094;"	d
__need_clock_t	stubs/unixstub.c	6465;"	d
__need_clockid_t	stubs/unixstub.c	6468;"	d
__need_siginfo_t	stubs/unixstub.c	7211;"	d
__need_size_t	stubs/unixstub.c	3939;"	d
__need_size_t	stubs/unixstub.c	5161;"	d
__need_size_t	stubs/unixstub.c	5190;"	d
__need_size_t	stubs/unixstub.c	5248;"	d
__need_size_t	stubs/unixstub.c	5593;"	d
__need_size_t	stubs/unixstub.c	6471;"	d
__need_time_t	stubs/unixstub.c	1657;"	d
__need_time_t	stubs/unixstub.c	5194;"	d
__need_time_t	stubs/unixstub.c	5442;"	d
__need_time_t	stubs/unixstub.c	5890;"	d
__need_time_t	stubs/unixstub.c	5944;"	d
__need_time_t	stubs/unixstub.c	6474;"	d
__need_timer_t	stubs/unixstub.c	6477;"	d
__need_timespec	stubs/unixstub.c	5138;"	d
__need_timeval	stubs/unixstub.c	5141;"	d
__need_timeval	stubs/unixstub.c	5947;"	d
__nlink_t_defined	stubs/unixstub.c	5445;"	d
__nlink_t_defined	stubs/unixstub.c	6480;"	d
__off64_t_defined	stubs/unixstub.c	6483;"	d
__off_t_defined	stubs/unixstub.c	3942;"	d
__off_t_defined	stubs/unixstub.c	5448;"	d
__off_t_defined	stubs/unixstub.c	6486;"	d
__pid_t_defined	stubs/unixstub.c	5197;"	d
__pid_t_defined	stubs/unixstub.c	6489;"	d
__priority_which_t	stubs/unixstub.c	/^typedef enum __priority_which __priority_which_t;$/;"	v
__priority_which_t	stubs/unixstub.c	/^typedef int __priority_which_t;$/;"	t
__pthread_attr_s	stubs/pthread.c	/^typedef struct __pthread_attr_s$/;"	s
__ptr_t	stubs/unixstub.c	3436;"	d
__ptrvalue	stubs/unixstub.c	3439;"	d
__restrict	stubs/unixstub.c	3442;"	d
__restrict_arr	stubs/unixstub.c	3445;"	d
__restrict_arr	stubs/unixstub.c	3448;"	d
__restrict_arr	stubs/unixstub.c	3451;"	d
__restrict_arr	stubs/unixstub.c	3455;"	d
__rlimit_resource_t	stubs/unixstub.c	/^typedef enum __rlimit_resource __rlimit_resource_t;$/;"	v
__rlimit_resource_t	stubs/unixstub.c	/^typedef int __rlimit_resource_t;$/;"	t
__rusage_who_t	stubs/unixstub.c	/^typedef enum __rusage_who __rusage_who_t;$/;"	v
__rusage_who_t	stubs/unixstub.c	/^typedef int __rusage_who_t;$/;"	t
__rw_kind	stubs/pthread.c	74;"	struct:pthread_rwlock_t
__rw_lock	stubs/pthread.c	74;"	struct:pthread_rwlock_t
__rw_pshared	stubs/pthread.c	74;"	struct:pthread_rwlock_t
__rw_read_waiting	stubs/pthread.c	74;"	struct:pthread_rwlock_t
__rw_readers	stubs/pthread.c	74;"	struct:pthread_rwlock_t
__rw_write_waiting	stubs/pthread.c	74;"	struct:pthread_rwlock_t
__rw_writer	stubs/pthread.c	74;"	struct:pthread_rwlock_t
__schedparam	stubs/pthread.c	21;"	struct:pthread_attr_t
__schedpolicy	stubs/pthread.c	21;"	struct:pthread_attr_t
__scope	stubs/pthread.c	21;"	struct:pthread_attr_t
__signed	stubs/unixstub.c	3458;"	d
__sigset_t_defined	stubs/unixstub.c	5144;"	d
__ssize_t_defined	stubs/unixstub.c	6492;"	d
__stackaddr_set	stubs/pthread.c	21;"	struct:pthread_attr_t
__stacksize	stubs/pthread.c	21;"	struct:pthread_attr_t
__suseconds_t_defined	stubs/unixstub.c	5950;"	d
__suseconds_t_defined	stubs/unixstub.c	6495;"	d
__timezone_ptr_t	stubs/unixstub.c	/^typedef struct timezone \*__restrict __timezone_ptr_t;$/;"	t
__timezone_ptr_t	stubs/unixstub.c	/^typedef void \*__restrict __timezone_ptr_t;$/;"	t
__u_char_defined	stubs/unixstub.c	6498;"	d
__u_intN_t	stubs/unixstub.c	6435;"	d
__u_intN_t	stubs/unixstub.c	6504;"	d
__u_intN_t	stubs/unixstub.c	/^__u_intN_t (8, __QI__)$/;"	f
__uid_t_defined	stubs/unixstub.c	3912;"	d
__uid_t_defined	stubs/unixstub.c	5451;"	d
__uid_t_defined	stubs/unixstub.c	6520;"	d
__unbounded	stubs/unixstub.c	3461;"	d
__uptr	stubs/unixstub.c	7196;"	union:__WAIT_STATUS
__uptr	stubs/unixstub.c	7208;"	union:__WAIT_STATUS
__useconds_t_defined	stubs/unixstub.c	6523;"	d
__volatile	stubs/unixstub.c	3464;"	d
__xstat	stubs/unixstub.c	5454;"	d
_code	stubs/unixstub.c	/^typedef struct _code {$/;"	s
_code	stubs/unixstub.c	/^typedef struct _code {$/;"	s
_code	stubs/unixstub.c	/^typedef struct _code {$/;"	s
_code	stubs/unixstub.c	/^typedef struct _code {$/;"	s
_code	stubs/unixstub.c	/^typedef struct _code {$/;"	s
_exit	stubs/unixstub.c	/^void _exit(int status)$/;"	f
_gtk_check_button_get_props	stubs/gtkstub.c	/^void _gtk_check_button_get_props(GtkCheckButton \*check_button, gint \*indicator_size, gint \*indicator_spacing)$/;"	f
_gtk_paned_get_gutter_size	stubs/gtkstub.c	/^gint _gtk_paned_get_gutter_size(GtkPaned \*paned)$/;"	f
_gtk_paned_get_handle_rect	stubs/gtkstub.c	/^void _gtk_paned_get_handle_rect(GtkPaned \*paned, GdkRectangle \*rectangle)$/;"	f
_gtk_paned_is_handle_full_size	stubs/gtkstub.c	/^gboolean _gtk_paned_is_handle_full_size(GtkPaned \*paned)$/;"	f
_gtk_range_get_props	stubs/gtkstub.c	/^void _gtk_range_get_props(GtkRange \*range, gint \*slider_width, gint \*trough_border, gint \*stepper_size, gint \*stepper_spacing)$/;"	f
_pthread_cleanup_buffer	stubs/pthread.c	/^struct _pthread_cleanup_buffer$/;"	s
_pthread_fastlock	stubs/pthread.c	/^struct _pthread_fastlock$/;"	s
_pthread_rwlock_t	stubs/pthread.c	/^typedef struct _pthread_rwlock_t$/;"	s
_st	stubs/unixstub.c	/^  struct _libc_fpreg _st\[8\];$/;"	t
abbrev	stubs/gtkstub.c	9672;"	struct:GtkRulerMetric
abort	stubs/ansistub.c	/^void abort(void)$/;"	f
above	stubs/xlibstub.c	776;"	struct:XConfigureEvent
above	stubs/xlibstub.c	813;"	struct:XConfigureRequestEvent
abs	stubs/ansistub.c	/^int abs(int num)$/;"	f
accel_flags	stubs/gtkstub.c	49;"	struct:GtkAccelEntry
accel_group	stubs/gtkstub.c	49;"	struct:GtkAccelEntry
accel_group	stubs/gtkstub.c	5746;"	struct:GtkItemFactory
accel_group	stubs/gtkstub.c	6995;"	struct:GtkMenuFactory
accel_group	stubs/gtkstub.c	7093;"	struct:GtkMenu
accel_padding	stubs/gtkstub.c	206;"	struct:GtkAccelLabel
accel_seperator	stubs/gtkstub.c	221;"	struct:GtkAccelLabelClass
accel_string	stubs/gtkstub.c	206;"	struct:GtkAccelLabel
accel_string_width	stubs/gtkstub.c	206;"	struct:GtkAccelLabel
accel_widget	stubs/gtkstub.c	206;"	struct:GtkAccelLabel
accelerator	stubs/gtkstub.c	5785;"	struct:GtkItemFactoryEntry
accelerator	stubs/gtkstub.c	6976;"	struct:GtkMenuEntry
accelerator_key	stubs/gtkstub.c	49;"	struct:GtkAccelEntry
accelerator_key	stubs/gtkstub.c	5799;"	struct:GtkItemFactoryItem
accelerator_mods	stubs/gtkstub.c	49;"	struct:GtkAccelEntry
accelerator_mods	stubs/gtkstub.c	5799;"	struct:GtkItemFactoryItem
accelerator_signal	stubs/gtkstub.c	7278;"	struct:GtkMenuItem
accelerator_width	stubs/gtkstub.c	7278;"	struct:GtkMenuItem
access	stubs/unixstub.c	/^int access(const char \*name, int type)$/;"	f
acct	stubs/unixstub.c	/^int acct(const char \*name)$/;"	f
acct	stubs/unixstub.c	/^struct acct$/;"	s
acos	stubs/ansistub.c	/^double acos(double cosvalue)$/;"	f
action	stubs/gdkstub.c	6327;"	struct:GdkDragContext
action_area	stubs/gtkstub.c	3577;"	struct:GtkDialog
action_area	stubs/gtkstub.c	4597;"	struct:GtkFileSelection
action_area	stubs/gtkstub.c	4876;"	struct:GtkFontSelectionDialog
actions	stubs/gdkstub.c	6327;"	struct:GdkDragContext
activate_id	stubs/gtkstub.c	2500;"	struct:GtkCombo
activate_signal	stubs/gtkstub.c	13791;"	struct:GtkWidgetClass
activate_time	stubs/gtkstub.c	7391;"	struct:GtkMenuShell
active	stubs/gtkstub.c	1330;"	struct:GtkCheckMenuItem
active	stubs/gtkstub.c	7391;"	struct:GtkMenuShell
active	stubs/gtkstub.c	11540;"	struct:GtkToggleButton
active_menu_item	stubs/gtkstub.c	7391;"	struct:GtkMenuShell
active_tips_data	stubs/gtkstub.c	11828;"	struct:GtkTooltips
activity_blocks	stubs/gtkstub.c	8942;"	struct:GtkProgressBar
activity_dir	stubs/gtkstub.c	8942;"	struct:GtkProgressBar
activity_mode	stubs/gtkstub.c	9029;"	struct:GtkProgress
activity_pos	stubs/gtkstub.c	8942;"	struct:GtkProgressBar
activity_step	stubs/gtkstub.c	8942;"	struct:GtkProgressBar
actual_font_name	stubs/gtkstub.c	4847;"	struct:GtkFontSelection
add_mode	stubs/gtkstub.c	6281;"	struct:GtkList
address	stubs/xlibstub.c	415;"	struct:XHostAddress
adjustment	stubs/gtkstub.c	9029;"	struct:GtkProgress
adjustment	stubs/gtkstub.c	9291;"	struct:GtkRange
adjustment	stubs/gtkstub.c	10436;"	struct:GtkSpinButton
alarm	stubs/unixstub.c	/^unsigned int alarm(unsigned int seconds)$/;"	f
all_chars_exist	stubs/xlibstub.c	1024;"	struct:XFontStruct
all_event_masks	stubs/xlibstub.c	408;"	struct:XWindowAttributes
alloc_close_colors	stubs/xpmstub.c	118;"	struct:XpmAttributes
alloc_color	stubs/xpmstub.c	118;"	struct:XpmAttributes
alloc_pixels	stubs/xpmstub.c	118;"	struct:XpmAttributes
allocation	stubs/gtkstub.c	7582;"	struct:GtkNotebookPage
allocation	stubs/gtkstub.c	11045;"	struct:GtkTableRowCol
allocation	stubs/gtkstub.c	13688;"	struct:GtkWidget
allow_grow	stubs/gtkstub.c	14411;"	struct:GtkWindow
allow_shrink	stubs/gtkstub.c	14411;"	struct:GtkWindow
alpha	stubs/xftstub.c	25;"	struct:XRenderDirectFormat
alpha	stubs/xftstub.c	105;"	struct:XRenderColor
alphaMask	stubs/xftstub.c	25;"	struct:XRenderDirectFormat
alpha_map	stubs/xftstub.c	97;"	struct:XRenderPictureAttributes
alpha_x_origin	stubs/xftstub.c	97;"	struct:XRenderPictureAttributes
alpha_y_origin	stubs/xftstub.c	97;"	struct:XRenderPictureAttributes
always_show_toggle	stubs/gtkstub.c	1330;"	struct:GtkCheckMenuItem
anchor	stubs/gtkstub.c	1619;"	struct:GtkCList
anchor	stubs/gtkstub.c	6281;"	struct:GtkList
anchor	stubs/gtkstub.c	8366;"	struct:GtkPackerChild
anchor_state	stubs/gtkstub.c	1619;"	struct:GtkCList
anchor_state	stubs/gtkstub.c	6281;"	struct:GtkList
angle1	stubs/xlibstub.c	482;"	struct:XArc
angle2	stubs/xlibstub.c	482;"	struct:XArc
any	stubs/gdkstub.c	6539;"	union:GdkEvent
apply_button	stubs/gtkstub.c	4876;"	struct:GtkFontSelectionDialog
arc_mode	stubs/xlibstub.c	312;"	struct:XGCValues
area	stubs/gdkstub.c	6351;"	struct:GdkEventExpose
area	stubs/gtkstub.c	1679;"	struct:GtkCListColumn
arg_flags	stubs/gtkstub.c	397;"	struct:GtkArgInfo
arg_id	stubs/gtkstub.c	397;"	struct:GtkArgInfo
arg_type	stubs/gtkstub.c	798;"	struct:GtkBindingArg
args	stubs/gtkstub.c	786;"	struct:GtkBindingSignal
arrow_type	stubs/gtkstub.c	503;"	struct:GtkArrow
ascent	stubs/gdkstub.c	6240;"	struct:GdkFont
ascent	stubs/xftstub.c	436;"	struct:XftFont
ascent	stubs/xlibstub.c	998;"	struct:XCharStruct
ascent	stubs/xlibstub.c	1024;"	struct:XFontStruct
asctime	stubs/ansistub.c	/^char \*asctime(const struct tm \*currtime)$/;"	f
asin	stubs/ansistub.c	/^double asin(double sinvalue)$/;"	f
assert	stubs/ansistub.c	/^void assert(int expression)$/;"	f
atan	stubs/ansistub.c	/^double atan(double tanvalue)$/;"	f
atan2	stubs/ansistub.c	/^double atan2(double y, double x)$/;"	f
atexit	stubs/ansistub.c	/^int atexit(void(\*func)(void))$/;"	f
atof	stubs/ansistub.c	/^double atof(const char \*string)$/;"	f
atoi	stubs/ansistub.c	/^int atoi(const char \*string)$/;"	f
atol	stubs/ansistub.c	/^long int atol(const char \*string)$/;"	f
atom	stubs/gdkstub.c	6468;"	struct:GdkEventProperty
atom	stubs/xlibstub.c	847;"	struct:XPropertyEvent
attach_allocation	stubs/gtkstub.c	5189;"	struct:GtkHandleBox
attach_count	stubs/gtkstub.c	10674;"	struct:GtkStyle
attach_objects	stubs/gtkstub.c	37;"	struct:GtkAccelGroup
attributes	stubs/xlibstub.c	998;"	struct:XCharStruct
auto_repeat_mode	stubs/xlibstub.c	494;"	struct:XKeyboardControl
auto_repeats	stubs/xlibstub.c	504;"	struct:XKeyboardState
auto_resize	stubs/gtkstub.c	1679;"	struct:GtkCListColumn
auto_resize	stubs/gtkstub.c	4876;"	struct:GtkFontSelectionDialog
auto_shrink	stubs/gtkstub.c	14411;"	struct:GtkWindow
axes	stubs/gdkstub.c	6302;"	struct:GdkDeviceInfo
axis_list	stubs/gtkstub.c	5627;"	struct:GtkInputDialog
axis_listbox	stubs/gtkstub.c	5627;"	struct:GtkInputDialog
background	stubs/gdkstub.c	6201;"	struct:GdkGCValues
background	stubs/gtkstub.c	1699;"	struct:GtkCListRow
background	stubs/gtkstub.c	11828;"	struct:GtkTooltips
background	stubs/xlibstub.c	312;"	struct:XGCValues
background_pixel	stubs/xlibstub.c	383;"	struct:XSetWindowAttributes
background_pixmap	stubs/xlibstub.c	383;"	struct:XSetWindowAttributes
backing_pixel	stubs/xlibstub.c	383;"	struct:XSetWindowAttributes
backing_pixel	stubs/xlibstub.c	408;"	struct:XWindowAttributes
backing_pixmap	stubs/gtkstub.c	3981;"	struct:GtkEntry
backing_planes	stubs/xlibstub.c	383;"	struct:XSetWindowAttributes
backing_planes	stubs/xlibstub.c	408;"	struct:XWindowAttributes
backing_store	stubs/gtkstub.c	9649;"	struct:GtkRuler
backing_store	stubs/xlibstub.c	356;"	struct:Screen
backing_store	stubs/xlibstub.c	383;"	struct:XSetWindowAttributes
backing_store	stubs/xlibstub.c	408;"	struct:XWindowAttributes
bar_style	stubs/gtkstub.c	8942;"	struct:GtkProgressBar
base	stubs/gtkstub.c	9448;"	struct:GtkRcStyle
base	stubs/gtkstub.c	10674;"	struct:GtkStyle
base_class_init_func	stubs/gtkstub.c	12888;"	struct:GtkTypeInfo
base_gc	stubs/gtkstub.c	10674;"	struct:GtkStyle
base_height	stubs/gdkstub.c	6164;"	struct:GdkGeometry
base_pixel	stubs/xlibstub.c	1362;"	struct:XStandardColormap
base_width	stubs/gdkstub.c	6164;"	struct:GdkGeometry
bell_duration	stubs/xlibstub.c	494;"	struct:XKeyboardControl
bell_duration	stubs/xlibstub.c	504;"	struct:XKeyboardState
bell_percent	stubs/xlibstub.c	494;"	struct:XKeyboardControl
bell_percent	stubs/xlibstub.c	504;"	struct:XKeyboardState
bell_pitch	stubs/xlibstub.c	494;"	struct:XKeyboardControl
bell_pitch	stubs/xlibstub.c	504;"	struct:XKeyboardState
bg	stubs/gtkstub.c	9448;"	struct:GtkRcStyle
bg	stubs/gtkstub.c	10674;"	struct:GtkStyle
bg_gc	stubs/gtkstub.c	1619;"	struct:GtkCList
bg_gc	stubs/gtkstub.c	10674;"	struct:GtkStyle
bg_pixmap	stubs/gtkstub.c	10674;"	struct:GtkStyle
bg_pixmap_name	stubs/gtkstub.c	9448;"	struct:GtkRcStyle
bg_set	stubs/gtkstub.c	1699;"	struct:GtkCListRow
bin	stubs/gtkstub.c	353;"	struct:GtkAlignment
bin	stubs/gtkstub.c	1028;"	struct:GtkButton
bin	stubs/gtkstub.c	4402;"	struct:GtkEventBox
bin	stubs/gtkstub.c	5055;"	struct:GtkFrame
bin	stubs/gtkstub.c	5189;"	struct:GtkHandleBox
bin	stubs/gtkstub.c	5673;"	struct:GtkInvisible
bin	stubs/gtkstub.c	5997;"	struct:GtkItem
bin	stubs/gtkstub.c	13175;"	struct:GtkViewport
bin	stubs/gtkstub.c	14411;"	struct:GtkWindow
bin_window	stubs/gtkstub.c	5189;"	struct:GtkHandleBox
bin_window	stubs/gtkstub.c	6161;"	struct:GtkLayout
bin_window	stubs/gtkstub.c	13175;"	struct:GtkViewport
binding_set	stubs/gtkstub.c	776;"	struct:GtkBindingEntry
bit_gravity	stubs/xlibstub.c	383;"	struct:XSetWindowAttributes
bit_gravity	stubs/xlibstub.c	408;"	struct:XWindowAttributes
bitmap_bit_order	stubs/xlibstub.c	442;"	struct:XImage
bitmap_format	stubs/xpmstub.c	118;"	struct:XpmAttributes
bitmap_pad	stubs/xlibstub.c	442;"	struct:XImage
bitmap_unit	stubs/xlibstub.c	442;"	struct:XImage
bits_per_pixel	stubs/xlibstub.c	283;"	struct:XPixmapFormatValues
bits_per_pixel	stubs/xlibstub.c	364;"	struct:ScreenFormat
bits_per_pixel	stubs/xlibstub.c	442;"	struct:XImage
bits_per_rgb	stubs/gdkstub.c	6125;"	struct:GdkVisual
bits_per_rgb	stubs/xlibstub.c	328;"	struct:Visual
bits_per_rgb	stubs/xlibstub.c	1348;"	struct:XVisualInfo
black	stubs/gtkstub.c	10674;"	struct:GtkStyle
black_gc	stubs/gtkstub.c	10674;"	struct:GtkStyle
black_pixel	stubs/xlibstub.c	356;"	struct:Screen
blkcnt_t	stubs/unixstub.c	/^typedef __blkcnt_t blkcnt_t;$/;"	t
blkcnt_t	stubs/unixstub.c	/^typedef __blkcnt64_t blkcnt_t;$/;"	t
blksize_t	stubs/unixstub.c	/^typedef __blksize_t blksize_t;$/;"	t
blocks	stubs/gtkstub.c	8942;"	struct:GtkProgressBar
blue	stubs/gdkstub.c	6096;"	struct:GdkColor
blue	stubs/xftstub.c	25;"	struct:XRenderDirectFormat
blue	stubs/xftstub.c	105;"	struct:XRenderColor
blue	stubs/xlibstub.c	459;"	struct:XColor
blueMask	stubs/xftstub.c	25;"	struct:XRenderDirectFormat
blue_closeness	stubs/xpmstub.c	118;"	struct:XpmAttributes
blue_mask	stubs/gdkstub.c	6125;"	struct:GdkVisual
blue_mask	stubs/xlibstub.c	328;"	struct:Visual
blue_mask	stubs/xlibstub.c	442;"	struct:XImage
blue_mask	stubs/xlibstub.c	1348;"	struct:XVisualInfo
blue_max	stubs/xlibstub.c	1362;"	struct:XStandardColormap
blue_mult	stubs/xlibstub.c	1362;"	struct:XStandardColormap
blue_prec	stubs/gdkstub.c	6125;"	struct:GdkVisual
blue_shift	stubs/gdkstub.c	6125;"	struct:GdkVisual
border_pixel	stubs/xlibstub.c	383;"	struct:XSetWindowAttributes
border_pixmap	stubs/xlibstub.c	383;"	struct:XSetWindowAttributes
border_width	stubs/gtkstub.c	2639;"	struct:GtkContainer
border_width	stubs/gtkstub.c	8366;"	struct:GtkPackerChild
border_width	stubs/xlibstub.c	408;"	struct:XWindowAttributes
border_width	stubs/xlibstub.c	451;"	struct:XWindowChanges
border_width	stubs/xlibstub.c	706;"	struct:XCreateWindowEvent
border_width	stubs/xlibstub.c	776;"	struct:XConfigureEvent
border_width	stubs/xlibstub.c	813;"	struct:XConfigureRequestEvent
bottom_attach	stubs/gtkstub.c	11031;"	struct:GtkTableChild
box	stubs/gtkstub.c	625;"	struct:GtkButtonBox
box	stubs/gtkstub.c	5311;"	struct:GtkHBox
box	stubs/gtkstub.c	13126;"	struct:GtkVBox
bpl	stubs/gdkstub.c	6178;"	struct:GdkImage
bpp	stubs/gdkstub.c	6178;"	struct:GdkImage
bpp	stubs/gtkstub.c	8711;"	struct:GtkPreview
brk	stubs/unixstub.c	/^int brk(void \*addr)$/;"	f
bsearch	stubs/ansistub.c	/^void \*bsearch(const void \*itemx, const void \*array, size_t nitems, size_t itemsize, int (\*compare) (const void \*itemi, const void \*itemj))$/;"	f
btodb	stubs/unixstub.c	4871;"	d
buffer	stubs/glibstub.c	2298;"	struct:GScanner
buffer	stubs/gtkstub.c	8711;"	struct:GtkPreview
buffer_height	stubs/gtkstub.c	8711;"	struct:GtkPreview
buffer_width	stubs/gtkstub.c	8711;"	struct:GtkPreview
build_insensitive	stubs/gtkstub.c	8595;"	struct:GtkPixmap
button	stubs/gdkstub.c	6406;"	struct:GdkEventButton
button	stubs/gdkstub.c	6539;"	union:GdkEvent
button	stubs/gtkstub.c	1679;"	struct:GtkCListColumn
button	stubs/gtkstub.c	2500;"	struct:GtkCombo
button	stubs/gtkstub.c	3981;"	struct:GtkEntry
button	stubs/gtkstub.c	5118;"	struct:GtkGammaCurve
button	stubs/gtkstub.c	7391;"	struct:GtkMenuShell
button	stubs/gtkstub.c	7555;"	struct:GtkNotebook
button	stubs/gtkstub.c	8248;"	struct:GtkOptionMenu
button	stubs/gtkstub.c	9291;"	struct:GtkRange
button	stubs/gtkstub.c	10436;"	struct:GtkSpinButton
button	stubs/gtkstub.c	11540;"	struct:GtkToggleButton
button	stubs/xlibstub.c	562;"	struct:XButtonEvent
button_actions	stubs/gtkstub.c	1619;"	struct:GtkCList
button_area	stubs/gtkstub.c	4597;"	struct:GtkFileSelection
button_box	stubs/gtkstub.c	5244;"	struct:GtkHButtonBox
button_box	stubs/gtkstub.c	13059;"	struct:GtkVButtonBox
button_down	stubs/gtkstub.c	1028;"	struct:GtkButton
button_maxh	stubs/gtkstub.c	11651;"	struct:GtkToolbar
button_maxw	stubs/gtkstub.c	11651;"	struct:GtkToolbar
button_passive	stubs/gtkstub.c	1679;"	struct:GtkCListColumn
byte1	stubs/xlibstub.c	1038;"	struct:XChar2b
byte2	stubs/xlibstub.c	1038;"	struct:XChar2b
byte_order	stubs/gdkstub.c	6125;"	struct:GdkVisual
byte_order	stubs/gdkstub.c	6178;"	struct:GdkImage
byte_order	stubs/xlibstub.c	442;"	struct:XImage
bytes_per_line	stubs/xlibstub.c	442;"	struct:XImage
c_color	stubs/xpmstub.c	32;"	struct:XpmColor
c_name	stubs/unixstub.c	5604;"	struct:CODE
c_name	stubs/unixstub.c	5612;"	struct:CODE
c_name	stubs/unixstub.c	5779;"	struct:CODE
c_name	stubs/unixstub.c	5785;"	struct:CODE
c_name	stubs/unixstub.c	5791;"	struct:CODE
c_val	stubs/unixstub.c	5604;"	struct:CODE
c_val	stubs/unixstub.c	5612;"	struct:CODE
c_val	stubs/unixstub.c	5779;"	struct:CODE
c_val	stubs/unixstub.c	5785;"	struct:CODE
c_val	stubs/unixstub.c	5791;"	struct:CODE
cache	stubs/glibstub.c	2430;"	struct:GCompletion
callback	stubs/gtkstub.c	5785;"	struct:GtkItemFactoryEntry
callback	stubs/gtkstub.c	6976;"	struct:GtkMenuEntry
callback	stubs/xlibstub.c	1139;"	struct:XIMCallback
callback	stubs/xlibstub.c	1145;"	struct:XICCallback
callback_action	stubs/gtkstub.c	5785;"	struct:GtkItemFactoryEntry
callback_data	stubs/gtkstub.c	6976;"	struct:GtkMenuEntry
calloc	stubs/ansistub.c	/^void \*calloc(size_t num, size_t length)$/;"	f
cancel_button	stubs/gtkstub.c	2403;"	struct:GtkColorSelectionDialog
cancel_button	stubs/gtkstub.c	4597;"	struct:GtkFileSelection
cancel_button	stubs/gtkstub.c	4876;"	struct:GtkFontSelectionDialog
cap_style	stubs/gdkstub.c	6201;"	struct:GdkGCValues
cap_style	stubs/xlibstub.c	312;"	struct:XGCValues
card	stubs/unixstub.c	/^					   Teac DC-1 card (Wangtek type)\.  \*\/$/;"	f
card	stubs/unixstub.c	/^					   Teac DC-1 card (Wangtek type)\.  \*\/$/;"	f
card32	stubs/xlibstub.c	1004;"	struct:XFontProp
caret	stubs/xlibstub.c	1217;"	struct:XIMPreeditDrawCallbackStruct
case_sensitive	stubs/glibstub.c	2255;"	struct:GScannerConfig
case_sensitive	stubs/gtkstub.c	2500;"	struct:GtkCombo
ceil	stubs/ansistub.c	/^double ceil(double upwards)$/;"	f
cell	stubs/gtkstub.c	1522;"	struct:GtkCListDestInfo
cell	stubs/gtkstub.c	1699;"	struct:GtkCListRow
cell_mem_chunk	stubs/gtkstub.c	1619;"	struct:GtkCList
center_allocation	stubs/gtkstub.c	563;"	struct:GtkAspectFrame
char_2_token	stubs/glibstub.c	2255;"	struct:GScannerConfig
char_offset	stubs/gtkstub.c	3981;"	struct:GtkEntry
chars	stubs/xlibstub.c	1032;"	struct:XTextItem
chars	stubs/xlibstub.c	1046;"	struct:XTextItem16
chars	stubs/xlibstub.c	1071;"	struct:XmbTextItem
chars	stubs/xlibstub.c	1079;"	struct:XwcTextItem
chars_matched	stubs/xlibstub.c	1334;"	struct:XComposeStatus
charset_count	stubs/xlibstub.c	1085;"	struct:XOMCharSetList
charset_list	stubs/xlibstub.c	1085;"	struct:XOMCharSetList
chdir	stubs/unixstub.c	/^int chdir(const char \*path)$/;"	f
check_button	stubs/gtkstub.c	9138;"	struct:GtkRadioButton
check_menu_item	stubs/gtkstub.c	9208;"	struct:GtkRadioMenuItem
chg_first	stubs/xlibstub.c	1217;"	struct:XIMPreeditDrawCallbackStruct
chg_length	stubs/xlibstub.c	1217;"	struct:XIMPreeditDrawCallbackStruct
child	stubs/gtkstub.c	876;"	struct:GtkBin
child	stubs/gtkstub.c	7582;"	struct:GtkNotebookPage
child1	stubs/gtkstub.c	8493;"	struct:GtkPaned
child1_resize	stubs/gtkstub.c	8493;"	struct:GtkPaned
child1_shrink	stubs/gtkstub.c	8493;"	struct:GtkPaned
child1_size	stubs/gtkstub.c	8493;"	struct:GtkPaned
child2	stubs/gtkstub.c	8493;"	struct:GtkPaned
child2_resize	stubs/gtkstub.c	8493;"	struct:GtkPaned
child2_shrink	stubs/gtkstub.c	8493;"	struct:GtkPaned
child_detached	stubs/gtkstub.c	5189;"	struct:GtkHandleBox
child_has_focus	stubs/gtkstub.c	7555;"	struct:GtkNotebook
child_ipad_x	stubs/gtkstub.c	625;"	struct:GtkButtonBox
child_ipad_y	stubs/gtkstub.c	625;"	struct:GtkButtonBox
child_min_height	stubs/gtkstub.c	625;"	struct:GtkButtonBox
child_min_width	stubs/gtkstub.c	625;"	struct:GtkButtonBox
children	stubs/glibstub.c	997;"	struct:GNode
children	stubs/gtkstub.c	922;"	struct:GtkBox
children	stubs/gtkstub.c	3021;"	struct:GtkCTreeRow
children	stubs/gtkstub.c	4667;"	struct:GtkFixed
children	stubs/gtkstub.c	6161;"	struct:GtkLayout
children	stubs/gtkstub.c	6281;"	struct:GtkList
children	stubs/gtkstub.c	7391;"	struct:GtkMenuShell
children	stubs/gtkstub.c	7555;"	struct:GtkNotebook
children	stubs/gtkstub.c	8383;"	struct:GtkPacker
children	stubs/gtkstub.c	11005;"	struct:GtkTable
children	stubs/gtkstub.c	11651;"	struct:GtkToolbar
children	stubs/gtkstub.c	11935;"	struct:GtkTree
chown	stubs/unixstub.c	/^int chown(const char \*file, uid_t owner, gid_t group)$/;"	f
chroot	stubs/unixstub.c	/^int chroot(const char \*path)$/;"	f
class	stubs/xlibstub.c	328;"	struct:Visual
class	stubs/xlibstub.c	408;"	struct:XWindowAttributes
class	stubs/xlibstub.c	1348;"	struct:XVisualInfo
class_branch_pspecs	stubs/gtkstub.c	759;"	struct:GtkBindingSet
class_init_func	stubs/gtkstub.c	12888;"	struct:GtkTypeInfo
class_size	stubs/gtkstub.c	12888;"	struct:GtkTypeInfo
class_size	stubs/gtkstub.c	12898;"	struct:GtkTypeQuery
class_type	stubs/gtkstub.c	397;"	struct:GtkArgInfo
clearerr	stubs/ansistub.c	/^void clearerr(FILE \*fp)$/;"	f
click_cell	stubs/gtkstub.c	1619;"	struct:GtkCList
click_child	stubs/gtkstub.c	7555;"	struct:GtkNotebook
click_child	stubs/gtkstub.c	9291;"	struct:GtkRange
click_child	stubs/gtkstub.c	10436;"	struct:GtkSpinButton
client	stubs/gdkstub.c	6539;"	union:GdkEvent
client_data	stubs/xlibstub.c	1139;"	struct:XIMCallback
client_data	stubs/xlibstub.c	1145;"	struct:XICCallback
client_window	stubs/gdkstub.c	6573;"	struct:GdkICAttr
climb_rate	stubs/gtkstub.c	10436;"	struct:GtkSpinButton
clip_mask	stubs/gdkstub.c	6201;"	struct:GdkGCValues
clip_mask	stubs/xftstub.c	97;"	struct:XRenderPictureAttributes
clip_mask	stubs/xlibstub.c	312;"	struct:XGCValues
clip_x_origin	stubs/gdkstub.c	6201;"	struct:GdkGCValues
clip_x_origin	stubs/xftstub.c	97;"	struct:XRenderPictureAttributes
clip_x_origin	stubs/xlibstub.c	312;"	struct:XGCValues
clip_y_origin	stubs/gdkstub.c	6201;"	struct:GdkGCValues
clip_y_origin	stubs/xftstub.c	97;"	struct:XRenderPictureAttributes
clip_y_origin	stubs/xlibstub.c	312;"	struct:XGCValues
clipboard_text	stubs/gtkstub.c	3824;"	struct:GtkEditable
clist	stubs/gtkstub.c	2986;"	struct:GtkCTree
clist_window	stubs/gtkstub.c	1619;"	struct:GtkCList
clist_window_height	stubs/gtkstub.c	1619;"	struct:GtkCList
clist_window_width	stubs/gtkstub.c	1619;"	struct:GtkCList
clock	stubs/ansistub.c	/^clock_t clock(void)$/;"	f
clock_t	stubs/ansistub.c	/^typedef OPAQUE	clock_t;$/;"	t
close	stubs/unixstub.c	/^int close(int fd)$/;"	f
close_button	stubs/gtkstub.c	5627;"	struct:GtkInputDialog
closeness	stubs/xpmstub.c	118;"	struct:XpmAttributes
clrbit	stubs/unixstub.c	4506;"	d
clut	stubs/gdkstub.c	6281;"	struct:GdkColorContext
cmap	stubs/gdkstub.c	6281;"	struct:GdkColorContext
cmap	stubs/gtkstub.c	8723;"	struct:GtkPreviewInfo
cmap	stubs/xlibstub.c	356;"	struct:Screen
cmpl_state	stubs/gtkstub.c	4597;"	struct:GtkFileSelection
color	stubs/xftstub.c	445;"	struct:XftColor
colorTable	stubs/xpmstub.c	41;"	struct:XpmImage
colorTable	stubs/xpmstub.c	118;"	struct:XpmAttributes
color_closure	stubs/xpmstub.c	118;"	struct:XpmAttributes
color_flags	stubs/gtkstub.c	9448;"	struct:GtkRcStyle
color_hash	stubs/gdkstub.c	6281;"	struct:GdkColorContext
color_key	stubs/xpmstub.c	118;"	struct:XpmAttributes
colormap	stubs/gdkstub.c	6143;"	struct:GdkWindowAttr
colormap	stubs/gdkstub.c	6281;"	struct:GdkColorContext
colormap	stubs/gtkstub.c	10674;"	struct:GtkStyle
colormap	stubs/xftstub.c	34;"	struct:XRenderPictFormat
colormap	stubs/xlibstub.c	383;"	struct:XSetWindowAttributes
colormap	stubs/xlibstub.c	408;"	struct:XWindowAttributes
colormap	stubs/xlibstub.c	897;"	struct:XColormapEvent
colormap	stubs/xlibstub.c	1362;"	struct:XStandardColormap
colormap	stubs/xpmstub.c	118;"	struct:XpmAttributes
colormap_size	stubs/gdkstub.c	6125;"	struct:GdkVisual
colormap_size	stubs/xlibstub.c	1348;"	struct:XVisualInfo
colors	stubs/gdkstub.c	5537;"	struct:GdkRgbCmap
colors	stubs/gdkstub.c	6103;"	struct:GdkColormap
colors_cmt	stubs/xpmstub.c	52;"	struct:XpmInfo
colors_cmt	stubs/xpmstub.c	118;"	struct:XpmAttributes
colorsel	stubs/gtkstub.c	2403;"	struct:GtkColorSelectionDialog
colorsymbols	stubs/xpmstub.c	118;"	struct:XpmAttributes
cols	stubs/gtkstub.c	11005;"	struct:GtkTable
column	stubs/gtkstub.c	1514;"	struct:GtkCListCellInfo
column	stubs/gtkstub.c	1619;"	struct:GtkCList
column_spacing	stubs/gtkstub.c	11005;"	struct:GtkTable
column_title_area	stubs/gtkstub.c	1619;"	struct:GtkCList
columns	stubs/gtkstub.c	1619;"	struct:GtkCList
combination	stubs/gtkstub.c	11414;"	struct:GtkThemeEngine
combination	stubs/gtkstub.c	11414;"	struct:GtkThemeEngine
comp_t	stubs/unixstub.c	/^typedef u_int16_t comp_t;$/;"	t
compare	stubs/gtkstub.c	1619;"	struct:GtkCList
component_alpha	stubs/xftstub.c	97;"	struct:XRenderPictureAttributes
compose_ptr	stubs/xlibstub.c	1334;"	struct:XComposeStatus
config	stubs/glibstub.c	2298;"	struct:GScanner
configure	stubs/gdkstub.c	6539;"	union:GdkEvent
configure_serial	stubs/gtkstub.c	6161;"	struct:GtkLayout
confstr	stubs/unixstub.c	/^size_t confstr(int name, char \*buf, size_t len)$/;"	f
constant	stubs/unixstub.c	/^  long constant;	\/\* pll time constant \*\/$/;"	v
construct_args	stubs/gtkstub.c	7957;"	struct:GtkObjectClass
container	stubs/gtkstub.c	876;"	struct:GtkBin
container	stubs/gtkstub.c	922;"	struct:GtkBox
container	stubs/gtkstub.c	1619;"	struct:GtkCList
container	stubs/gtkstub.c	4667;"	struct:GtkFixed
container	stubs/gtkstub.c	6161;"	struct:GtkLayout
container	stubs/gtkstub.c	6281;"	struct:GtkList
container	stubs/gtkstub.c	7391;"	struct:GtkMenuShell
container	stubs/gtkstub.c	7555;"	struct:GtkNotebook
container	stubs/gtkstub.c	8493;"	struct:GtkPaned
container	stubs/gtkstub.c	9842;"	struct:GtkScrolledWindow
container	stubs/gtkstub.c	10343;"	struct:GtkSocket
container	stubs/gtkstub.c	11005;"	struct:GtkTable
container	stubs/gtkstub.c	11651;"	struct:GtkToolbar
container	stubs/gtkstub.c	11935;"	struct:GtkTree
context	stubs/gdkstub.c	6518;"	struct:GdkEventDND
context_id	stubs/gtkstub.c	10586;"	struct:GtkStatusbarMsg
core	stubs/xftstub.c	436;"	struct:XftFont
cos	stubs/ansistub.c	/^double cos(double angle)$/;"	f
cosh	stubs/ansistub.c	/^double cosh(double angle)$/;"	f
count	stubs/gdkstub.c	6351;"	struct:GdkEventExpose
count	stubs/xlibstub.c	657;"	struct:XExposeEvent
count	stubs/xlibstub.c	671;"	struct:XGraphicsExposeEvent
count	stubs/xlibstub.c	926;"	struct:XMappingEvent
count_styles	stubs/xlibstub.c	1130;"	struct:XIMStyles
count_values	stubs/xlibstub.c	1267;"	struct:XIMValuesList
cpair_comment_single	stubs/glibstub.c	2255;"	struct:GScannerConfig
cpair_comment_single	stubs/gtkstub.c	5759;"	struct:GtkItemFactoryClass
cpp	stubs/xpmstub.c	41;"	struct:XpmImage
cpp	stubs/xpmstub.c	118;"	struct:XpmAttributes
cr2	stubs/unixstub.c	/^    unsigned long cr2;$/;"	v
cr2	stubs/unixstub.c	/^    unsigned long cr2;$/;"	v
cr2	stubs/unixstub.c	/^    unsigned long cr2;$/;"	v
cr2	stubs/unixstub.c	/^    unsigned long cr2;$/;"	v
cr2	stubs/unixstub.c	/^    unsigned long cr2;$/;"	v
creat	stubs/unixstub.c	/^int creat(const char \*filename, int mode)$/;"	f
creat64	stubs/unixstub.c	/^int creat64(const char \*filename, int mode)$/;"	f
crossing	stubs/gdkstub.c	6539;"	union:GdkEvent
crypt	stubs/unixstub.c	/^char \*crypt(const char \*key, const char \*salt)$/;"	f
cset_identifier_first	stubs/glibstub.c	2255;"	struct:GScannerConfig
cset_identifier_nth	stubs/glibstub.c	2255;"	struct:GScannerConfig
cset_skip_characters	stubs/glibstub.c	2255;"	struct:GScannerConfig
cssel	stubs/unixstub.c	/^  unsigned long cssel;$/;"	v
ctermid	stubs/unixstub.c	/^char \*ctermid(char \*buf)$/;"	f
ctime	stubs/ansistub.c	/^char \*ctime(const time_t \*timeval)$/;"	f
cur_page	stubs/gtkstub.c	7555;"	struct:GtkNotebook
current	stubs/gtkstub.c	759;"	struct:GtkBindingSet
current_button	stubs/gtkstub.c	2500;"	struct:GtkCombo
current_device	stubs/gtkstub.c	5627;"	struct:GtkInputDialog
current_height	stubs/gtkstub.c	10343;"	struct:GtkSocket
current_indent	stubs/gtkstub.c	11935;"	struct:GtkTree
current_pos	stubs/gtkstub.c	3824;"	struct:GtkEditable
current_width	stubs/gtkstub.c	10343;"	struct:GtkSocket
cursor	stubs/gdkstub.c	6143;"	struct:GdkWindowAttr
cursor	stubs/gdkstub.c	6573;"	struct:GdkICAttr
cursor	stubs/gtkstub.c	3981;"	struct:GtkEntry
cursor	stubs/xlibstub.c	383;"	struct:XSetWindowAttributes
cursor_drag	stubs/gtkstub.c	1619;"	struct:GtkCList
cursor_type	stubs/gtkstub.c	3448;"	struct:GtkCurve
curve	stubs/gtkstub.c	5118;"	struct:GtkGammaCurve
curve_type	stubs/gtkstub.c	3448;"	struct:GtkCurve
cw	stubs/unixstub.c	/^  unsigned long cw;$/;"	t
cwd	stubs/unixstub.c	/^  long cwd;$/;"	t
cwd	stubs/unixstub.c	/^  unsigned short cwd;$/;"	t
daemon	stubs/unixstub.c	/^int daemon(int nochdir, int noclose)$/;"	f
dark	stubs/gtkstub.c	10674;"	struct:GtkStyle
dark_gc	stubs/gtkstub.c	10674;"	struct:GtkStyle
dash_offset	stubs/xlibstub.c	312;"	struct:XGCValues
dashes	stubs/xlibstub.c	312;"	struct:XGCValues
data	stubs/glibstub.c	560;"	struct:GList
data	stubs/glibstub.c	566;"	struct:GSList
data	stubs/glibstub.c	578;"	struct:GArray
data	stubs/glibstub.c	584;"	struct:GByteArray
data	stubs/glibstub.c	997;"	struct:GNode
data	stubs/glibstub.c	1192;"	struct:GHook
data	stubs/gtkstub.c	281;"	struct:GtkAdjustment
data	stubs/gtkstub.c	1699;"	struct:GtkCListRow
data	stubs/gtkstub.c	11828;"	struct:GtkTooltips
data	stubs/gtkstub.c	13617;"	struct:GtkSelectionData
data	stubs/xlibstub.c	442;"	struct:XImage
data	stubs/xpmstub.c	41;"	struct:XpmImage
data_format	stubs/gdkstub.c	6507;"	struct:GdkEventClient
dataoff	stubs/unixstub.c	/^  unsigned long dataoff;$/;"	v
datasel	stubs/unixstub.c	/^  unsigned long datasel;$/;"	v
day	stubs/glibstub.c	2541;"	struct:GDate
day	stubs/gtkstub.c	1158;"	struct:GtkCalendar
day_month	stubs/gtkstub.c	1158;"	struct:GtkCalendar
dbtob	stubs/unixstub.c	4878;"	d
default_border_width	stubs/gtkstub.c	8383;"	struct:GtkPacker
default_char	stubs/xlibstub.c	1024;"	struct:XFontStruct
default_gc	stubs/xlibstub.c	356;"	struct:Screen
default_i_pad_x	stubs/gtkstub.c	8383;"	struct:GtkPacker
default_i_pad_y	stubs/gtkstub.c	8383;"	struct:GtkPacker
default_menu	stubs/gtkstub.c	7582;"	struct:GtkNotebookPage
default_pad_x	stubs/gtkstub.c	8383;"	struct:GtkPacker
default_pad_y	stubs/gtkstub.c	8383;"	struct:GtkPacker
default_tab	stubs/gtkstub.c	7582;"	struct:GtkNotebookPage
default_widget	stubs/gtkstub.c	14411;"	struct:GtkWindow
delay	stubs/gtkstub.c	11828;"	struct:GtkTooltips
delta	stubs/xlibstub.c	1032;"	struct:XTextItem
delta	stubs/xlibstub.c	1046;"	struct:XTextItem16
delta	stubs/xlibstub.c	1071;"	struct:XmbTextItem
delta	stubs/xlibstub.c	1079;"	struct:XwcTextItem
depth	stubs/gdkstub.c	6125;"	struct:GdkVisual
depth	stubs/gdkstub.c	6178;"	struct:GdkImage
depth	stubs/gtkstub.c	10674;"	struct:GtkStyle
depth	stubs/xftstub.c	34;"	struct:XRenderPictFormat
depth	stubs/xftstub.c	61;"	struct:XRenderDepth
depth	stubs/xftstub.c	80;"	struct:XRenderInfo
depth	stubs/xlibstub.c	283;"	struct:XPixmapFormatValues
depth	stubs/xlibstub.c	335;"	struct:Depth
depth	stubs/xlibstub.c	364;"	struct:ScreenFormat
depth	stubs/xlibstub.c	408;"	struct:XWindowAttributes
depth	stubs/xlibstub.c	442;"	struct:XImage
depth	stubs/xlibstub.c	1348;"	struct:XVisualInfo
depth	stubs/xpmstub.c	118;"	struct:XpmAttributes
depths	stubs/xftstub.c	68;"	struct:XRenderScreen
depths	stubs/xlibstub.c	356;"	struct:Screen
derived_data	stubs/glibstub.c	2298;"	struct:GScanner
descent	stubs/gdkstub.c	6240;"	struct:GdkFont
descent	stubs/xftstub.c	436;"	struct:XftFont
descent	stubs/xlibstub.c	998;"	struct:XCharStruct
descent	stubs/xlibstub.c	1024;"	struct:XFontStruct
deskoff_x	stubs/gtkstub.c	5189;"	struct:GtkHandleBox
deskoff_y	stubs/gtkstub.c	5189;"	struct:GtkHandleBox
dest_window	stubs/gdkstub.c	6327;"	struct:GdkDragContext
destroy	stubs/glibstub.c	1192;"	struct:GHook
destroy	stubs/gtkstub.c	1699;"	struct:GtkCListRow
destroyed	stubs/gtkstub.c	776;"	struct:GtkBindingEntry
detail	stubs/gdkstub.c	6437;"	struct:GdkEventCrossing
detail	stubs/xlibstub.c	609;"	struct:XCrossingEvent
detail	stubs/xlibstub.c	629;"	struct:XFocusChangeEvent
detail	stubs/xlibstub.c	813;"	struct:XConfigureRequestEvent
dev_t	stubs/unixstub.c	/^typedef __dev_t dev_t;$/;"	t
deviceid	stubs/gdkstub.c	6302;"	struct:GdkDeviceInfo
deviceid	stubs/gdkstub.c	6387;"	struct:GdkEventMotion
deviceid	stubs/gdkstub.c	6406;"	struct:GdkEventButton
deviceid	stubs/gdkstub.c	6492;"	struct:GdkEventProximity
dialog	stubs/gtkstub.c	5627;"	struct:GtkInputDialog
dialog_width	stubs/gtkstub.c	4876;"	struct:GtkFontSelectionDialog
difftime	stubs/ansistub.c	/^double difftime(time_t end, time_t begin)$/;"	f
digits	stubs/gtkstub.c	9291;"	struct:GtkRange
digits	stubs/gtkstub.c	10436;"	struct:GtkSpinButton
dir_list	stubs/gtkstub.c	4597;"	struct:GtkFileSelection
direct	stubs/unixstub.c	3556;"	d
direct	stubs/xftstub.c	34;"	struct:XRenderPictFormat
direction	stubs/xlibstub.c	1024;"	struct:XFontStruct
direction	stubs/xlibstub.c	1209;"	struct:XIMStringConversionCallbackStruct
direction	stubs/xlibstub.c	1231;"	struct:XIMPreeditCaretCallbackStruct
display	stubs/xlibstub.c	356;"	struct:Screen
display	stubs/xlibstub.c	539;"	struct:XKeyEvent
display	stubs/xlibstub.c	562;"	struct:XButtonEvent
display	stubs/xlibstub.c	585;"	struct:XMotionEvent
display	stubs/xlibstub.c	609;"	struct:XCrossingEvent
display	stubs/xlibstub.c	629;"	struct:XFocusChangeEvent
display	stubs/xlibstub.c	645;"	struct:XKeymapEvent
display	stubs/xlibstub.c	657;"	struct:XExposeEvent
display	stubs/xlibstub.c	671;"	struct:XGraphicsExposeEvent
display	stubs/xlibstub.c	682;"	struct:XNoExposeEvent
display	stubs/xlibstub.c	692;"	struct:XVisibilityEvent
display	stubs/xlibstub.c	706;"	struct:XCreateWindowEvent
display	stubs/xlibstub.c	716;"	struct:XDestroyWindowEvent
display	stubs/xlibstub.c	727;"	struct:XUnmapEvent
display	stubs/xlibstub.c	738;"	struct:XMapEvent
display	stubs/xlibstub.c	748;"	struct:XMapRequestEvent
display	stubs/xlibstub.c	761;"	struct:XReparentEvent
display	stubs/xlibstub.c	776;"	struct:XConfigureEvent
display	stubs/xlibstub.c	787;"	struct:XGravityEvent
display	stubs/xlibstub.c	797;"	struct:XResizeRequestEvent
display	stubs/xlibstub.c	813;"	struct:XConfigureRequestEvent
display	stubs/xlibstub.c	824;"	struct:XCirculateEvent
display	stubs/xlibstub.c	835;"	struct:XCirculateRequestEvent
display	stubs/xlibstub.c	847;"	struct:XPropertyEvent
display	stubs/xlibstub.c	858;"	struct:XSelectionClearEvent
display	stubs/xlibstub.c	872;"	struct:XSelectionRequestEvent
display	stubs/xlibstub.c	885;"	struct:XSelectionEvent
display	stubs/xlibstub.c	897;"	struct:XColormapEvent
display	stubs/xlibstub.c	913;"	struct:XClientMessageEvent
display	stubs/xlibstub.c	926;"	struct:XMappingEvent
display	stubs/xlibstub.c	937;"	struct:XErrorEvent
display	stubs/xlibstub.c	946;"	struct:XAnyEvent
display	stubs/xlibstub.c	1057;"	union:XEDataObject
display_flags	stubs/gtkstub.c	1158;"	struct:GtkCalendar
dither	stubs/gtkstub.c	8711;"	struct:GtkPreview
dither	stubs/xftstub.c	97;"	struct:XRenderPictureAttributes
div	stubs/ansistub.c	/^div_t div(int number, int divider)$/;"	f
div_t	stubs/ansistub.c	/^} div_t;$/;"	t
dmy	stubs/glibstub.c	2541;"	struct:GDate
dnd	stubs/gdkstub.c	6539;"	union:GdkEvent
do_not_propagate_mask	stubs/xlibstub.c	383;"	struct:XSetWindowAttributes
do_not_propagate_mask	stubs/xlibstub.c	408;"	struct:XWindowAttributes
dq_bhardlimit	stubs/unixstub.c	4884;"	d
dq_bsoftlimit	stubs/unixstub.c	4887;"	d
dq_btime	stubs/unixstub.c	4890;"	d
dq_curblocks	stubs/unixstub.c	4893;"	d
dq_curinodes	stubs/unixstub.c	4896;"	d
dq_ihardlimit	stubs/unixstub.c	4899;"	d
dq_isoftlimit	stubs/unixstub.c	4902;"	d
dq_itime	stubs/unixstub.c	4905;"	d
dqoff	stubs/unixstub.c	4926;"	d
drag_button	stubs/gtkstub.c	1619;"	struct:GtkCList
drag_compare	stubs/gtkstub.c	2986;"	struct:GtkCTree
drag_pos	stubs/gtkstub.c	1619;"	struct:GtkCList
drag_pos	stubs/gtkstub.c	6281;"	struct:GtkList
drag_selection	stubs/gtkstub.c	6281;"	struct:GtkList
draw_data	stubs/gtkstub.c	3761;"	struct:GtkDrawingArea
draw_indicator	stubs/gtkstub.c	11540;"	struct:GtkToggleButton
draw_value	stubs/gtkstub.c	9726;"	struct:GtkScale
drawable	stubs/xlibstub.c	671;"	struct:XGraphicsExposeEvent
drawable	stubs/xlibstub.c	682;"	struct:XNoExposeEvent
dummy	stubs/gtkstub.c	5759;"	struct:GtkItemFactoryClass
dummy	stubs/gtkstub.c	5799;"	struct:GtkItemFactoryItem
dummy_var	stubs/gdkstub.c	6207;"	struct:GdkGC
dup	stubs/unixstub.c	/^int dup(int fd)$/;"	f
dup2	stubs/unixstub.c	/^int dup2(int fd, int newfd)$/;"	f
eax	stubs/unixstub.c	/^  long eax;$/;"	v
ebp	stubs/unixstub.c	/^  long ebp;$/;"	v
ebx	stubs/unixstub.c	/^  long ebx;$/;"	t
ecx	stubs/unixstub.c	/^  long ecx;$/;"	v
edi	stubs/unixstub.c	/^  long edi;$/;"	v
editable	stubs/gtkstub.c	3824;"	struct:GtkEditable
editable	stubs/gtkstub.c	3981;"	struct:GtkEntry
editable	stubs/gtkstub.c	11279;"	struct:GtkText
edx	stubs/unixstub.c	/^  long edx;$/;"	v
eflags	stubs/unixstub.c	/^  long eflags;$/;"	v
eip	stubs/unixstub.c	/^  long eip;$/;"	v
elts	stubs/xftstub.c	408;"	struct:XftPattern
empty	stubs/gtkstub.c	11045;"	struct:GtkTableRowCol
enabled	stubs/gtkstub.c	11828;"	struct:GtkTooltips
encoding	stubs/xlibstub.c	1307;"	struct:XTextProperty
encoding_is_wchar	stubs/xlibstub.c	1159;"	struct:XIMText
encoding_is_wchar	stubs/xlibstub.c	1184;"	struct:XIMStringConversionText
encrypt	stubs/unixstub.c	/^void encrypt(char \*block, int edflag)$/;"	f
endusershell	stubs/unixstub.c	/^void endusershell(void)$/;"	f
engine	stubs/gtkstub.c	9448;"	struct:GtkRcStyle
engine	stubs/gtkstub.c	10674;"	struct:GtkStyle
engine_data	stubs/gtkstub.c	9448;"	struct:GtkRcStyle
engine_data	stubs/gtkstub.c	10674;"	struct:GtkStyle
entries	stubs/gtkstub.c	759;"	struct:GtkBindingSet
entries	stubs/gtkstub.c	2380;"	struct:GtkColorSelection
entry	stubs/gtkstub.c	2500;"	struct:GtkCombo
entry	stubs/gtkstub.c	10436;"	struct:GtkSpinButton
entry_change_id	stubs/gtkstub.c	2500;"	struct:GtkCombo
errno	stubs/unixstub.c	/^int errno;$/;"	v
error_code	stubs/xlibstub.c	937;"	struct:XErrorEvent
error_t	stubs/unixstub.c	/^typedef int error_t;$/;"	t
esi	stubs/unixstub.c	/^  long esi;$/;"	v
esp	stubs/unixstub.c	/^  long esp;$/;"	v
esterror	stubs/unixstub.c	/^  long esterror;	\/\* estimated error (usec) \*\/$/;"	v
euidaccess	stubs/unixstub.c	/^int euidaccess(const char \*name, int type)$/;"	f
ev_time	stubs/gtkstub.c	10436;"	struct:GtkSpinButton
event	stubs/xlibstub.c	716;"	struct:XDestroyWindowEvent
event	stubs/xlibstub.c	727;"	struct:XUnmapEvent
event	stubs/xlibstub.c	738;"	struct:XMapEvent
event	stubs/xlibstub.c	761;"	struct:XReparentEvent
event	stubs/xlibstub.c	776;"	struct:XConfigureEvent
event	stubs/xlibstub.c	787;"	struct:XGravityEvent
event	stubs/xlibstub.c	824;"	struct:XCirculateEvent
event_mask	stubs/gdkstub.c	6143;"	struct:GdkWindowAttr
event_mask	stubs/xlibstub.c	383;"	struct:XSetWindowAttributes
event_window	stubs/gtkstub.c	11540;"	struct:GtkToggleButton
exactColors	stubs/xpmstub.c	118;"	struct:XpmAttributes
execl	stubs/unixstub.c	/^int execl(const char \*path, char const \*arg0, \.\.\.)$/;"	f
execle	stubs/unixstub.c	/^int execle(const char \*path, const char \*arg0, \.\.\.)$/;"	f
execlp	stubs/unixstub.c	/^int execlp(const char \*file, char const \*arg0, \.\.\.)$/;"	f
execv	stubs/unixstub.c	/^int execv(const char \*path, char const \*argv\[\])$/;"	f
execve	stubs/unixstub.c	/^int execve(const char \*path, char const \*argv\[\], char const \*envp\[\])$/;"	f
execvp	stubs/unixstub.c	/^int execvp(const char \*file, char const \*argv\[\])$/;"	f
exit	stubs/ansistub.c	/^void exit(int exit_code)$/;"	f
exp	stubs/ansistub.c	/^double exp(double num)$/;"	f
expand	stubs/gtkstub.c	940;"	struct:GtkBoxChild
expand	stubs/gtkstub.c	7582;"	struct:GtkNotebookPage
expand	stubs/gtkstub.c	8711;"	struct:GtkPreview
expand	stubs/gtkstub.c	11045;"	struct:GtkTableRowCol
expanded	stubs/gtkstub.c	3021;"	struct:GtkCTreeRow
expanded	stubs/gtkstub.c	12067;"	struct:GtkTreeItem
expander_style	stubs/gtkstub.c	2986;"	struct:GtkCTree
exponent	stubs/unixstub.c	/^  unsigned short exponent;$/;"	v
expose	stubs/gdkstub.c	6539;"	union:GdkEvent
ext_data	stubs/xlibstub.c	328;"	struct:Visual
ext_data	stubs/xlibstub.c	356;"	struct:Screen
ext_data	stubs/xlibstub.c	364;"	struct:ScreenFormat
ext_data	stubs/xlibstub.c	1024;"	struct:XFontStruct
extension	stubs/xlibstub.c	276;"	struct:XExtCodes
extensions	stubs/xpmstub.c	52;"	struct:XpmInfo
extensions	stubs/xpmstub.c	118;"	struct:XpmAttributes
fabs	stubs/ansistub.c	/^double fabs(double num)$/;"	f
facilitynames	stubs/unixstub.c	/^CODE facilitynames\[\] =$/;"	v
factor	stubs/xlibstub.c	1209;"	struct:XIMStringConversionCallbackStruct
fallback	stubs/xftstub.c	68;"	struct:XRenderScreen
family	stubs/xlibstub.c	415;"	struct:XHostAddress
fast_dither	stubs/gdkstub.c	6281;"	struct:GdkColorContext
fast_erb	stubs/gdkstub.c	6256;"	struct:GdkColorContextDither
fast_erg	stubs/gdkstub.c	6256;"	struct:GdkColorContextDither
fast_err	stubs/gdkstub.c	6256;"	struct:GdkColorContextDither
fast_rgb	stubs/gdkstub.c	6256;"	struct:GdkColorContextDither
fchdir	stubs/unixstub.c	/^int fchdir(int fd)$/;"	f
fchown	stubs/unixstub.c	/^int fchown(int fd, uid_t owner, gid_t group)$/;"	f
fclose	stubs/ansistub.c	/^int fclose(FILE \*fp)$/;"	f
fcntl	stubs/unixstub.c	/^int fcntl(int fd, int cmd, \.\.\.)$/;"	f
fcs	stubs/unixstub.c	/^  long fcs;$/;"	v
fcs	stubs/unixstub.c	/^  long fcs;$/;"	v
fd_mask	stubs/unixstub.c	/^typedef __fd_mask fd_mask;$/;"	t
fd_set	stubs/unixstub.c	/^  } fd_set;$/;"	v
fd_set	stubs/unixstub.c	/^  } fd_set;$/;"	v
fd_set	stubs/unixstub.c	/^  } fd_set;$/;"	v
fdatasync	stubs/unixstub.c	/^int fdatasync(int fd)$/;"	f
feedback	stubs/xlibstub.c	1159;"	struct:XIMText
feedback	stubs/xlibstub.c	1184;"	struct:XIMStringConversionText
feof	stubs/ansistub.c	/^int feof(FILE \*fp)$/;"	f
ferror	stubs/ansistub.c	/^int ferror(FILE \*fp)$/;"	f
fflush	stubs/ansistub.c	/^int fflush(FILE \*fp)$/;"	f
fg	stubs/gtkstub.c	9448;"	struct:GtkRcStyle
fg	stubs/gtkstub.c	10674;"	struct:GtkStyle
fg_gc	stubs/gtkstub.c	1619;"	struct:GtkCList
fg_gc	stubs/gtkstub.c	10674;"	struct:GtkStyle
fg_set	stubs/gtkstub.c	1699;"	struct:GtkCListRow
fgetc	stubs/ansistub.c	/^int fgetc(FILE \*fp)$/;"	f
fgetpos	stubs/ansistub.c	/^int fgetpos(FILE \*fp, fpos_t \*position)$/;"	f
fgets	stubs/ansistub.c	/^char \*fgets(char \*string, int width, FILE \*fp)$/;"	f
fid	stubs/xlibstub.c	1024;"	struct:XFontStruct
field	stubs/gtkstub.c	12753;"	struct:GtkArg
file_list	stubs/gtkstub.c	4597;"	struct:GtkFileSelection
fileop_c_dir	stubs/gtkstub.c	4597;"	struct:GtkFileSelection
fileop_del_file	stubs/gtkstub.c	4597;"	struct:GtkFileSelection
fileop_dialog	stubs/gtkstub.c	4597;"	struct:GtkFileSelection
fileop_entry	stubs/gtkstub.c	4597;"	struct:GtkFileSelection
fileop_file	stubs/gtkstub.c	4597;"	struct:GtkFileSelection
fileop_ren_file	stubs/gtkstub.c	4597;"	struct:GtkFileSelection
fill	stubs/gdkstub.c	6201;"	struct:GdkGCValues
fill	stubs/gtkstub.c	940;"	struct:GtkBoxChild
fill	stubs/gtkstub.c	7582;"	struct:GtkNotebookPage
fill_rule	stubs/xlibstub.c	312;"	struct:XGCValues
fill_style	stubs/xlibstub.c	312;"	struct:XGCValues
filter_button	stubs/gtkstub.c	4847;"	struct:GtkFontSelection
filter_events	stubs/gdkstub.c	6573;"	struct:GdkICAttr
filter_vbox	stubs/gtkstub.c	4847;"	struct:GtkFontSelection
fip	stubs/unixstub.c	/^  long fip;$/;"	v
fip	stubs/unixstub.c	/^  long fip;$/;"	v
first_error	stubs/xlibstub.c	276;"	struct:XExtCodes
first_event	stubs/xlibstub.c	276;"	struct:XExtCodes
first_keycode	stubs/xlibstub.c	926;"	struct:XMappingEvent
first_tab	stubs/gtkstub.c	7555;"	struct:GtkNotebook
flags	stubs/glibstub.c	1192;"	struct:GHook
flags	stubs/gtkstub.c	1619;"	struct:GtkCList
flags	stubs/gtkstub.c	7910;"	struct:GtkObject
flags	stubs/gtkstub.c	9907;"	struct:GtkTargetEntry
flags	stubs/gtkstub.c	9925;"	struct:GtkTargetPair
flags	stubs/xlibstub.c	459;"	struct:XColor
flags	stubs/xlibstub.c	1286;"	struct:XSizeHints
flags	stubs/xlibstub.c	1299;"	struct:XWMHints
float_allocation	stubs/gtkstub.c	5189;"	struct:GtkHandleBox
float_window	stubs/gtkstub.c	5189;"	struct:GtkHandleBox
float_window_mapped	stubs/gtkstub.c	5189;"	struct:GtkHandleBox
flock	stubs/unixstub.c	/^struct flock$/;"	s
flock64	stubs/unixstub.c	/^struct flock64$/;"	s
floor	stubs/ansistub.c	/^double floor(double lower)$/;"	f
fmod	stubs/ansistub.c	/^double fmod(double first, double second)$/;"	f
focus	stubs/gdkstub.c	6437;"	struct:GdkEventCrossing
focus	stubs/xlibstub.c	609;"	struct:XCrossingEvent
focus_change	stubs/gdkstub.c	6539;"	union:GdkEvent
focus_child	stubs/gtkstub.c	2639;"	struct:GtkContainer
focus_col	stubs/gtkstub.c	1158;"	struct:GtkCalendar
focus_in	stubs/gtkstub.c	10343;"	struct:GtkSocket
focus_row	stubs/gtkstub.c	1158;"	struct:GtkCalendar
focus_row	stubs/gtkstub.c	1619;"	struct:GtkCList
focus_tab	stubs/gtkstub.c	7555;"	struct:GtkNotebook
focus_widget	stubs/gtkstub.c	14411;"	struct:GtkWindow
focus_window	stubs/gdkstub.c	6573;"	struct:GdkICAttr
font	stubs/gdkstub.c	6201;"	struct:GdkGCValues
font	stubs/gtkstub.c	4847;"	struct:GtkFontSelection
font	stubs/gtkstub.c	10674;"	struct:GtkStyle
font	stubs/gtkstub.c	11809;"	struct:GtkTooltipsData
font	stubs/xlibstub.c	312;"	struct:XGCValues
font	stubs/xlibstub.c	1032;"	struct:XTextItem
font	stubs/xlibstub.c	1046;"	struct:XTextItem16
font	stubs/xlibstub.c	1057;"	union:XEDataObject
font_clist	stubs/gtkstub.c	4847;"	struct:GtkFontSelection
font_entry	stubs/gtkstub.c	4847;"	struct:GtkFontSelection
font_index	stubs/gtkstub.c	4847;"	struct:GtkFontSelection
font_label	stubs/gtkstub.c	4847;"	struct:GtkFontSelection
font_name	stubs/gtkstub.c	9448;"	struct:GtkRcStyle
font_name_list	stubs/xlibstub.c	1107;"	struct:XOMFontInfo
font_set	stubs/xlibstub.c	1071;"	struct:XmbTextItem
font_set	stubs/xlibstub.c	1079;"	struct:XwcTextItem
font_struct_list	stubs/xlibstub.c	1107;"	struct:XOMFontInfo
font_style_clist	stubs/gtkstub.c	4847;"	struct:GtkFontSelection
font_style_entry	stubs/gtkstub.c	4847;"	struct:GtkFontSelection
font_type	stubs/gtkstub.c	4793;"	struct:GtkFontFilter
fonts	stubs/xftstub.c	415;"	struct:XftFontSet
fontsel	stubs/gtkstub.c	4876;"	struct:GtkFontSelectionDialog
fontset_name	stubs/gtkstub.c	9448;"	struct:GtkRcStyle
foo	stubs/unixstub.c	/^  long foo;$/;"	v
foo	stubs/unixstub.c	/^  long foo;$/;"	v
fop	stubs/unixstub.c	/^  unsigned short fop;$/;"	v
fopen	stubs/ansistub.c	/^FILE \*fopen(const char \*file_name, const char \*mode)$/;"	f
foreground	stubs/gdkstub.c	6201;"	struct:GdkGCValues
foreground	stubs/gtkstub.c	1699;"	struct:GtkCListRow
foreground	stubs/gtkstub.c	11828;"	struct:GtkTooltips
foreground	stubs/xlibstub.c	312;"	struct:XGCValues
fork	stubs/unixstub.c	/^pid_t fork(void)$/;"	f
format	stubs/gtkstub.c	9029;"	struct:GtkProgress
format	stubs/gtkstub.c	13617;"	struct:GtkSelectionData
format	stubs/xftstub.c	54;"	struct:XRenderVisual
format	stubs/xftstub.c	80;"	struct:XRenderInfo
format	stubs/xlibstub.c	442;"	struct:XImage
format	stubs/xlibstub.c	913;"	struct:XClientMessageEvent
format	stubs/xlibstub.c	1307;"	struct:XTextProperty
fos	stubs/unixstub.c	/^  long fos;$/;"	v
fos	stubs/unixstub.c	/^  long fos;$/;"	v
fpathconf	stubs/unixstub.c	/^long int fpathconf(int fd, int pcname)$/;"	f
fpos_t	stubs/ansistub.c	/^typedef OPAQUE	fpos_t;$/;"	t
fpregs	stubs/unixstub.c	/^    fpregset_t fpregs;$/;"	v
fpregs	stubs/unixstub.c	/^    fpregset_t fpregs;$/;"	v
fpregs	stubs/unixstub.c	/^    fpregset_t fpregs;$/;"	v
fpregs	stubs/unixstub.c	/^    fpregset_t fpregs;$/;"	v
fpregs	stubs/unixstub.c	/^    fpregset_t fpregs;$/;"	v
fpregset_t	stubs/unixstub.c	/^typedef struct _libc_fpstate \*fpregset_t;$/;"	t
fprintf	stubs/ansistub.c	/^int fprintf(FILE \*fp, const char \*format, \.\.\.)$/;"	f
fputc	stubs/ansistub.c	/^int fputc(int ch, FILE \*fp)$/;"	f
fputs	stubs/ansistub.c	/^int fputs(const char \*string, FILE \*fp)$/;"	f
frame	stubs/gtkstub.c	563;"	struct:GtkAspectFrame
frame	stubs/gtkstub.c	10565;"	struct:GtkStatusbar
fread	stubs/ansistub.c	/^size_t fread(void \*buffer, size_t width, size_t count, FILE \*fp)$/;"	f
free	stubs/ansistub.c	/^void free(void \*memory_ptr)$/;"	f
free_colors	stubs/xpmstub.c	118;"	struct:XpmAttributes
free_colors	stubs/xpmstub.c	118;"	struct:XpmAttributes
freeze_count	stubs/gtkstub.c	1619;"	struct:GtkCList
freeze_count	stubs/gtkstub.c	6161;"	struct:GtkLayout
freopen	stubs/ansistub.c	/^FILE \*freopen(const char \*new_file, const char \*mode, FILE \*fp)$/;"	f
freq	stubs/unixstub.c	/^  long freq;	\/\* frequency offset (scaled ppm) \*\/$/;"	v
frexp	stubs/ansistub.c	/^double frexp(double num, int \*exp)$/;"	f
from_configure	stubs/xlibstub.c	727;"	struct:XUnmapEvent
fs_to_dq_blocks	stubs/unixstub.c	4947;"	d
fsblkcnt_t	stubs/unixstub.c	/^typedef __fsblkcnt_t fsblkcnt_t; \/\* Type to count file system blocks\.  \*\/$/;"	t
fsblkcnt_t	stubs/unixstub.c	/^typedef __fsblkcnt64_t fsblkcnt_t; \/\* Type to count file system blocks\.  \*\/$/;"	t
fscanf	stubs/ansistub.c	/^int fscanf(FILE \*fp, const char \*format, \.\.\.)$/;"	f
fseek	stubs/ansistub.c	/^int fseek(FILE \*fp, long int offset, int whence)$/;"	f
fsetpos	stubs/ansistub.c	/^int fsetpos(FILE \*fp, const fpos_t \*position)$/;"	f
fsfilcnt_t	stubs/unixstub.c	/^typedef __fsfilcnt_t fsfilcnt_t; \/\* Type to count file system inodes\.  \*\/$/;"	t
fsfilcnt_t	stubs/unixstub.c	/^typedef __fsfilcnt64_t fsfilcnt_t; \/\* Type to count file system inodes\.  \*\/$/;"	t
fstat	stubs/unixstub.c	/^__inline__ int fstat (int __fd, struct stat \*__statbuf)$/;"	f
fstat	stubs/unixstub.c	5474;"	d
fstat64	stubs/unixstub.c	/^__inline__ int fstat64 (int __fd, struct stat64 \*__statbuf)$/;"	f
fstatfs	stubs/unixstub.c	5269;"	d
fstatvfs	stubs/unixstub.c	5561;"	d
ftell	stubs/ansistub.c	/^long int ftell(FILE \*fp)$/;"	f
ftime	stubs/unixstub.c	/^int ftime (struct timeb \*__timebuf)$/;"	f
ftruncate	stubs/unixstub.c	/^int ftruncate(int fd, off_t length)$/;"	f
ftruncate64	stubs/unixstub.c	/^int ftruncate64(int fd, off64_t length)$/;"	f
full_name	stubs/gtkstub.c	397;"	struct:GtkArgInfo
func	stubs/glibstub.c	1192;"	struct:GHook
func	stubs/glibstub.c	2430;"	struct:GCompletion
function	stubs/gdkstub.c	6201;"	struct:GdkGCValues
function	stubs/xlibstub.c	312;"	struct:XGCValues
fwrite	stubs/ansistub.c	/^size_t fwrite(const void \*buffer, size_t width, size_t count, FILE \*fp)$/;"	f
g4_color	stubs/xpmstub.c	32;"	struct:XpmColor
g_ATEXIT	stubs/glibstub.c	98;"	d
g_allocator_free	stubs/glibstub.c	/^void g_allocator_free(GAllocator \*allocator)$/;"	f
g_allocator_new	stubs/glibstub.c	/^GAllocator\* g_allocator_new(const gchar \*name, guint n_preallocs)$/;"	f
g_array_append_val	stubs/glibstub.c	1866;"	d
g_array_append_vals	stubs/glibstub.c	/^GArray\* g_array_append_vals(GArray \*array, gconstpointer data, guint len)$/;"	f
g_array_free	stubs/glibstub.c	/^void g_array_free(GArray \*array, gboolean free_segment)$/;"	f
g_array_index	stubs/glibstub.c	1875;"	d
g_array_insert_val	stubs/glibstub.c	1872;"	d
g_array_insert_vals	stubs/glibstub.c	/^GArray\* g_array_insert_vals(GArray \*array, guint index, gconstpointer data, guint len)$/;"	f
g_array_new	stubs/glibstub.c	/^GArray\* g_array_new(gboolean zero_terminated, gboolean clear, guint element_size)$/;"	f
g_array_prepend_val	stubs/glibstub.c	1869;"	d
g_array_prepend_vals	stubs/glibstub.c	/^GArray\* g_array_prepend_vals(GArray \*array, gconstpointer data, guint len)$/;"	f
g_array_remove_index	stubs/glibstub.c	/^GArray\* g_array_remove_index(GArray \*array, guint index)$/;"	f
g_array_remove_index_fast	stubs/glibstub.c	/^GArray\* g_array_remove_index_fast(GArray \*array, guint index)$/;"	f
g_array_set_size	stubs/glibstub.c	/^GArray\* g_array_set_size(GArray \*array, guint length)$/;"	f
g_assert	stubs/glibstub.c	189;"	d
g_assert_not_reached	stubs/glibstub.c	190;"	d
g_atexit	stubs/glibstub.c	/^void g_atexit(GVoidFunc func)$/;"	f
g_basename	stubs/glibstub.c	/^gchar\* g_basename(const gchar \*file_name)$/;"	f
g_bit_nth_lsf	stubs/glibstub.c	/^G_INLINE_FUNC gint g_bit_nth_lsf(guint32 mask, gint nth_bit)$/;"	f
g_bit_nth_msf	stubs/glibstub.c	/^G_INLINE_FUNC gint g_bit_nth_msf(guint32 mask, gint nth_bit)$/;"	f
g_bit_storage	stubs/glibstub.c	/^G_INLINE_FUNC guint g_bit_storage(guint number)$/;"	f
g_blow_chunks	stubs/glibstub.c	/^void g_blow_chunks(void)$/;"	f
g_byte_array_append	stubs/glibstub.c	/^GByteArray\* g_byte_array_append(GByteArray \*array, const guint8 \*data, guint len)$/;"	f
g_byte_array_free	stubs/glibstub.c	/^void g_byte_array_free(GByteArray \*array, gboolean free_segment)$/;"	f
g_byte_array_new	stubs/glibstub.c	/^GByteArray\* g_byte_array_new(void)$/;"	f
g_byte_array_prepend	stubs/glibstub.c	/^GByteArray\* g_byte_array_prepend(GByteArray \*array, const guint8 \*data, guint len)$/;"	f
g_byte_array_remove_index	stubs/glibstub.c	/^GByteArray\* g_byte_array_remove_index(GByteArray \*array, guint index)$/;"	f
g_byte_array_remove_index_fast	stubs/glibstub.c	/^GByteArray\* g_byte_array_remove_index_fast(GByteArray \*array, guint index)$/;"	f
g_byte_array_set_size	stubs/glibstub.c	/^GByteArray\* g_byte_array_set_size(GByteArray \*array, guint length)$/;"	f
g_cache_destroy	stubs/glibstub.c	/^void g_cache_destroy(GCache \*cache)$/;"	f
g_cache_insert	stubs/glibstub.c	/^gpointer g_cache_insert(GCache \*cache, gpointer key)$/;"	f
g_cache_key_foreach	stubs/glibstub.c	/^void g_cache_key_foreach(GCache \*cache, GHFunc func, gpointer user_data)$/;"	f
g_cache_new	stubs/glibstub.c	/^GCache\* g_cache_new(GCacheNewFunc value_new_func, GCacheDestroyFunc value_destroy_func, GCacheDupFunc key_dup_func, GCacheDestroyFunc key_destroy_func, GHashFu/;"	f
g_cache_remove	stubs/glibstub.c	/^void g_cache_remove(GCache \*cache, gpointer value)$/;"	f
g_cache_value_foreach	stubs/glibstub.c	/^void g_cache_value_foreach(GCache \*cache, GHFunc func, gpointer user_data)$/;"	f
g_chunk_free	stubs/glibstub.c	180;"	d
g_chunk_new	stubs/glibstub.c	174;"	d
g_chunk_new0	stubs/glibstub.c	177;"	d
g_color	stubs/xpmstub.c	32;"	struct:XpmColor
g_completion_add_items	stubs/glibstub.c	/^void g_completion_add_items(GCompletion\* cmp, GList\* items)$/;"	f
g_completion_clear_items	stubs/glibstub.c	/^void g_completion_clear_items(GCompletion\* cmp)$/;"	f
g_completion_complete	stubs/glibstub.c	/^GList\* g_completion_complete(GCompletion\* cmp, gchar\* prefix, gchar\*\* new_prefix)$/;"	f
g_completion_free	stubs/glibstub.c	/^void g_completion_free(GCompletion\* cmp)$/;"	f
g_completion_new	stubs/glibstub.c	/^GCompletion\* g_completion_new(GCompletionFunc func)$/;"	f
g_completion_remove_items	stubs/glibstub.c	/^void g_completion_remove_items(GCompletion\* cmp, GList\* items)$/;"	f
g_cond_broadcast	stubs/glibstub.c	3144;"	d
g_cond_free	stubs/glibstub.c	3150;"	d
g_cond_new	stubs/glibstub.c	3138;"	d
g_cond_signal	stubs/glibstub.c	3141;"	d
g_cond_timed_wait	stubs/glibstub.c	3153;"	d
g_cond_wait	stubs/glibstub.c	3147;"	d
g_critical	stubs/glibstub.c	1383;"	d
g_datalist_clear	stubs/glibstub.c	/^void g_datalist_clear(GData \*\*datalist)$/;"	f
g_datalist_foreach	stubs/glibstub.c	/^void g_datalist_foreach(GData \*\*datalist, GDataForeachFunc func, gpointer user_data)$/;"	f
g_datalist_get_data	stubs/glibstub.c	2082;"	d
g_datalist_id_get_data	stubs/glibstub.c	/^gpointer g_datalist_id_get_data(GData \*\*datalist, GQuark key_id)$/;"	f
g_datalist_id_remove_data	stubs/glibstub.c	2079;"	d
g_datalist_id_remove_no_notify	stubs/glibstub.c	/^void g_datalist_id_remove_no_notify(GData \*\*datalist, GQuark key_id)$/;"	f
g_datalist_id_set_data	stubs/glibstub.c	2076;"	d
g_datalist_id_set_data_full	stubs/glibstub.c	/^void g_datalist_id_set_data_full(GData \*\*datalist, GQuark key_id, gpointer data, GDestroyNotify destroy_func)$/;"	f
g_datalist_init	stubs/glibstub.c	/^void g_datalist_init(GData \*\*datalist)$/;"	f
g_datalist_remove_data	stubs/glibstub.c	2094;"	d
g_datalist_remove_no_notify	stubs/glibstub.c	2088;"	d
g_datalist_set_data	stubs/glibstub.c	2091;"	d
g_datalist_set_data_full	stubs/glibstub.c	2085;"	d
g_dataset_destroy	stubs/glibstub.c	/^void g_dataset_destroy(gconstpointer dataset_location)$/;"	f
g_dataset_foreach	stubs/glibstub.c	/^void g_dataset_foreach(gconstpointer dataset_location, GDataForeachFunc func, gpointer user_data)$/;"	f
g_dataset_get_data	stubs/glibstub.c	2128;"	d
g_dataset_id_get_data	stubs/glibstub.c	/^gpointer g_dataset_id_get_data(gconstpointer dataset_location, GQuark key_id)$/;"	f
g_dataset_id_remove_data	stubs/glibstub.c	2125;"	d
g_dataset_id_remove_no_notify	stubs/glibstub.c	/^void g_dataset_id_remove_no_notify(gconstpointer dataset_location, GQuark key_id)$/;"	f
g_dataset_id_set_data	stubs/glibstub.c	2122;"	d
g_dataset_id_set_data_full	stubs/glibstub.c	/^void g_dataset_id_set_data_full(gconstpointer dataset_location, GQuark key_id, gpointer data, GDestroyNotify destroy_func)$/;"	f
g_dataset_remove_data	stubs/glibstub.c	2140;"	d
g_dataset_remove_no_notify	stubs/glibstub.c	2134;"	d
g_dataset_set_data	stubs/glibstub.c	2137;"	d
g_dataset_set_data_full	stubs/glibstub.c	2131;"	d
g_date_day	stubs/glibstub.c	/^GDateDay g_date_day(GDate \*date)$/;"	f
g_date_day_of_year	stubs/glibstub.c	/^guint g_date_day_of_year(GDate \*date)$/;"	f
g_date_free	stubs/glibstub.c	/^void g_date_free(GDate \*date)$/;"	f
g_date_julian	stubs/glibstub.c	/^guint32 g_date_julian(GDate \*date)$/;"	f
g_date_monday_week_of_year	stubs/glibstub.c	/^guint g_date_monday_week_of_year(GDate \*date)$/;"	f
g_date_month	stubs/glibstub.c	/^GDateMonth g_date_month(GDate \*date)$/;"	f
g_date_new	stubs/glibstub.c	/^GDate\* g_date_new(void)$/;"	f
g_date_new_dmy	stubs/glibstub.c	/^GDate\* g_date_new_dmy(GDateDay day, GDateMonth month, GDateYear year)$/;"	f
g_date_new_julian	stubs/glibstub.c	/^GDate\* g_date_new_julian(guint32 julian_day)$/;"	f
g_date_sunday_week_of_year	stubs/glibstub.c	/^guint g_date_sunday_week_of_year(GDate \*date)$/;"	f
g_date_valid	stubs/glibstub.c	/^gboolean g_date_valid(GDate \*date)$/;"	f
g_date_valid_day	stubs/glibstub.c	/^gboolean g_date_valid_day(GDateDay day)$/;"	f
g_date_valid_dmy	stubs/glibstub.c	/^gboolean g_date_valid_dmy(GDateDay day, GDateMonth month, GDateYear year)$/;"	f
g_date_valid_julian	stubs/glibstub.c	/^gboolean g_date_valid_julian(guint32 julian_date)$/;"	f
g_date_valid_month	stubs/glibstub.c	/^gboolean g_date_valid_month(GDateMonth month)$/;"	f
g_date_valid_weekday	stubs/glibstub.c	/^gboolean g_date_valid_weekday(GDateWeekday weekday)$/;"	f
g_date_valid_year	stubs/glibstub.c	/^gboolean g_date_valid_year(GDateYear year)$/;"	f
g_date_weekday	stubs/glibstub.c	/^GDateWeekday g_date_weekday(GDate \*date)$/;"	f
g_date_year	stubs/glibstub.c	/^GDateYear g_date_year(GDate \*date)$/;"	f
g_direct_equal	stubs/glibstub.c	/^gint g_direct_equal(gconstpointer v, gconstpointer v2)$/;"	f
g_direct_hash	stubs/glibstub.c	/^guint g_direct_hash(gconstpointer v)$/;"	f
g_dirname	stubs/glibstub.c	/^gchar\* g_dirname(const gchar \*file_name)$/;"	f
g_error	stubs/glibstub.c	1377;"	d
g_free	stubs/glibstub.c	/^void g_free(gpointer mem)$/;"	f
g_get_current_dir	stubs/glibstub.c	/^gchar\* g_get_current_dir(void)$/;"	f
g_get_home_dir	stubs/glibstub.c	/^gchar\* g_get_home_dir(void)$/;"	f
g_get_prgname	stubs/glibstub.c	/^gchar\* g_get_prgname(void)$/;"	f
g_get_real_name	stubs/glibstub.c	/^gchar\* g_get_real_name(void)$/;"	f
g_get_tmp_dir	stubs/glibstub.c	/^gchar\* g_get_tmp_dir(void)$/;"	f
g_get_user_name	stubs/glibstub.c	/^gchar\* g_get_user_name(void)$/;"	f
g_getenv	stubs/glibstub.c	/^gchar\* g_getenv(const gchar \*variable)$/;"	f
g_hash_table_destroy	stubs/glibstub.c	/^void g_hash_table_destroy(GHashTable \*hash_table)$/;"	f
g_hash_table_foreach	stubs/glibstub.c	/^void g_hash_table_foreach(GHashTable \*hash_table, GHFunc func, gpointer user_data)$/;"	f
g_hash_table_foreach_remove	stubs/glibstub.c	/^guint g_hash_table_foreach_remove(GHashTable \*hash_table, GHRFunc func, gpointer user_data)$/;"	f
g_hash_table_freeze	stubs/glibstub.c	/^void g_hash_table_freeze(GHashTable \*hash_table)$/;"	f
g_hash_table_insert	stubs/glibstub.c	/^void g_hash_table_insert(GHashTable \*hash_table, gpointer key, gpointer value)$/;"	f
g_hash_table_lookup	stubs/glibstub.c	/^gpointer g_hash_table_lookup(GHashTable \*hash_table, gconstpointer key)$/;"	f
g_hash_table_lookup_extended	stubs/glibstub.c	/^gboolean g_hash_table_lookup_extended(GHashTable \*hash_table, gconstpointer lookup_key, gpointer \*orig_key, gpointer \*value)$/;"	f
g_hash_table_new	stubs/glibstub.c	/^GHashTable\* g_hash_table_new(GHashFunc hash_func, GCompareFunc key_compare_func)$/;"	f
g_hash_table_remove	stubs/glibstub.c	/^void g_hash_table_remove(GHashTable \*hash_table, gconstpointer key)$/;"	f
g_hash_table_size	stubs/glibstub.c	/^guint g_hash_table_size(GHashTable \*hash_table)$/;"	f
g_hash_table_thaw	stubs/glibstub.c	/^void g_hash_table_thaw(GHashTable \*hash_table)$/;"	f
g_hook_alloc	stubs/glibstub.c	/^GHook\* g_hook_alloc(GHookList \*hook_list)$/;"	f
g_hook_append	stubs/glibstub.c	1303;"	d
g_hook_compare_ids	stubs/glibstub.c	/^gint g_hook_compare_ids(GHook \*new_hook, GHook \*sibling)$/;"	f
g_hook_destroy	stubs/glibstub.c	/^gboolean g_hook_destroy(GHookList \*hook_list, guint hook_id)$/;"	f
g_hook_destroy_link	stubs/glibstub.c	/^void g_hook_destroy_link(GHookList \*hook_list, GHook \*hook)$/;"	f
g_hook_find	stubs/glibstub.c	/^GHook\* g_hook_find(GHookList \*hook_list, gboolean need_valids, GHookFindFunc func, gpointer data)$/;"	f
g_hook_find_data	stubs/glibstub.c	/^GHook\* g_hook_find_data(GHookList \*hook_list, gboolean need_valids, gpointer data)$/;"	f
g_hook_find_func	stubs/glibstub.c	/^GHook\* g_hook_find_func(GHookList \*hook_list, gboolean need_valids, gpointer func)$/;"	f
g_hook_find_func_data	stubs/glibstub.c	/^GHook\* g_hook_find_func_data(GHookList \*hook_list, gboolean need_valids, gpointer func, gpointer data)$/;"	f
g_hook_first_valid	stubs/glibstub.c	/^GHook\* g_hook_first_valid(GHookList \*hook_list, gboolean may_be_in_call)$/;"	f
g_hook_free	stubs/glibstub.c	/^void g_hook_free(GHookList \*hook_list, GHook \*hook)$/;"	f
g_hook_get	stubs/glibstub.c	/^GHook\* g_hook_get(GHookList \*hook_list, guint hook_id)$/;"	f
g_hook_insert_before	stubs/glibstub.c	/^void g_hook_insert_before(GHookList \*hook_list, GHook \*sibling, GHook \*hook)$/;"	f
g_hook_insert_sorted	stubs/glibstub.c	/^void g_hook_insert_sorted(GHookList \*hook_list, GHook \*hook, GHookCompareFunc func)$/;"	f
g_hook_list_clear	stubs/glibstub.c	/^void g_hook_list_clear(GHookList \*hook_list)$/;"	f
g_hook_list_init	stubs/glibstub.c	/^void g_hook_list_init(GHookList \*hook_list, guint hook_size)$/;"	f
g_hook_list_invoke	stubs/glibstub.c	/^void g_hook_list_invoke(GHookList \*hook_list, gboolean may_recurse)$/;"	f
g_hook_list_invoke_check	stubs/glibstub.c	/^void g_hook_list_invoke_check(GHookList \*hook_list, gboolean may_recurse)$/;"	f
g_hook_list_marshal	stubs/glibstub.c	/^void g_hook_list_marshal(GHookList \*hook_list, gboolean may_recurse, GHookMarshaller marshaller, gpointer data)$/;"	f
g_hook_list_marshal_check	stubs/glibstub.c	/^void g_hook_list_marshal_check(GHookList \*hook_list, gboolean may_recurse, GHookCheckMarshaller marshaller, gpointer data)$/;"	f
g_hook_next_valid	stubs/glibstub.c	/^GHook\* g_hook_next_valid(GHookList \*hook_list, GHook \*hook, gboolean may_be_in_call)$/;"	f
g_hook_prepend	stubs/glibstub.c	/^void g_hook_prepend(GHookList \*hook_list, GHook \*hook)$/;"	f
g_hook_ref	stubs/glibstub.c	/^void g_hook_ref(GHookList \*hook_list, GHook \*hook)$/;"	f
g_hook_unref	stubs/glibstub.c	/^void g_hook_unref(GHookList \*hook_list, GHook \*hook)$/;"	f
g_htonl	stubs/glibstub.c	405;"	d
g_htons	stubs/glibstub.c	406;"	d
g_int_equal	stubs/glibstub.c	/^gint g_int_equal(gconstpointer v, gconstpointer v2)$/;"	f
g_int_hash	stubs/glibstub.c	/^guint g_int_hash(gconstpointer v)$/;"	f
g_list_alloc	stubs/glibstub.c	/^GList\* g_list_alloc(void)$/;"	f
g_list_append	stubs/glibstub.c	/^GList\* g_list_append(GList \*list, gpointer data)$/;"	f
g_list_concat	stubs/glibstub.c	/^GList\* g_list_concat(GList \*list1, GList \*list2)$/;"	f
g_list_copy	stubs/glibstub.c	/^GList\* g_list_copy(GList \*list)$/;"	f
g_list_find	stubs/glibstub.c	/^GList\* g_list_find(GList \*list, gpointer data)$/;"	f
g_list_find_custom	stubs/glibstub.c	/^GList\* g_list_find_custom(GList \*list, gpointer data, GCompareFunc func)$/;"	f
g_list_first	stubs/glibstub.c	/^GList\* g_list_first(GList \*list)$/;"	f
g_list_foreach	stubs/glibstub.c	/^void g_list_foreach(GList \*list, GFunc func, gpointer user_data)$/;"	f
g_list_free	stubs/glibstub.c	/^void g_list_free(GList \*list)$/;"	f
g_list_free_1	stubs/glibstub.c	/^void g_list_free_1(GList \*list)$/;"	f
g_list_index	stubs/glibstub.c	/^gint g_list_index(GList \*list, gpointer data)$/;"	f
g_list_insert	stubs/glibstub.c	/^GList\* g_list_insert(GList \*list, gpointer data, gint position)$/;"	f
g_list_insert_sorted	stubs/glibstub.c	/^GList\* g_list_insert_sorted(GList \*list, gpointer data, GCompareFunc func)$/;"	f
g_list_last	stubs/glibstub.c	/^GList\* g_list_last(GList \*list)$/;"	f
g_list_length	stubs/glibstub.c	/^guint g_list_length(GList \*list)$/;"	f
g_list_next	stubs/glibstub.c	734;"	d
g_list_nth	stubs/glibstub.c	/^GList\* g_list_nth(GList \*list, guint n)$/;"	f
g_list_nth_data	stubs/glibstub.c	/^gpointer g_list_nth_data(GList \*list, guint n)$/;"	f
g_list_pop_allocator	stubs/glibstub.c	/^void g_list_pop_allocator(void)$/;"	f
g_list_position	stubs/glibstub.c	/^gint g_list_position(GList \*list, GList \*llink)$/;"	f
g_list_prepend	stubs/glibstub.c	/^GList\* g_list_prepend(GList \*list, gpointer data)$/;"	f
g_list_previous	stubs/glibstub.c	731;"	d
g_list_push_allocator	stubs/glibstub.c	/^void g_list_push_allocator(GAllocator \*allocator)$/;"	f
g_list_remove	stubs/glibstub.c	/^GList\* g_list_remove(GList \*list, gpointer data)$/;"	f
g_list_remove_link	stubs/glibstub.c	/^GList\* g_list_remove_link(GList \*list, GList \*llink)$/;"	f
g_list_reverse	stubs/glibstub.c	/^GList\* g_list_reverse(GList \*list)$/;"	f
g_list_sort	stubs/glibstub.c	/^GList\* g_list_sort(GList \*list, GCompareFunc compare_func)$/;"	f
g_log	stubs/glibstub.c	/^void g_log(const gchar \*log_domain, GLogLevelFlags log_level, const gchar \*format, \.\.\.)$/;"	f
g_log_default_handler	stubs/glibstub.c	/^void g_log_default_handler(const gchar \*log_domain, GLogLevelFlags log_level, const gchar \*message, gpointer unused_data)$/;"	f
g_log_remove_handler	stubs/glibstub.c	/^void g_log_remove_handler(const gchar \*log_domain, guint handler_id)$/;"	f
g_log_set_always_fatal	stubs/glibstub.c	/^GLogLevelFlags g_log_set_always_fatal(GLogLevelFlags fatal_mask)$/;"	f
g_log_set_fatal_mask	stubs/glibstub.c	/^GLogLevelFlags g_log_set_fatal_mask(const gchar \*log_domain, GLogLevelFlags fatal_mask)$/;"	f
g_log_set_handler	stubs/glibstub.c	/^guint g_log_set_handler(const gchar \*log_domain, GLogLevelFlags log_levels, GLogFunc log_func, gpointer user_data)$/;"	f
g_logv	stubs/glibstub.c	/^void g_logv(const gchar \*log_domain, GLogLevelFlags log_level, const gchar \*format, va_list args)$/;"	f
g_malloc	stubs/glibstub.c	/^gpointer g_malloc(gulong size)$/;"	f
g_malloc0	stubs/glibstub.c	/^gpointer g_malloc0(gulong size)$/;"	f
g_mem_check	stubs/glibstub.c	/^void g_mem_check(gpointer mem)$/;"	f
g_mem_chunk_alloc	stubs/glibstub.c	/^gpointer g_mem_chunk_alloc(GMemChunk \*mem_chunk)$/;"	f
g_mem_chunk_alloc0	stubs/glibstub.c	/^gpointer g_mem_chunk_alloc0(GMemChunk \*mem_chunk)$/;"	f
g_mem_chunk_clean	stubs/glibstub.c	/^void g_mem_chunk_clean(GMemChunk \*mem_chunk)$/;"	f
g_mem_chunk_create	stubs/glibstub.c	171;"	d
g_mem_chunk_destroy	stubs/glibstub.c	/^void g_mem_chunk_destroy(GMemChunk \*mem_chunk)$/;"	f
g_mem_chunk_free	stubs/glibstub.c	/^void g_mem_chunk_free(GMemChunk \*mem_chunk, gpointer mem)$/;"	f
g_mem_chunk_info	stubs/glibstub.c	/^void g_mem_chunk_info(void)$/;"	f
g_mem_chunk_new	stubs/glibstub.c	/^GMemChunk\* g_mem_chunk_new(gchar \*name, gint atom_size, gulong area_size, gint type)$/;"	f
g_mem_chunk_print	stubs/glibstub.c	/^void g_mem_chunk_print(GMemChunk \*mem_chunk)$/;"	f
g_mem_chunk_reset	stubs/glibstub.c	/^void g_mem_chunk_reset(GMemChunk \*mem_chunk)$/;"	f
g_mem_profile	stubs/glibstub.c	/^void g_mem_profile(void)$/;"	f
g_memdup	stubs/glibstub.c	/^gpointer g_memdup(gconstpointer mem, guint byte_size)$/;"	f
g_memmove	stubs/glibstub.c	101;"	d
g_message	stubs/glibstub.c	1380;"	d
g_mutex_free	stubs/glibstub.c	3135;"	d
g_mutex_lock	stubs/glibstub.c	3126;"	d
g_mutex_new	stubs/glibstub.c	3123;"	d
g_mutex_trylock	stubs/glibstub.c	3129;"	d
g_mutex_unlock	stubs/glibstub.c	3132;"	d
g_new	stubs/glibstub.c	162;"	d
g_new0	stubs/glibstub.c	165;"	d
g_node_append	stubs/glibstub.c	1072;"	d
g_node_append_data	stubs/glibstub.c	1084;"	d
g_node_child_index	stubs/glibstub.c	/^gint g_node_child_index(GNode \*node, gpointer data)$/;"	f
g_node_child_position	stubs/glibstub.c	/^gint g_node_child_position(GNode \*node, GNode \*child)$/;"	f
g_node_children_foreach	stubs/glibstub.c	/^void g_node_children_foreach(GNode \*node, GTraverseFlags flags, GNodeForeachFunc func, gpointer data)$/;"	f
g_node_depth	stubs/glibstub.c	/^guint g_node_depth(GNode \*node)$/;"	f
g_node_destroy	stubs/glibstub.c	/^void g_node_destroy(GNode \*root)$/;"	f
g_node_find	stubs/glibstub.c	/^GNode\* g_node_find(GNode \*root, GTraverseType order, GTraverseFlags flags, gpointer data)$/;"	f
g_node_find_child	stubs/glibstub.c	/^GNode\* g_node_find_child(GNode \*node, GTraverseFlags flags, gpointer data)$/;"	f
g_node_first_child	stubs/glibstub.c	1153;"	d
g_node_first_sibling	stubs/glibstub.c	/^GNode\* g_node_first_sibling(GNode \*node)$/;"	f
g_node_get_root	stubs/glibstub.c	/^GNode\* g_node_get_root(GNode \*node)$/;"	f
g_node_insert	stubs/glibstub.c	/^GNode\* g_node_insert(GNode \*parent, gint position, GNode \*node)$/;"	f
g_node_insert_before	stubs/glibstub.c	/^GNode\* g_node_insert_before(GNode \*parent, GNode \*sibling, GNode \*node)$/;"	f
g_node_insert_data	stubs/glibstub.c	1075;"	d
g_node_insert_data_before	stubs/glibstub.c	1078;"	d
g_node_is_ancestor	stubs/glibstub.c	/^gboolean g_node_is_ancestor(GNode \*node, GNode \*descendant)$/;"	f
g_node_last_child	stubs/glibstub.c	/^GNode\* g_node_last_child(GNode \*node)$/;"	f
g_node_last_sibling	stubs/glibstub.c	/^GNode\* g_node_last_sibling(GNode \*node)$/;"	f
g_node_max_height	stubs/glibstub.c	/^guint g_node_max_height(GNode \*root)$/;"	f
g_node_n_children	stubs/glibstub.c	/^guint g_node_n_children(GNode \*node)$/;"	f
g_node_n_nodes	stubs/glibstub.c	/^guint g_node_n_nodes(GNode \*root, GTraverseFlags flags)$/;"	f
g_node_new	stubs/glibstub.c	/^GNode\* g_node_new(gpointer data)$/;"	f
g_node_next_sibling	stubs/glibstub.c	1150;"	d
g_node_nth_child	stubs/glibstub.c	/^GNode\* g_node_nth_child(GNode \*node, guint n)$/;"	f
g_node_pop_allocator	stubs/glibstub.c	/^void g_node_pop_allocator(void)$/;"	f
g_node_prepend	stubs/glibstub.c	/^GNode\* g_node_prepend(GNode \*parent, GNode \*node)$/;"	f
g_node_prepend_data	stubs/glibstub.c	1081;"	d
g_node_prev_sibling	stubs/glibstub.c	1147;"	d
g_node_push_allocator	stubs/glibstub.c	/^void g_node_push_allocator(GAllocator \*allocator)$/;"	f
g_node_reverse_children	stubs/glibstub.c	/^void g_node_reverse_children(GNode \*node)$/;"	f
g_node_traverse	stubs/glibstub.c	/^void g_node_traverse(GNode \*root, GTraverseType order, GTraverseFlags flags, gint max_depth, GNodeTraverseFunc func, gpointer data)$/;"	f
g_node_unlink	stubs/glibstub.c	/^void g_node_unlink(GNode \*node)$/;"	f
g_ntohl	stubs/glibstub.c	403;"	d
g_ntohs	stubs/glibstub.c	404;"	d
g_on_error_query	stubs/glibstub.c	/^void g_on_error_query(const gchar \*prg_name)$/;"	f
g_on_error_stack_trace	stubs/glibstub.c	/^void g_on_error_stack_trace(const gchar \*prg_name)$/;"	f
g_parse_debug_string	stubs/glibstub.c	/^guint g_parse_debug_string(const gchar \*string, GDebugKey \*keys, guint nkeys)$/;"	f
g_path_is_absolute	stubs/glibstub.c	/^gboolean g_path_is_absolute(const gchar \*file_name)$/;"	f
g_path_skip_root	stubs/glibstub.c	/^gchar\* g_path_skip_root(gchar \*file_name)$/;"	f
g_print	stubs/glibstub.c	/^void g_print(const gchar \*format, \.\.\.)$/;"	f
g_printerr	stubs/glibstub.c	/^void g_printerr(const gchar \*format, \.\.\.)$/;"	f
g_printf_string_upper_bound	stubs/glibstub.c	/^guint g_printf_string_upper_bound(const gchar\* format, va_list args)$/;"	f
g_private_get	stubs/glibstub.c	3159;"	d
g_private_new	stubs/glibstub.c	3156;"	d
g_private_set	stubs/glibstub.c	3162;"	d
g_ptr_array_add	stubs/glibstub.c	/^void g_ptr_array_add(GPtrArray \*array, gpointer data)$/;"	f
g_ptr_array_free	stubs/glibstub.c	/^void g_ptr_array_free(GPtrArray \*array, gboolean free_seg)$/;"	f
g_ptr_array_index	stubs/glibstub.c	1918;"	d
g_ptr_array_new	stubs/glibstub.c	/^GPtrArray\* g_ptr_array_new(void)$/;"	f
g_ptr_array_remove	stubs/glibstub.c	/^gboolean g_ptr_array_remove(GPtrArray \*array, gpointer data)$/;"	f
g_ptr_array_remove_fast	stubs/glibstub.c	/^gboolean g_ptr_array_remove_fast(GPtrArray \*array, gpointer data)$/;"	f
g_ptr_array_remove_index	stubs/glibstub.c	/^gpointer g_ptr_array_remove_index(GPtrArray \*array, guint index)$/;"	f
g_ptr_array_remove_index_fast	stubs/glibstub.c	/^gpointer g_ptr_array_remove_index_fast(GPtrArray \*array, guint index)$/;"	f
g_ptr_array_set_size	stubs/glibstub.c	/^void g_ptr_array_set_size(GPtrArray \*array, gint length)$/;"	f
g_quark_from_static_string	stubs/glibstub.c	/^GQuark g_quark_from_static_string(const gchar \*string)$/;"	f
g_quark_from_string	stubs/glibstub.c	/^GQuark g_quark_from_string(const gchar \*string)$/;"	f
g_quark_to_string	stubs/glibstub.c	/^gchar\* g_quark_to_string(GQuark quark)$/;"	f
g_quark_try_string	stubs/glibstub.c	/^GQuark g_quark_try_string(const gchar \*string)$/;"	f
g_realloc	stubs/glibstub.c	/^gpointer g_realloc(gpointer mem, gulong size)$/;"	f
g_renew	stubs/glibstub.c	168;"	d
g_return_if_fail	stubs/glibstub.c	195;"	d
g_return_val_if_fail	stubs/glibstub.c	196;"	d
g_scanner_cur_line	stubs/glibstub.c	/^guint g_scanner_cur_line(GScanner \*scanner)$/;"	f
g_scanner_cur_position	stubs/glibstub.c	/^guint g_scanner_cur_position(GScanner \*scanner)$/;"	f
g_scanner_cur_token	stubs/glibstub.c	/^GTokenType g_scanner_cur_token(GScanner \*scanner)$/;"	f
g_scanner_cur_value	stubs/glibstub.c	/^GTokenValue g_scanner_cur_value(GScanner \*scanner)$/;"	f
g_scanner_destroy	stubs/glibstub.c	/^void g_scanner_destroy(GScanner \*scanner)$/;"	f
g_scanner_eof	stubs/glibstub.c	/^gboolean g_scanner_eof(GScanner \*scanner)$/;"	f
g_scanner_error	stubs/glibstub.c	/^void g_scanner_error(GScanner \*scanner, const gchar \*format, \.\.\.)$/;"	f
g_scanner_freeze_symbol_table	stubs/glibstub.c	/^void g_scanner_freeze_symbol_table(GScanner \*scanner)$/;"	f
g_scanner_get_next_token	stubs/glibstub.c	/^GTokenType g_scanner_get_next_token(GScanner \*scanner)$/;"	f
g_scanner_input_file	stubs/glibstub.c	/^void g_scanner_input_file(GScanner \*scanner, gint input_fd)$/;"	f
g_scanner_input_text	stubs/glibstub.c	/^void g_scanner_input_text(GScanner \*scanner, const gchar \*text, guint text_len)$/;"	f
g_scanner_lookup_symbol	stubs/glibstub.c	/^gpointer g_scanner_lookup_symbol(GScanner \*scanner, const gchar \*symbol)$/;"	f
g_scanner_new	stubs/glibstub.c	/^GScanner\* g_scanner_new(GScannerConfig \*config_templ)$/;"	f
g_scanner_peek_next_token	stubs/glibstub.c	/^GTokenType g_scanner_peek_next_token(GScanner \*scanner)$/;"	f
g_scanner_scope_add_symbol	stubs/glibstub.c	/^void g_scanner_scope_add_symbol(GScanner \*scanner, guint scope_id, const gchar \*symbol, gpointer value)$/;"	f
g_scanner_scope_foreach_symbol	stubs/glibstub.c	/^void g_scanner_scope_foreach_symbol(GScanner \*scanner, guint scope_id, GHFunc func, gpointer user_data)$/;"	f
g_scanner_scope_lookup_symbol	stubs/glibstub.c	/^gpointer g_scanner_scope_lookup_symbol(GScanner \*scanner, guint scope_id, const gchar \*symbol)$/;"	f
g_scanner_scope_remove_symbol	stubs/glibstub.c	/^void g_scanner_scope_remove_symbol(GScanner \*scanner, guint scope_id, const gchar \*symbol)$/;"	f
g_scanner_set_scope	stubs/glibstub.c	/^guint g_scanner_set_scope(GScanner \*scanner, guint scope_id)$/;"	f
g_scanner_stat_mode	stubs/glibstub.c	/^gint g_scanner_stat_mode(const gchar \*filename)$/;"	f
g_scanner_sync_file_offset	stubs/glibstub.c	/^void g_scanner_sync_file_offset(GScanner \*scanner)$/;"	f
g_scanner_thaw_symbol_table	stubs/glibstub.c	/^void g_scanner_thaw_symbol_table(GScanner \*scanner)$/;"	f
g_scanner_unexp_token	stubs/glibstub.c	/^void g_scanner_unexp_token(GScanner \*scanner, GTokenType expected_token, const gchar \*identifier_spec, const gchar \*symbol_spec, const gchar \*symbol_name, c/;"	f
g_scanner_warn	stubs/glibstub.c	/^void g_scanner_warn(GScanner \*scanner, const gchar \*format, \.\.\.)$/;"	f
g_set_prgname	stubs/glibstub.c	/^void g_set_prgname(const gchar \*prgname)$/;"	f
g_set_print_handler	stubs/glibstub.c	/^GPrintFunc g_set_print_handler(GPrintFunc func)$/;"	f
g_set_printerr_handler	stubs/glibstub.c	/^GPrintFunc g_set_printerr_handler(GPrintFunc func)$/;"	f
g_slist_alloc	stubs/glibstub.c	/^GSList\* g_slist_alloc(void)$/;"	f
g_slist_append	stubs/glibstub.c	/^GSList\* g_slist_append(GSList \*list, gpointer data)$/;"	f
g_slist_concat	stubs/glibstub.c	/^GSList\* g_slist_concat(GSList \*list1, GSList \*list2)$/;"	f
g_slist_copy	stubs/glibstub.c	/^GSList\* g_slist_copy(GSList \*list)$/;"	f
g_slist_find	stubs/glibstub.c	/^GSList\* g_slist_find(GSList \*list, gpointer data)$/;"	f
g_slist_find_custom	stubs/glibstub.c	/^GSList\* g_slist_find_custom(GSList \*list, gpointer data, GCompareFunc func)$/;"	f
g_slist_foreach	stubs/glibstub.c	/^void g_slist_foreach(GSList \*list, GFunc func, gpointer user_data)$/;"	f
g_slist_free	stubs/glibstub.c	/^void g_slist_free(GSList \*list)$/;"	f
g_slist_free_1	stubs/glibstub.c	/^void g_slist_free_1(GSList \*list)$/;"	f
g_slist_index	stubs/glibstub.c	/^gint g_slist_index(GSList \*list, gpointer data)$/;"	f
g_slist_insert	stubs/glibstub.c	/^GSList\* g_slist_insert(GSList \*list, gpointer data, gint position)$/;"	f
g_slist_insert_sorted	stubs/glibstub.c	/^GSList\* g_slist_insert_sorted(GSList \*list, gpointer data, GCompareFunc func)$/;"	f
g_slist_last	stubs/glibstub.c	/^GSList\* g_slist_last(GSList \*list)$/;"	f
g_slist_length	stubs/glibstub.c	/^guint g_slist_length(GSList \*list)$/;"	f
g_slist_next	stubs/glibstub.c	857;"	d
g_slist_nth	stubs/glibstub.c	/^GSList\* g_slist_nth(GSList \*list, guint n)$/;"	f
g_slist_nth_data	stubs/glibstub.c	/^gpointer g_slist_nth_data(GSList \*list, guint n)$/;"	f
g_slist_pop_allocator	stubs/glibstub.c	/^void g_slist_pop_allocator(void)$/;"	f
g_slist_position	stubs/glibstub.c	/^gint g_slist_position(GSList \*list, GSList \*llink)$/;"	f
g_slist_prepend	stubs/glibstub.c	/^GSList\* g_slist_prepend(GSList \*list, gpointer data)$/;"	f
g_slist_push_allocator	stubs/glibstub.c	/^void g_slist_push_allocator(GAllocator \*allocator)$/;"	f
g_slist_remove	stubs/glibstub.c	/^GSList\* g_slist_remove(GSList \*list, gpointer data)$/;"	f
g_slist_remove_link	stubs/glibstub.c	/^GSList\* g_slist_remove_link(GSList \*list, GSList \*llink)$/;"	f
g_slist_reverse	stubs/glibstub.c	/^GSList\* g_slist_reverse(GSList \*list)$/;"	f
g_slist_sort	stubs/glibstub.c	/^GSList\* g_slist_sort(GSList \*list, GCompareFunc compare_func)$/;"	f
g_snprintf	stubs/glibstub.c	/^gint g_snprintf(gchar \*string, gulong n, gchar const \*format, \.\.\.)$/;"	f
g_static_mutex_lock	stubs/glibstub.c	3165;"	d
g_static_mutex_trylock	stubs/glibstub.c	3168;"	d
g_static_mutex_unlock	stubs/glibstub.c	3171;"	d
g_str_equal	stubs/glibstub.c	/^gint g_str_equal(gconstpointer v, gconstpointer v2)$/;"	f
g_str_hash	stubs/glibstub.c	/^guint g_str_hash(gconstpointer v)$/;"	f
g_strcasecmp	stubs/glibstub.c	/^gint g_strcasecmp(const gchar \*s1, const gchar \*s2)$/;"	f
g_strchomp	stubs/glibstub.c	/^gchar\* g_strchomp(gchar \*string)$/;"	f
g_strchug	stubs/glibstub.c	/^gchar\* g_strchug(gchar \*string)$/;"	f
g_strdelimit	stubs/glibstub.c	/^gchar\* g_strdelimit(gchar \*string, const gchar \*delimiters, gchar new_delimiter)$/;"	f
g_strdown	stubs/glibstub.c	/^void g_strdown(gchar \*string)$/;"	f
g_strdup	stubs/glibstub.c	/^gchar\* g_strdup(const gchar \*str)$/;"	f
g_strdup_printf	stubs/glibstub.c	/^gchar\* g_strdup_printf (const gchar \*format, \.\.\.) G_GNUC_PRINTF(1, 2)$/;"	f
g_strdup_vprintf	stubs/glibstub.c	/^gchar\* g_strdup_vprintf(const gchar \*format, va_list args)$/;"	f
g_strerror	stubs/glibstub.c	/^gchar\* g_strerror(gint errnum)$/;"	f
g_strescape	stubs/glibstub.c	/^gchar\* g_strescape(gchar \*string)$/;"	f
g_strfreev	stubs/glibstub.c	/^void g_strfreev(gchar \*\*str_array)$/;"	f
g_string	stubs/glibstub.c	183;"	d
g_string_append	stubs/glibstub.c	/^GString\* g_string_append(GString \*string, const gchar \*val)$/;"	f
g_string_append_c	stubs/glibstub.c	/^GString\* g_string_append_c(GString \*string, gchar c)$/;"	f
g_string_assign	stubs/glibstub.c	/^GString\* g_string_assign(GString \*lval, const gchar \*rval)$/;"	f
g_string_chunk_free	stubs/glibstub.c	/^void g_string_chunk_free(GStringChunk \*chunk)$/;"	f
g_string_chunk_insert	stubs/glibstub.c	/^gchar\* g_string_chunk_insert(GStringChunk \*chunk, const gchar \*string)$/;"	f
g_string_chunk_insert_const	stubs/glibstub.c	/^gchar\* g_string_chunk_insert_const(GStringChunk \*chunk, const gchar \*string)$/;"	f
g_string_chunk_new	stubs/glibstub.c	/^GStringChunk\* g_string_chunk_new(gint size)$/;"	f
g_string_down	stubs/glibstub.c	/^GString\* g_string_down(GString \*string)$/;"	f
g_string_erase	stubs/glibstub.c	/^GString\* g_string_erase(GString \*string, gint pos, gint len)$/;"	f
g_string_free	stubs/glibstub.c	/^void g_string_free(GString \*string, gint free_segment)$/;"	f
g_string_insert	stubs/glibstub.c	/^GString\* g_string_insert(GString \*string, gint pos, const gchar \*val)$/;"	f
g_string_insert_c	stubs/glibstub.c	/^GString\* g_string_insert_c(GString \*string, gint pos, gchar c)$/;"	f
g_string_new	stubs/glibstub.c	/^GString\* g_string_new(const gchar \*init)$/;"	f
g_string_prepend	stubs/glibstub.c	/^GString\* g_string_prepend(GString \*string, const gchar \*val)$/;"	f
g_string_prepend_c	stubs/glibstub.c	/^GString\* g_string_prepend_c(GString \*string, gchar c)$/;"	f
g_string_sized_new	stubs/glibstub.c	/^GString\* g_string_sized_new(guint dfl_size)$/;"	f
g_string_sprintf	stubs/glibstub.c	/^void g_string_sprintf(GString \*string, const gchar \*format, \.\.\.)$/;"	f
g_string_sprintfa	stubs/glibstub.c	/^void g_string_sprintfa(GString \*string, const gchar \*format, \.\.\.)$/;"	f
g_string_truncate	stubs/glibstub.c	/^GString\* g_string_truncate(GString \*string, gint len)$/;"	f
g_string_up	stubs/glibstub.c	/^GString\* g_string_up(GString \*string)$/;"	f
g_strjoinv	stubs/glibstub.c	/^gchar\* g_strjoinv(const gchar \*separator, gchar \*\*str_array)$/;"	f
g_strncasecmp	stubs/glibstub.c	/^gint g_strncasecmp(const gchar \*s1, const gchar \*s2, guint n)$/;"	f
g_strndup	stubs/glibstub.c	/^gchar\* g_strndup(const gchar \*str, guint n)$/;"	f
g_strnfill	stubs/glibstub.c	/^gchar\* g_strnfill(guint length, gchar fill_char)$/;"	f
g_strreverse	stubs/glibstub.c	/^void g_strreverse(gchar \*string)$/;"	f
g_strsignal	stubs/glibstub.c	/^gchar\* g_strsignal(gint signum)$/;"	f
g_strsplit	stubs/glibstub.c	/^gchar\*\* g_strsplit(const gchar \*string, const gchar \*delimiter, gint max_tokens)$/;"	f
g_strstrip	stubs/glibstub.c	1607;"	d
g_strtod	stubs/glibstub.c	/^gdouble g_strtod(const gchar \*nptr, gchar \*\*endptr)$/;"	f
g_strup	stubs/glibstub.c	/^void g_strup(gchar \*string)$/;"	f
g_thread_supported	stubs/glibstub.c	3120;"	d
g_timer_destroy	stubs/glibstub.c	/^void g_timer_destroy(GTimer \*timer)$/;"	f
g_timer_elapsed	stubs/glibstub.c	/^gdouble g_timer_elapsed(GTimer \*timer, gulong \*microseconds)$/;"	f
g_timer_new	stubs/glibstub.c	/^GTimer\* g_timer_new(void)$/;"	f
g_timer_reset	stubs/glibstub.c	/^void g_timer_reset(GTimer \*timer)$/;"	f
g_timer_start	stubs/glibstub.c	/^void g_timer_start(GTimer \*timer)$/;"	f
g_timer_stop	stubs/glibstub.c	/^void g_timer_stop(GTimer \*timer)$/;"	f
g_tree_destroy	stubs/glibstub.c	/^void g_tree_destroy(GTree \*tree)$/;"	f
g_tree_height	stubs/glibstub.c	/^gint g_tree_height(GTree \*tree)$/;"	f
g_tree_insert	stubs/glibstub.c	/^void g_tree_insert(GTree \*tree, gpointer key, gpointer value)$/;"	f
g_tree_lookup	stubs/glibstub.c	/^gpointer g_tree_lookup(GTree \*tree, gpointer key)$/;"	f
g_tree_new	stubs/glibstub.c	/^GTree\* g_tree_new(GCompareFunc key_compare_func)$/;"	f
g_tree_nnodes	stubs/glibstub.c	/^gint g_tree_nnodes(GTree \*tree)$/;"	f
g_tree_remove	stubs/glibstub.c	/^void g_tree_remove(GTree \*tree, gpointer key)$/;"	f
g_tree_search	stubs/glibstub.c	/^gpointer g_tree_search(GTree \*tree, GSearchFunc search_func, gpointer data)$/;"	f
g_tree_traverse	stubs/glibstub.c	/^void g_tree_traverse(GTree \*tree, GTraverseFunc traverse_func, GTraverseType traverse_type, gpointer data)$/;"	f
g_vsnprintf	stubs/glibstub.c	/^gint g_vsnprintf(gchar \*string, gulong n, gchar const \*format, va_list args)$/;"	f
g_warning	stubs/glibstub.c	1386;"	d
gamma	stubs/gtkstub.c	5118;"	struct:GtkGammaCurve
gamma	stubs/gtkstub.c	8723;"	struct:GtkPreviewInfo
gamma_dialog	stubs/gtkstub.c	5118;"	struct:GtkGammaCurve
gamma_text	stubs/gtkstub.c	5118;"	struct:GtkGammaCurve
gboolean	stubs/glibstub.c	/^typedef gint   gboolean;$/;"	t
gboolean	stubs/gtkstub.c	13791;"	struct:GtkWidgetClass
gboolean	stubs/gtkstub.c	13791;"	struct:GtkWidgetClass
gc	stubs/gtkstub.c	1158;"	struct:GtkCalendar
gc	stubs/gtkstub.c	11279;"	struct:GtkText
gc	stubs/gtkstub.c	11828;"	struct:GtkTooltips
gc	stubs/xlibstub.c	1057;"	union:XEDataObject
gchar	stubs/glibstub.c	/^typedef char   gchar;$/;"	t
gchar	stubs/gtkstub.c	2663;"	struct:GtkContainerClass
gchar	stubs/gtkstub.c	3861;"	struct:GtkEditableClass
gconstpointer	stubs/glibstub.c	/^typedef const void \*gconstpointer;$/;"	t
gdk_add_client_message_filter	stubs/gdkstub.c	/^void gdk_add_client_message_filter(GdkAtom message_type, GdkFilterFunc func, gpointer data)$/;"	f
gdk_atom_intern	stubs/gdkstub.c	/^GdkAtom gdk_atom_intern(const gchar \*atom_name, gint only_if_exists)$/;"	f
gdk_atom_name	stubs/gdkstub.c	/^gchar\* gdk_atom_name(GdkAtom atom)$/;"	f
gdk_beep	stubs/gdkstub.c	/^void gdk_beep(void)$/;"	f
gdk_bitmap_create_from_data	stubs/gdkstub.c	/^GdkBitmap\* gdk_bitmap_create_from_data(GdkWindow \*window, const gchar \*data, gint width, gint height)$/;"	f
gdk_bitmap_ref	stubs/gdkstub.c	/^GdkBitmap \*gdk_bitmap_ref(GdkBitmap \*pixmap)$/;"	f
gdk_bitmap_unref	stubs/gdkstub.c	/^void gdk_bitmap_unref(GdkBitmap \*pixmap)$/;"	f
gdk_char_height	stubs/gdkstub.c	/^gint gdk_char_height(GdkFont \*font, gchar character)$/;"	f
gdk_char_measure	stubs/gdkstub.c	/^gint gdk_char_measure(GdkFont \*font, gchar character)$/;"	f
gdk_char_width	stubs/gdkstub.c	/^gint gdk_char_width(GdkFont \*font, gchar character)$/;"	f
gdk_char_width_wc	stubs/gdkstub.c	/^gint gdk_char_width_wc(GdkFont \*font, GdkWChar character)$/;"	f
gdk_color_alloc	stubs/gdkstub.c	/^gboolean gdk_color_alloc(GdkColormap \*colormap, GdkColor \*color)$/;"	f
gdk_color_black	stubs/gdkstub.c	/^gboolean gdk_color_black(GdkColormap \*colormap, GdkColor \*color)$/;"	f
gdk_color_change	stubs/gdkstub.c	/^gboolean gdk_color_change(GdkColormap \*colormap, GdkColor \*color)$/;"	f
gdk_color_context_add_palette	stubs/gdkstub.c	/^gint gdk_color_context_add_palette(GdkColorContext \*cc, GdkColor \*palette, gint num_palette)$/;"	f
gdk_color_context_free	stubs/gdkstub.c	/^void gdk_color_context_free(GdkColorContext \*cc)$/;"	f
gdk_color_context_free_dither	stubs/gdkstub.c	/^void gdk_color_context_free_dither(GdkColorContext \*cc)$/;"	f
gdk_color_context_get_index_from_palette	stubs/gdkstub.c	/^guchar gdk_color_context_get_index_from_palette(GdkColorContext \*cc, gint \*red, gint \*green, gint \*blue, gint \*failed)$/;"	f
gdk_color_context_get_pixel	stubs/gdkstub.c	/^gulong gdk_color_context_get_pixel(GdkColorContext \*cc, gushort red, gushort green, gushort blue, gint \*failed)$/;"	f
gdk_color_context_get_pixel_from_palette	stubs/gdkstub.c	/^gulong gdk_color_context_get_pixel_from_palette(GdkColorContext \*cc, gushort \*red, gushort \*green, gushort \*blue, gint \*failed)$/;"	f
gdk_color_context_get_pixels	stubs/gdkstub.c	/^void gdk_color_context_get_pixels(GdkColorContext \*cc, gushort \*reds, gushort \*greens, gushort \*blues, gint ncolors, gulong \*colors, gint \*nallocated)$/;"	f
gdk_color_context_get_pixels_incremental	stubs/gdkstub.c	/^void gdk_color_context_get_pixels_incremental(GdkColorContext \*cc, gushort \*reds, gushort \*greens, gushort \*blues, gint ncolors, gint \*used, gulong \*color/;"	f
gdk_color_context_init_dither	stubs/gdkstub.c	/^void gdk_color_context_init_dither(GdkColorContext \*cc)$/;"	f
gdk_color_context_new	stubs/gdkstub.c	/^GdkColorContext \*gdk_color_context_new(GdkVisual \*visual, GdkColormap \*colormap)$/;"	f
gdk_color_context_new_mono	stubs/gdkstub.c	/^GdkColorContext \*gdk_color_context_new_mono(GdkVisual \*visual, GdkColormap \*colormap)$/;"	f
gdk_color_context_query_color	stubs/gdkstub.c	/^gint gdk_color_context_query_color(GdkColorContext \*cc, GdkColor \*color)$/;"	f
gdk_color_context_query_colors	stubs/gdkstub.c	/^gint gdk_color_context_query_colors(GdkColorContext \*cc, GdkColor \*colors, gint num_colors)$/;"	f
gdk_color_copy	stubs/gdkstub.c	/^GdkColor\* gdk_color_copy(const GdkColor \*color)$/;"	f
gdk_color_equal	stubs/gdkstub.c	/^gboolean gdk_color_equal(const GdkColor \*colora, const GdkColor \*colorb)$/;"	f
gdk_color_free	stubs/gdkstub.c	/^void gdk_color_free(GdkColor \*color)$/;"	f
gdk_color_hash	stubs/gdkstub.c	/^guint gdk_color_hash(const GdkColor \*colora, const GdkColor \*colorb)$/;"	f
gdk_color_parse	stubs/gdkstub.c	/^gboolean gdk_color_parse(const gchar \*spec, GdkColor \*color)$/;"	f
gdk_color_white	stubs/gdkstub.c	/^gboolean gdk_color_white(GdkColormap \*colormap, GdkColor \*color)$/;"	f
gdk_colormap_alloc_color	stubs/gdkstub.c	/^gboolean gdk_colormap_alloc_color(GdkColormap \*colormap, GdkColor \*color, gboolean writeable, gboolean best_match)$/;"	f
gdk_colormap_alloc_colors	stubs/gdkstub.c	/^gint gdk_colormap_alloc_colors(GdkColormap \*colormap, GdkColor \*colors, gint ncolors, gboolean writeable, gboolean best_match, gboolean \*success)$/;"	f
gdk_colormap_change	stubs/gdkstub.c	/^void gdk_colormap_change(GdkColormap \*colormap, gint ncolors)$/;"	f
gdk_colormap_free_colors	stubs/gdkstub.c	/^void gdk_colormap_free_colors(GdkColormap \*colormap, GdkColor \*colors, gint ncolors)$/;"	f
gdk_colormap_get_system	stubs/gdkstub.c	/^GdkColormap\* gdk_colormap_get_system(void)$/;"	f
gdk_colormap_get_system_size	stubs/gdkstub.c	/^gint gdk_colormap_get_system_size(void)$/;"	f
gdk_colormap_get_visual	stubs/gdkstub.c	/^GdkVisual\* gdk_colormap_get_visual(GdkColormap \*colormap)$/;"	f
gdk_colormap_new	stubs/gdkstub.c	/^GdkColormap\* gdk_colormap_new(GdkVisual \*visual, gboolean allocate)$/;"	f
gdk_colormap_ref	stubs/gdkstub.c	/^GdkColormap\* gdk_colormap_ref(GdkColormap \*cmap)$/;"	f
gdk_colormap_sync	stubs/gdkstub.c	/^void gdk_colormap_sync(GdkColormap \*colormap, gboolean force)$/;"	f
gdk_colormap_unref	stubs/gdkstub.c	/^void gdk_colormap_unref(GdkColormap \*cmap)$/;"	f
gdk_colors_alloc	stubs/gdkstub.c	/^gboolean gdk_colors_alloc(GdkColormap \*colormap, gboolean contiguous, gulong \*planes, gint nplanes, gulong \*pixels, gint npixels)$/;"	f
gdk_colors_free	stubs/gdkstub.c	/^void gdk_colors_free(GdkColormap \*colormap, gulong \*pixels, gint npixels, gulong planes)$/;"	f
gdk_colors_store	stubs/gdkstub.c	/^void gdk_colors_store(GdkColormap \*colormap, GdkColor \*colors, gint ncolors)$/;"	f
gdk_cursor_destroy	stubs/gdkstub.c	/^void gdk_cursor_destroy(GdkCursor \*cursor)$/;"	f
gdk_cursor_new	stubs/gdkstub.c	/^GdkCursor\* gdk_cursor_new(GdkCursorType cursor_type)$/;"	f
gdk_cursor_new_from_pixmap	stubs/gdkstub.c	/^GdkCursor\* gdk_cursor_new_from_pixmap(GdkPixmap \*source, GdkPixmap \*mask, GdkColor \*fg, GdkColor \*bg, gint x, gint y)$/;"	f
gdk_drag_abort	stubs/gdkstub.c	/^void gdk_drag_abort(GdkDragContext \*context, guint32 time)$/;"	f
gdk_drag_begin	stubs/gdkstub.c	/^GdkDragContext \* gdk_drag_begin(GdkWindow \*window, GList \*targets)$/;"	f
gdk_drag_context_new	stubs/gdkstub.c	/^GdkDragContext \* gdk_drag_context_new(void)$/;"	f
gdk_drag_context_ref	stubs/gdkstub.c	/^void gdk_drag_context_ref(GdkDragContext \*context)$/;"	f
gdk_drag_context_unref	stubs/gdkstub.c	/^void gdk_drag_context_unref(GdkDragContext \*context)$/;"	f
gdk_drag_drop	stubs/gdkstub.c	/^void gdk_drag_drop(GdkDragContext \*context, guint32 time)$/;"	f
gdk_drag_find_window	stubs/gdkstub.c	/^void gdk_drag_find_window(GdkDragContext \*context, GdkWindow \*drag_window, gint x_root, gint y_root, GdkWindow \*\*dest_window, GdkDragProtocol \*protocol)$/;"	f
gdk_drag_get_protocol	stubs/gdkstub.c	/^guint32 gdk_drag_get_protocol(guint32 xid, GdkDragProtocol \*protocol)$/;"	f
gdk_drag_get_selection	stubs/gdkstub.c	/^GdkAtom gdk_drag_get_selection(GdkDragContext \*context)$/;"	f
gdk_drag_motion	stubs/gdkstub.c	/^gboolean gdk_drag_motion(GdkDragContext \*context, GdkWindow \*dest_window, GdkDragProtocol protocol, gint x_root, gint y_root, GdkDragAction suggested_action, /;"	f
gdk_drag_status	stubs/gdkstub.c	/^void gdk_drag_status(GdkDragContext \*context, GdkDragAction action, guint32 time)$/;"	f
gdk_draw_arc	stubs/gdkstub.c	/^void gdk_draw_arc(GdkDrawable \*drawable, GdkGC \*gc, gint filled, gint x, gint y, gint width, gint height, gint angle1, gint angle2)$/;"	f
gdk_draw_gray_image	stubs/gdkstub.c	/^void gdk_draw_gray_image(GdkDrawable \*drawable, GdkGC \*gc, gint x, gint y, gint width, gint height, GdkRgbDither dith, guchar \*buf, gint rowstride)$/;"	f
gdk_draw_image	stubs/gdkstub.c	/^void gdk_draw_image(GdkDrawable \*drawable, GdkGC \*gc, GdkImage \*image, gint xsrc, gint ysrc, gint xdest, gint ydest, gint width, gint height)$/;"	f
gdk_draw_indexed_image	stubs/gdkstub.c	/^void gdk_draw_indexed_image(GdkDrawable \*drawable, GdkGC \*gc, gint x, gint y, gint width, gint height, GdkRgbDither dith, guchar \*buf, gint rowstride, GdkRgb/;"	f
gdk_draw_line	stubs/gdkstub.c	/^void gdk_draw_line(GdkDrawable \*drawable, GdkGC \*gc, gint x1, gint y1, gint x2, gint y2)$/;"	f
gdk_draw_lines	stubs/gdkstub.c	/^void gdk_draw_lines(GdkDrawable \*drawable, GdkGC \*gc, GdkPoint \*points, gint npoints)$/;"	f
gdk_draw_pixmap	stubs/gdkstub.c	/^void gdk_draw_pixmap(GdkDrawable \*drawable, GdkGC \*gc, GdkDrawable \*src, gint xsrc, gint ysrc, gint xdest, gint ydest, gint width, gint height)$/;"	f
gdk_draw_point	stubs/gdkstub.c	/^void gdk_draw_point(GdkDrawable \*drawable, GdkGC \*gc, gint x, gint y)$/;"	f
gdk_draw_points	stubs/gdkstub.c	/^void gdk_draw_points(GdkDrawable \*drawable, GdkGC \*gc, GdkPoint \*points, gint npoints)$/;"	f
gdk_draw_polygon	stubs/gdkstub.c	/^void gdk_draw_polygon(GdkDrawable \*drawable, GdkGC \*gc, gint filled, GdkPoint \*points, gint npoints)$/;"	f
gdk_draw_rectangle	stubs/gdkstub.c	/^void gdk_draw_rectangle(GdkDrawable \*drawable, GdkGC \*gc, gint filled, gint x, gint y, gint width, gint height)$/;"	f
gdk_draw_rgb_32_image	stubs/gdkstub.c	/^void gdk_draw_rgb_32_image(GdkDrawable \*drawable, GdkGC \*gc, gint x, gint y, gint width, gint height, GdkRgbDither dith, guchar \*buf, gint rowstride)$/;"	f
gdk_draw_rgb_image	stubs/gdkstub.c	/^void gdk_draw_rgb_image(GdkDrawable \*drawable, GdkGC \*gc, gint x, gint y, gint width, gint height, GdkRgbDither dith, guchar \*rgb_buf, gint rowstride)$/;"	f
gdk_draw_rgb_image_dithalign	stubs/gdkstub.c	/^void gdk_draw_rgb_image_dithalign(GdkDrawable \*drawable, GdkGC \*gc, gint x, gint y, gint width, gint height, GdkRgbDither dith, guchar \*rgb_buf, gint rowstri/;"	f
gdk_draw_segments	stubs/gdkstub.c	/^void gdk_draw_segments(GdkDrawable \*drawable, GdkGC \*gc, GdkSegment \*segs, gint nsegs)$/;"	f
gdk_draw_string	stubs/gdkstub.c	/^void gdk_draw_string(GdkDrawable \*drawable, GdkFont \*font, GdkGC \*gc, gint x, gint y, const gchar \*string)$/;"	f
gdk_draw_text	stubs/gdkstub.c	/^void gdk_draw_text(GdkDrawable \*drawable, GdkFont \*font, GdkGC \*gc, gint x, gint y, const gchar \*text, gint text_length)$/;"	f
gdk_draw_text_wc	stubs/gdkstub.c	/^void gdk_draw_text_wc(GdkDrawable \*drawable, GdkFont \*font, GdkGC \*gc, gint x, gint y, const GdkWChar \*text, gint text_length)$/;"	f
gdk_drawable_set_data	stubs/gdkstub.c	/^void gdk_drawable_set_data(GdkDrawable \*drawable, const gchar \*key, gpointer data, GDestroyNotify destroy_func)$/;"	f
gdk_drop_finish	stubs/gdkstub.c	/^void gdk_drop_finish(GdkDragContext \*context, gboolean success, guint32 time)$/;"	f
gdk_drop_reply	stubs/gdkstub.c	/^void gdk_drop_reply(GdkDragContext \*context, gboolean ok, guint32 time)$/;"	f
gdk_error_trap_pop	stubs/gdkstub.c	/^gint gdk_error_trap_pop(void)$/;"	f
gdk_error_trap_push	stubs/gdkstub.c	/^void gdk_error_trap_push(void)$/;"	f
gdk_event_copy	stubs/gdkstub.c	/^GdkEvent\* gdk_event_copy(GdkEvent \*event)$/;"	f
gdk_event_free	stubs/gdkstub.c	/^void gdk_event_free(GdkEvent \*event)$/;"	f
gdk_event_get	stubs/gdkstub.c	/^GdkEvent\* gdk_event_get(void)$/;"	f
gdk_event_get_graphics_expose	stubs/gdkstub.c	/^GdkEvent\* gdk_event_get_graphics_expose(GdkWindow \*window)$/;"	f
gdk_event_get_time	stubs/gdkstub.c	/^guint32 gdk_event_get_time(GdkEvent \*event)$/;"	f
gdk_event_handler_set	stubs/gdkstub.c	/^void gdk_event_handler_set(GdkEventFunc func, gpointer data, GDestroyNotify notify)$/;"	f
gdk_event_peek	stubs/gdkstub.c	/^GdkEvent\* gdk_event_peek(void)$/;"	f
gdk_event_put	stubs/gdkstub.c	/^void gdk_event_put(GdkEvent \*event)$/;"	f
gdk_event_send_client_message	stubs/gdkstub.c	/^gboolean gdk_event_send_client_message(GdkEvent \*event, guint32 xid)$/;"	f
gdk_event_send_clientmessage_toall	stubs/gdkstub.c	/^void gdk_event_send_clientmessage_toall(GdkEvent \*event)$/;"	f
gdk_events_pending	stubs/gdkstub.c	/^gboolean gdk_events_pending(void)$/;"	f
gdk_exit	stubs/gdkstub.c	/^void gdk_exit(gint error_code)$/;"	f
gdk_flush	stubs/gdkstub.c	/^void gdk_flush(void)$/;"	f
gdk_font_equal	stubs/gdkstub.c	/^gboolean gdk_font_equal(const GdkFont \*fonta, const GdkFont \*fontb)$/;"	f
gdk_font_id	stubs/gdkstub.c	/^gint gdk_font_id(const GdkFont \*font)$/;"	f
gdk_font_load	stubs/gdkstub.c	/^GdkFont\* gdk_font_load(const gchar \*font_name)$/;"	f
gdk_font_ref	stubs/gdkstub.c	/^GdkFont\* gdk_font_ref(GdkFont \*font)$/;"	f
gdk_font_unref	stubs/gdkstub.c	/^void gdk_font_unref(GdkFont \*font)$/;"	f
gdk_fontset_load	stubs/gdkstub.c	/^GdkFont\* gdk_fontset_load(const gchar \*fontset_name)$/;"	f
gdk_free_compound_text	stubs/gdkstub.c	/^void gdk_free_compound_text(guchar \*ctext)$/;"	f
gdk_free_text_list	stubs/gdkstub.c	/^void gdk_free_text_list(gchar \*\*list)$/;"	f
gdk_gc_copy	stubs/gdkstub.c	/^void gdk_gc_copy(GdkGC \*dst_gc, GdkGC \*src_gc)$/;"	f
gdk_gc_destroy	stubs/gdkstub.c	/^void gdk_gc_destroy(GdkGC \*gc)$/;"	f
gdk_gc_get_values	stubs/gdkstub.c	/^void gdk_gc_get_values(GdkGC \*gc, GdkGCValues \*values)$/;"	f
gdk_gc_new	stubs/gdkstub.c	/^GdkGC\* gdk_gc_new(GdkWindow \*window)$/;"	f
gdk_gc_new_with_values	stubs/gdkstub.c	/^GdkGC\* gdk_gc_new_with_values(GdkWindow \*window, GdkGCValues \*values, GdkGCValuesMask values_mask)$/;"	f
gdk_gc_ref	stubs/gdkstub.c	/^GdkGC\* gdk_gc_ref(GdkGC \*gc)$/;"	f
gdk_gc_set_background	stubs/gdkstub.c	/^void gdk_gc_set_background(GdkGC \*gc, GdkColor \*color)$/;"	f
gdk_gc_set_clip_mask	stubs/gdkstub.c	/^void gdk_gc_set_clip_mask(GdkGC \*gc, GdkBitmap \*mask)$/;"	f
gdk_gc_set_clip_origin	stubs/gdkstub.c	/^void gdk_gc_set_clip_origin(GdkGC \*gc, gint x, gint y)$/;"	f
gdk_gc_set_clip_rectangle	stubs/gdkstub.c	/^void gdk_gc_set_clip_rectangle(GdkGC \*gc, GdkRectangle \*rectangle)$/;"	f
gdk_gc_set_clip_region	stubs/gdkstub.c	/^void gdk_gc_set_clip_region(GdkGC \*gc, GdkRegion \*region)$/;"	f
gdk_gc_set_dashes	stubs/gdkstub.c	/^void gdk_gc_set_dashes(GdkGC \*gc, gint dash_offset, gint8 dash_list\[\], gint n)$/;"	f
gdk_gc_set_exposures	stubs/gdkstub.c	/^void gdk_gc_set_exposures(GdkGC \*gc, gboolean exposures)$/;"	f
gdk_gc_set_fill	stubs/gdkstub.c	/^void gdk_gc_set_fill(GdkGC \*gc, GdkFill fill)$/;"	f
gdk_gc_set_font	stubs/gdkstub.c	/^void gdk_gc_set_font(GdkGC \*gc, GdkFont \*font)$/;"	f
gdk_gc_set_foreground	stubs/gdkstub.c	/^void gdk_gc_set_foreground(GdkGC \*gc, GdkColor \*color)$/;"	f
gdk_gc_set_function	stubs/gdkstub.c	/^void gdk_gc_set_function(GdkGC \*gc, GdkFunction function)$/;"	f
gdk_gc_set_line_attributes	stubs/gdkstub.c	/^void gdk_gc_set_line_attributes(GdkGC \*gc, gint line_width, GdkLineStyle line_style, GdkCapStyle cap_style, GdkJoinStyle join_style)$/;"	f
gdk_gc_set_stipple	stubs/gdkstub.c	/^void gdk_gc_set_stipple(GdkGC \*gc, GdkPixmap \*stipple)$/;"	f
gdk_gc_set_subwindow	stubs/gdkstub.c	/^void gdk_gc_set_subwindow(GdkGC \*gc, GdkSubwindowMode mode)$/;"	f
gdk_gc_set_tile	stubs/gdkstub.c	/^void gdk_gc_set_tile(GdkGC \*gc, GdkPixmap \*tile)$/;"	f
gdk_gc_set_ts_origin	stubs/gdkstub.c	/^void gdk_gc_set_ts_origin(GdkGC \*gc, gint x, gint y)$/;"	f
gdk_gc_unref	stubs/gdkstub.c	/^void gdk_gc_unref(GdkGC \*gc)$/;"	f
gdk_get_display	stubs/gdkstub.c	/^gchar\* gdk_get_display(void)$/;"	f
gdk_get_show_events	stubs/gdkstub.c	/^gboolean gdk_get_show_events(void)$/;"	f
gdk_get_use_xshm	stubs/gdkstub.c	/^gboolean gdk_get_use_xshm(void)$/;"	f
gdk_ic_attr_destroy	stubs/gdkstub.c	/^void gdk_ic_attr_destroy(GdkICAttr \*attr)$/;"	f
gdk_ic_attr_new	stubs/gdkstub.c	/^GdkICAttr\* gdk_ic_attr_new(void)$/;"	f
gdk_ic_destroy	stubs/gdkstub.c	/^void gdk_ic_destroy(GdkIC \*ic)$/;"	f
gdk_ic_get_attr	stubs/gdkstub.c	/^GdkICAttributesType gdk_ic_get_attr(GdkIC \*ic, GdkICAttr \*attr, GdkICAttributesType mask)$/;"	f
gdk_ic_get_events	stubs/gdkstub.c	/^GdkEventMask gdk_ic_get_events(GdkIC \*ic)$/;"	f
gdk_ic_get_style	stubs/gdkstub.c	/^GdkIMStyle gdk_ic_get_style(GdkIC \*ic)$/;"	f
gdk_ic_new	stubs/gdkstub.c	/^GdkIC\* gdk_ic_new(GdkICAttr \*attr, GdkICAttributesType mask)$/;"	f
gdk_ic_set_attr	stubs/gdkstub.c	/^GdkICAttributesType gdk_ic_set_attr(GdkIC \*ic,  GdkICAttr \*attr, GdkICAttributesType mask)$/;"	f
gdk_im_begin	stubs/gdkstub.c	/^void gdk_im_begin(GdkIC \*ic, GdkWindow \*window)$/;"	f
gdk_im_decide_style	stubs/gdkstub.c	/^GdkIMStyle gdk_im_decide_style(GdkIMStyle supported_style)$/;"	f
gdk_im_end	stubs/gdkstub.c	/^void gdk_im_end(void)$/;"	f
gdk_im_ready	stubs/gdkstub.c	/^gboolean gdk_im_ready(void)$/;"	f
gdk_im_set_best_style	stubs/gdkstub.c	/^GdkIMStyle gdk_im_set_best_style(GdkIMStyle best_allowed_style)$/;"	f
gdk_image_destroy	stubs/gdkstub.c	/^void gdk_image_destroy(GdkImage \*image)$/;"	f
gdk_image_get	stubs/gdkstub.c	/^GdkImage\* gdk_image_get(GdkWindow \*window, gint x, gint y, gint width, gint height)$/;"	f
gdk_image_get_pixel	stubs/gdkstub.c	/^guint32 gdk_image_get_pixel(GdkImage \*image, gint x, gint y)$/;"	f
gdk_image_new	stubs/gdkstub.c	/^GdkImage\* gdk_image_new(GdkImageType type, GdkVisual \*visual, gint width, gint height)$/;"	f
gdk_image_new_bitmap	stubs/gdkstub.c	/^GdkImage\* gdk_image_new_bitmap(GdkVisual \*visual, gpointer data, gint width, gint height)$/;"	f
gdk_image_put_pixel	stubs/gdkstub.c	/^void gdk_image_put_pixel(GdkImage \*image, gint x, gint y, guint32 pixel)$/;"	f
gdk_init	stubs/gdkstub.c	/^void gdk_init(gint \*argc, gchar \*\*\*argv)$/;"	f
gdk_init_check	stubs/gdkstub.c	/^gboolean gdk_init_check(gint \*argc, gchar \*\*\*argv)$/;"	f
gdk_input_add	stubs/gdkstub.c	/^gint gdk_input_add(gint source, GdkInputCondition condition, GdkInputFunction function, gpointer data)$/;"	f
gdk_input_add_full	stubs/gdkstub.c	/^gint gdk_input_add_full(gint source, GdkInputCondition condition, GdkInputFunction function, gpointer data, GdkDestroyNotify destroy)$/;"	f
gdk_input_exit	stubs/gdkstub.c	/^void gdk_input_exit(void)$/;"	f
gdk_input_init	stubs/gdkstub.c	/^void gdk_input_init(void)$/;"	f
gdk_input_list_devices	stubs/gdkstub.c	/^GList \* gdk_input_list_devices(void)$/;"	f
gdk_input_motion_events	stubs/gdkstub.c	/^GdkTimeCoord \*gdk_input_motion_events(GdkWindow \*window, guint32 deviceid, guint32 start, guint32 stop, gint \*nevents_return)$/;"	f
gdk_input_remove	stubs/gdkstub.c	/^void gdk_input_remove(gint tag)$/;"	f
gdk_input_set_axes	stubs/gdkstub.c	/^void gdk_input_set_axes(guint32 deviceid, GdkAxisUse \*axes)$/;"	f
gdk_input_set_extension_events	stubs/gdkstub.c	/^void gdk_input_set_extension_events(GdkWindow \*window, gint mask, GdkExtensionMode mode)$/;"	f
gdk_input_set_key	stubs/gdkstub.c	/^void gdk_input_set_key(guint32 deviceid, guint index, guint keyval, GdkModifierType modifiers)$/;"	f
gdk_input_set_mode	stubs/gdkstub.c	/^gboolean gdk_input_set_mode(guint32 deviceid, GdkInputMode mode)$/;"	f
gdk_input_set_source	stubs/gdkstub.c	/^void gdk_input_set_source(guint32 deviceid, GdkInputSource source)$/;"	f
gdk_input_window_get_pointer	stubs/gdkstub.c	/^void gdk_input_window_get_pointer(GdkWindow \*window, guint32 deviceid, gdouble \*x, gdouble \*y, gdouble \*pressure, gdouble \*xtilt, gdouble \*ytilt, GdkModif/;"	f
gdk_iswalnum	stubs/gdkstub.c	1577;"	d
gdk_iswspace	stubs/gdkstub.c	1580;"	d
gdk_key_repeat_disable	stubs/gdkstub.c	/^void gdk_key_repeat_disable(void)$/;"	f
gdk_key_repeat_restore	stubs/gdkstub.c	/^void gdk_key_repeat_restore(void)$/;"	f
gdk_keyboard_grab	stubs/gdkstub.c	/^gint gdk_keyboard_grab(GdkWindow \*window, gboolean owner_events, guint32 time)$/;"	f
gdk_keyboard_ungrab	stubs/gdkstub.c	/^void gdk_keyboard_ungrab(guint32 time)$/;"	f
gdk_keyval_from_name	stubs/gdkstub.c	/^guint gdk_keyval_from_name(const gchar \*keyval_name)$/;"	f
gdk_keyval_is_lower	stubs/gdkstub.c	/^gboolean gdk_keyval_is_lower(guint keyval)$/;"	f
gdk_keyval_is_upper	stubs/gdkstub.c	/^gboolean gdk_keyval_is_upper(guint keyval)$/;"	f
gdk_keyval_name	stubs/gdkstub.c	/^gchar\* gdk_keyval_name(guint keyval)$/;"	f
gdk_keyval_to_lower	stubs/gdkstub.c	/^guint gdk_keyval_to_lower(guint keyval)$/;"	f
gdk_keyval_to_upper	stubs/gdkstub.c	/^guint gdk_keyval_to_upper(guint keyval)$/;"	f
gdk_list_visuals	stubs/gdkstub.c	/^GList\* gdk_list_visuals(void)$/;"	f
gdk_mbstowcs	stubs/gdkstub.c	/^gint gdk_mbstowcs(GdkWChar \*dest, const gchar \*src, gint dest_max)$/;"	f
gdk_pixmap_colormap_create_from_xpm	stubs/gdkstub.c	/^GdkPixmap\* gdk_pixmap_colormap_create_from_xpm( GdkWindow \*window, GdkColormap \*colormap, GdkBitmap \*\*mask, GdkColor \*transparent_color, const gchar \*fil/;"	f
gdk_pixmap_colormap_create_from_xpm_d	stubs/gdkstub.c	/^GdkPixmap\* gdk_pixmap_colormap_create_from_xpm_d( GdkWindow \*window, GdkColormap \*colormap, GdkBitmap \*\*mask, GdkColor \*transparent_color, gchar \*\*data)/;"	f
gdk_pixmap_create_from_data	stubs/gdkstub.c	/^GdkPixmap\* gdk_pixmap_create_from_data(GdkWindow \*window, const gchar \*data, gint width, gint height, gint depth, GdkColor \*fg, GdkColor \*bg)$/;"	f
gdk_pixmap_create_from_xpm	stubs/gdkstub.c	/^GdkPixmap\* gdk_pixmap_create_from_xpm(GdkWindow \*window, GdkBitmap \*\*mask, GdkColor \*transparent_color, const gchar \*filename)$/;"	f
gdk_pixmap_create_from_xpm_d	stubs/gdkstub.c	/^GdkPixmap\* gdk_pixmap_create_from_xpm_d(GdkWindow \*window, GdkBitmap \*\*mask, GdkColor \*transparent_color, gchar \*\*data)$/;"	f
gdk_pixmap_new	stubs/gdkstub.c	/^GdkPixmap\* gdk_pixmap_new(GdkWindow \*window, gint width, gint height, gint depth)$/;"	f
gdk_pixmap_ref	stubs/gdkstub.c	/^GdkPixmap \*gdk_pixmap_ref(GdkPixmap \*pixmap)$/;"	f
gdk_pixmap_unref	stubs/gdkstub.c	/^void gdk_pixmap_unref(GdkPixmap \*pixmap)$/;"	f
gdk_pointer_grab	stubs/gdkstub.c	/^gint gdk_pointer_grab(GdkWindow \*window, gint owner_events, GdkEventMask event_mask, GdkWindow \*confine_to, GdkCursor \*cursor, guint32 time)$/;"	f
gdk_pointer_is_grabbed	stubs/gdkstub.c	/^gboolean gdk_pointer_is_grabbed(void)$/;"	f
gdk_pointer_ungrab	stubs/gdkstub.c	/^void gdk_pointer_ungrab(guint32 time)$/;"	f
gdk_property_change	stubs/gdkstub.c	/^void gdk_property_change(GdkWindow \*window, GdkAtom property, GdkAtom type, gint format, GdkPropMode mode, guchar \*data, gint nelements)$/;"	f
gdk_property_delete	stubs/gdkstub.c	/^void gdk_property_delete(GdkWindow \*window, GdkAtom property)$/;"	f
gdk_property_get	stubs/gdkstub.c	/^gboolean gdk_property_get(GdkWindow \*window, GdkAtom property, GdkAtom type, gulong offset, gulong length, gint pdelete, GdkAtom \*actual_property_type, gint \*/;"	f
gdk_query_depths	stubs/gdkstub.c	/^void gdk_query_depths(gint \*\*depths, gint \*count)$/;"	f
gdk_query_visual_types	stubs/gdkstub.c	/^void gdk_query_visual_types(GdkVisualType \*\*visual_types, gint \*count)$/;"	f
gdk_rectangle_intersect	stubs/gdkstub.c	/^gboolean gdk_rectangle_intersect(GdkRectangle \*src1, GdkRectangle \*src2, GdkRectangle \*dest)$/;"	f
gdk_rectangle_union	stubs/gdkstub.c	/^void gdk_rectangle_union(GdkRectangle \*src1, GdkRectangle \*src2, GdkRectangle \*dest)$/;"	f
gdk_region_destroy	stubs/gdkstub.c	/^void gdk_region_destroy(GdkRegion \*region)$/;"	f
gdk_region_empty	stubs/gdkstub.c	/^gboolean gdk_region_empty(GdkRegion \*region)$/;"	f
gdk_region_equal	stubs/gdkstub.c	/^gboolean gdk_region_equal(GdkRegion \*region1, GdkRegion \*region2)$/;"	f
gdk_region_get_clipbox	stubs/gdkstub.c	/^void gdk_region_get_clipbox(GdkRegion \*region, GdkRectangle \*rectangle)$/;"	f
gdk_region_new	stubs/gdkstub.c	/^GdkRegion\* gdk_region_new(void)$/;"	f
gdk_region_offset	stubs/gdkstub.c	/^void gdk_region_offset(GdkRegion \*region, gint dx, gint dy)$/;"	f
gdk_region_point_in	stubs/gdkstub.c	/^gboolean gdk_region_point_in(GdkRegion \*region, int x, int y)$/;"	f
gdk_region_polygon	stubs/gdkstub.c	/^GdkRegion\* gdk_region_polygon(GdkPoint \*points, gint npoints, GdkFillRule fill_rule)$/;"	f
gdk_region_rect_in	stubs/gdkstub.c	/^GdkOverlapType gdk_region_rect_in(GdkRegion \*region, GdkRectangle \*rect)$/;"	f
gdk_region_shrink	stubs/gdkstub.c	/^void gdk_region_shrink(GdkRegion \*region, gint dx, gint dy)$/;"	f
gdk_region_union_with_rect	stubs/gdkstub.c	/^GdkRegion\* gdk_region_union_with_rect(GdkRegion \*region, GdkRectangle \*rect)$/;"	f
gdk_regions_intersect	stubs/gdkstub.c	/^GdkRegion\* gdk_regions_intersect(GdkRegion \*source1, GdkRegion \*source2)$/;"	f
gdk_regions_subtract	stubs/gdkstub.c	/^GdkRegion\* gdk_regions_subtract(GdkRegion \*source1, GdkRegion \*source2)$/;"	f
gdk_regions_union	stubs/gdkstub.c	/^GdkRegion\* gdk_regions_union(GdkRegion \*source1, GdkRegion \*source2)$/;"	f
gdk_regions_xor	stubs/gdkstub.c	/^GdkRegion\* gdk_regions_xor(GdkRegion \*source1, GdkRegion \*source2)$/;"	f
gdk_rgb_cmap_free	stubs/gdkstub.c	/^void gdk_rgb_cmap_free(GdkRgbCmap \*cmap)$/;"	f
gdk_rgb_cmap_new	stubs/gdkstub.c	/^GdkRgbCmap \* gdk_rgb_cmap_new(guint32 \*colors, gint n_colors)$/;"	f
gdk_rgb_ditherable	stubs/gdkstub.c	/^gboolean gdk_rgb_ditherable(void)$/;"	f
gdk_rgb_gc_set_background	stubs/gdkstub.c	/^void gdk_rgb_gc_set_background(GdkGC \*gc, guint32 rgb)$/;"	f
gdk_rgb_gc_set_foreground	stubs/gdkstub.c	/^void gdk_rgb_gc_set_foreground(GdkGC \*gc, guint32 rgb)$/;"	f
gdk_rgb_get_cmap	stubs/gdkstub.c	/^GdkColormap \* gdk_rgb_get_cmap(void)$/;"	f
gdk_rgb_get_visual	stubs/gdkstub.c	/^GdkVisual \* gdk_rgb_get_visual(void)$/;"	f
gdk_rgb_init	stubs/gdkstub.c	/^void gdk_rgb_init(void)$/;"	f
gdk_rgb_set_install	stubs/gdkstub.c	/^void gdk_rgb_set_install(gboolean install)$/;"	f
gdk_rgb_set_min_colors	stubs/gdkstub.c	/^void gdk_rgb_set_min_colors(gint min_colors)$/;"	f
gdk_rgb_set_verbose	stubs/gdkstub.c	/^void gdk_rgb_set_verbose(gboolean verbose)$/;"	f
gdk_rgb_xpixel_from_rgb	stubs/gdkstub.c	/^gulong gdk_rgb_xpixel_from_rgb(guint32 rgb)$/;"	f
gdk_screen_height	stubs/gdkstub.c	/^gint gdk_screen_height(void)$/;"	f
gdk_screen_height_mm	stubs/gdkstub.c	/^gint gdk_screen_height_mm(void)$/;"	f
gdk_screen_width	stubs/gdkstub.c	/^gint gdk_screen_width(void)$/;"	f
gdk_screen_width_mm	stubs/gdkstub.c	/^gint gdk_screen_width_mm(void)$/;"	f
gdk_selection_convert	stubs/gdkstub.c	/^void gdk_selection_convert(GdkWindow \*requestor, GdkAtom selection, GdkAtom target, guint32 time)$/;"	f
gdk_selection_owner_get	stubs/gdkstub.c	/^GdkWindow\* gdk_selection_owner_get(GdkAtom selection)$/;"	f
gdk_selection_owner_set	stubs/gdkstub.c	/^gboolean gdk_selection_owner_set(GdkWindow \*owner, GdkAtom selection, guint32 time, gint send_event)$/;"	f
gdk_selection_property_get	stubs/gdkstub.c	/^gboolean gdk_selection_property_get(GdkWindow \*requestor, guchar \*\*data, GdkAtom \*prop_type, gint \*prop_format)$/;"	f
gdk_selection_send_notify	stubs/gdkstub.c	/^void gdk_selection_send_notify(guint32 requestor, GdkAtom selection, GdkAtom target, GdkAtom property, guint32 time)$/;"	f
gdk_set_locale	stubs/gdkstub.c	/^gchar\* gdk_set_locale(void)$/;"	f
gdk_set_show_events	stubs/gdkstub.c	/^void gdk_set_show_events(gboolean show_events)$/;"	f
gdk_set_sm_client_id	stubs/gdkstub.c	/^void gdk_set_sm_client_id(const gchar \*sm_client_id)$/;"	f
gdk_set_use_xshm	stubs/gdkstub.c	/^void gdk_set_use_xshm(gboolean use_xshm)$/;"	f
gdk_string_extents	stubs/gdkstub.c	/^void gdk_string_extents(GdkFont \*font, const gchar \*string, gint \*lbearing, gint \*rbearing, gint \*width, gint \*ascent, gint \*descent)$/;"	f
gdk_string_height	stubs/gdkstub.c	/^gint gdk_string_height(GdkFont \*font, const gchar \*string)$/;"	f
gdk_string_measure	stubs/gdkstub.c	/^gint gdk_string_measure(GdkFont \*font, const gchar \*string)$/;"	f
gdk_string_to_compound_text	stubs/gdkstub.c	/^gint gdk_string_to_compound_text(const gchar \*str, GdkAtom \*encoding, gint \*format, guchar \*\*ctext, gint \*length)$/;"	f
gdk_string_width	stubs/gdkstub.c	/^gint gdk_string_width(GdkFont \*font, const gchar \*string)$/;"	f
gdk_text_extents	stubs/gdkstub.c	/^void gdk_text_extents(GdkFont \*font, const gchar \*text, gint text_length, gint \*lbearing, gint \*rbearing, gint \*width, gint \*ascent, gint \*descent)$/;"	f
gdk_text_extents_wc	stubs/gdkstub.c	/^void gdk_text_extents_wc(GdkFont \*font, const GdkWChar \*text, gint text_length, gint \*lbearing, gint \*rbearing, gint \*width, gint \*ascent, gint \*descent)/;"	f
gdk_text_height	stubs/gdkstub.c	/^gint gdk_text_height(GdkFont \*font, const gchar \*text, gint text_length)$/;"	f
gdk_text_measure	stubs/gdkstub.c	/^gint gdk_text_measure(GdkFont \*font, const gchar \*text, gint text_length)$/;"	f
gdk_text_property_to_text_list	stubs/gdkstub.c	/^gint gdk_text_property_to_text_list(GdkAtom encoding, gint format, guchar \*text, gint length, gchar \*\*\*list)$/;"	f
gdk_text_width	stubs/gdkstub.c	/^gint gdk_text_width(GdkFont \*font, const gchar \*text, gint text_length)$/;"	f
gdk_text_width_wc	stubs/gdkstub.c	/^gint gdk_text_width_wc(GdkFont \*font, const GdkWChar \*text, gint text_length)$/;"	f
gdk_threads_enter	stubs/gdkstub.c	/^void gdk_threads_enter(void)$/;"	f
gdk_threads_leave	stubs/gdkstub.c	/^void gdk_threads_leave(void)$/;"	f
gdk_time_get	stubs/gdkstub.c	/^guint32 gdk_time_get(void)$/;"	f
gdk_timer_disable	stubs/gdkstub.c	/^void gdk_timer_disable(void)$/;"	f
gdk_timer_enable	stubs/gdkstub.c	/^void gdk_timer_enable(void)$/;"	f
gdk_timer_get	stubs/gdkstub.c	/^guint32 gdk_timer_get(void)$/;"	f
gdk_timer_set	stubs/gdkstub.c	/^void gdk_timer_set(guint32 milliseconds)$/;"	f
gdk_visual_get_best	stubs/gdkstub.c	/^GdkVisual\* gdk_visual_get_best(void)$/;"	f
gdk_visual_get_best_depth	stubs/gdkstub.c	/^gint gdk_visual_get_best_depth(void)$/;"	f
gdk_visual_get_best_type	stubs/gdkstub.c	/^GdkVisualType gdk_visual_get_best_type(void)$/;"	f
gdk_visual_get_best_with_both	stubs/gdkstub.c	/^GdkVisual\* gdk_visual_get_best_with_both(gint depth, GdkVisualType visual_type)$/;"	f
gdk_visual_get_best_with_depth	stubs/gdkstub.c	/^GdkVisual\* gdk_visual_get_best_with_depth(gint depth)$/;"	f
gdk_visual_get_best_with_type	stubs/gdkstub.c	/^GdkVisual\* gdk_visual_get_best_with_type(GdkVisualType visual_type)$/;"	f
gdk_visual_get_system	stubs/gdkstub.c	/^GdkVisual\* gdk_visual_get_system(void)$/;"	f
gdk_visual_ref	stubs/gdkstub.c	/^GdkVisual\* gdk_visual_ref(GdkVisual \*visual)$/;"	f
gdk_visual_unref	stubs/gdkstub.c	/^void gdk_visual_unref(GdkVisual \*visual)$/;"	f
gdk_wcstombs	stubs/gdkstub.c	/^gchar \*gdk_wcstombs(const GdkWChar \*src)$/;"	f
gdk_window_add_filter	stubs/gdkstub.c	/^void gdk_window_add_filter(GdkWindow \*window, GdkFilterFunc function, gpointer data)$/;"	f
gdk_window_at_pointer	stubs/gdkstub.c	/^GdkWindow\* gdk_window_at_pointer(gint \*win_x, gint \*win_y)$/;"	f
gdk_window_clear	stubs/gdkstub.c	/^void gdk_window_clear(GdkWindow \*window)$/;"	f
gdk_window_clear_area	stubs/gdkstub.c	/^void gdk_window_clear_area(GdkWindow \*window, gint x, gint y, gint width, gint height)$/;"	f
gdk_window_clear_area_e	stubs/gdkstub.c	/^void gdk_window_clear_area_e(GdkWindow \*window, gint x, gint y, gint width, gint height)$/;"	f
gdk_window_copy_area	stubs/gdkstub.c	/^void gdk_window_copy_area(GdkWindow \*window, GdkGC \*gc, gint x, gint y, GdkWindow \*source_window, gint source_x, gint source_y, gint width, gint height)$/;"	f
gdk_window_destroy	stubs/gdkstub.c	/^void gdk_window_destroy(GdkWindow \*window)$/;"	f
gdk_window_get_children	stubs/gdkstub.c	/^GList\* gdk_window_get_children(GdkWindow \*window)$/;"	f
gdk_window_get_colormap	stubs/gdkstub.c	/^GdkColormap\* gdk_window_get_colormap(GdkWindow \*window)$/;"	f
gdk_window_get_deskrelative_origin	stubs/gdkstub.c	/^gboolean gdk_window_get_deskrelative_origin(GdkWindow \*window, gint \*x, gint \*y)$/;"	f
gdk_window_get_events	stubs/gdkstub.c	/^GdkEventMask gdk_window_get_events(GdkWindow \*window)$/;"	f
gdk_window_get_geometry	stubs/gdkstub.c	/^void gdk_window_get_geometry(GdkWindow \*window, gint \*x, gint \*y, gint \*width, gint \*height, gint \*depth)$/;"	f
gdk_window_get_origin	stubs/gdkstub.c	/^gint gdk_window_get_origin(GdkWindow \*window, gint \*x, gint \*y)$/;"	f
gdk_window_get_parent	stubs/gdkstub.c	/^GdkWindow\* gdk_window_get_parent(GdkWindow \*window)$/;"	f
gdk_window_get_pointer	stubs/gdkstub.c	/^GdkWindow\* gdk_window_get_pointer(GdkWindow \*window, gint \*x, gint \*y, GdkModifierType \*mask)$/;"	f
gdk_window_get_position	stubs/gdkstub.c	/^void gdk_window_get_position(GdkWindow \*window, gint \*x, gint \*y)$/;"	f
gdk_window_get_root_origin	stubs/gdkstub.c	/^void gdk_window_get_root_origin(GdkWindow \*window, gint \*x, gint \*y)$/;"	f
gdk_window_get_size	stubs/gdkstub.c	/^void gdk_window_get_size(GdkWindow \*window, gint \*width, gint \*height)$/;"	f
gdk_window_get_toplevel	stubs/gdkstub.c	/^GdkWindow\* gdk_window_get_toplevel(GdkWindow \*window)$/;"	f
gdk_window_get_toplevels	stubs/gdkstub.c	/^GList \* gdk_window_get_toplevels(void)$/;"	f
gdk_window_get_type	stubs/gdkstub.c	/^GdkWindowType gdk_window_get_type(GdkWindow \*window)$/;"	f
gdk_window_get_user_data	stubs/gdkstub.c	/^void gdk_window_get_user_data(GdkWindow \*window, gpointer \*data)$/;"	f
gdk_window_get_visual	stubs/gdkstub.c	/^GdkVisual\* gdk_window_get_visual(GdkWindow \*window)$/;"	f
gdk_window_hide	stubs/gdkstub.c	/^void gdk_window_hide(GdkWindow \*window)$/;"	f
gdk_window_is_viewable	stubs/gdkstub.c	/^gboolean gdk_window_is_viewable(GdkWindow \*window)$/;"	f
gdk_window_is_visible	stubs/gdkstub.c	/^gboolean gdk_window_is_visible(GdkWindow \*window)$/;"	f
gdk_window_lower	stubs/gdkstub.c	/^void gdk_window_lower(GdkWindow \*window)$/;"	f
gdk_window_merge_child_shapes	stubs/gdkstub.c	/^void gdk_window_merge_child_shapes(GdkWindow \*window)$/;"	f
gdk_window_move	stubs/gdkstub.c	/^void gdk_window_move(GdkWindow \*window, gint x, gint y)$/;"	f
gdk_window_move_resize	stubs/gdkstub.c	/^void gdk_window_move_resize(GdkWindow \*window, gint x, gint y, gint width, gint height)$/;"	f
gdk_window_new	stubs/gdkstub.c	/^GdkWindow\* gdk_window_new(GdkWindow \*parent, GdkWindowAttr \*attributes, gint attributes_mask)$/;"	f
gdk_window_raise	stubs/gdkstub.c	/^void gdk_window_raise(GdkWindow \*window)$/;"	f
gdk_window_ref	stubs/gdkstub.c	/^GdkWindow\* gdk_window_ref(GdkWindow \*window)$/;"	f
gdk_window_register_dnd	stubs/gdkstub.c	/^void gdk_window_register_dnd(GdkWindow \*window)$/;"	f
gdk_window_remove_filter	stubs/gdkstub.c	/^void gdk_window_remove_filter(GdkWindow \*window, GdkFilterFunc function, gpointer data)$/;"	f
gdk_window_reparent	stubs/gdkstub.c	/^void gdk_window_reparent(GdkWindow \*window, GdkWindow \*new_parent, gint x, gint y)$/;"	f
gdk_window_resize	stubs/gdkstub.c	/^void gdk_window_resize(GdkWindow \*window, gint width, gint height)$/;"	f
gdk_window_set_back_pixmap	stubs/gdkstub.c	/^void gdk_window_set_back_pixmap(GdkWindow \*window, GdkPixmap \*pixmap, gboolean parent_relative)$/;"	f
gdk_window_set_background	stubs/gdkstub.c	/^void gdk_window_set_background(GdkWindow \*window, GdkColor \*color)$/;"	f
gdk_window_set_child_shapes	stubs/gdkstub.c	/^void gdk_window_set_child_shapes(GdkWindow \*window)$/;"	f
gdk_window_set_colormap	stubs/gdkstub.c	/^void gdk_window_set_colormap(GdkWindow \*window, GdkColormap \*colormap)$/;"	f
gdk_window_set_cursor	stubs/gdkstub.c	/^void gdk_window_set_cursor(GdkWindow \*window, GdkCursor \*cursor)$/;"	f
gdk_window_set_decorations	stubs/gdkstub.c	/^void gdk_window_set_decorations(GdkWindow \*window, GdkWMDecoration decorations)$/;"	f
gdk_window_set_events	stubs/gdkstub.c	/^void gdk_window_set_events(GdkWindow \*window, GdkEventMask event_mask)$/;"	f
gdk_window_set_functions	stubs/gdkstub.c	/^void gdk_window_set_functions(GdkWindow \*window, GdkWMFunction functions)$/;"	f
gdk_window_set_geometry_hints	stubs/gdkstub.c	/^void gdk_window_set_geometry_hints(GdkWindow \*window, GdkGeometry \*geometry, GdkWindowHints flags)$/;"	f
gdk_window_set_group	stubs/gdkstub.c	/^void gdk_window_set_group(GdkWindow \*window, GdkWindow \*leader)$/;"	f
gdk_window_set_hints	stubs/gdkstub.c	/^void gdk_window_set_hints(GdkWindow \*window, gint x, gint y, gint min_width, gint min_height, gint max_width, gint max_height, gint flags)$/;"	f
gdk_window_set_icon	stubs/gdkstub.c	/^void gdk_window_set_icon(GdkWindow \*window, GdkWindow \*icon_window, GdkPixmap \*pixmap, GdkBitmap \*mask)$/;"	f
gdk_window_set_icon_name	stubs/gdkstub.c	/^void gdk_window_set_icon_name(GdkWindow \*window, const gchar \*name)$/;"	f
gdk_window_set_override_redirect	stubs/gdkstub.c	/^void gdk_window_set_override_redirect(GdkWindow \*window, gboolean override_redirect)$/;"	f
gdk_window_set_role	stubs/gdkstub.c	/^void gdk_window_set_role(GdkWindow \*window, const gchar \*role)$/;"	f
gdk_window_set_static_gravities	stubs/gdkstub.c	/^gboolean gdk_window_set_static_gravities(GdkWindow \*window, gboolean use_static)$/;"	f
gdk_window_set_title	stubs/gdkstub.c	/^void gdk_window_set_title(GdkWindow \*window, const gchar \*title)$/;"	f
gdk_window_set_transient_for	stubs/gdkstub.c	/^void gdk_window_set_transient_for(GdkWindow \*window, GdkWindow \*leader)$/;"	f
gdk_window_set_user_data	stubs/gdkstub.c	/^void gdk_window_set_user_data(GdkWindow \*window, gpointer user_data)$/;"	f
gdk_window_shape_combine_mask	stubs/gdkstub.c	/^void gdk_window_shape_combine_mask(GdkWindow \*window, GdkBitmap \*shape_mask, gint offset_x, gint offset_y)$/;"	f
gdk_window_show	stubs/gdkstub.c	/^void gdk_window_show(GdkWindow \*window)$/;"	f
gdk_window_unref	stubs/gdkstub.c	/^void gdk_window_unref(GdkWindow \*window)$/;"	f
gdk_window_withdraw	stubs/gdkstub.c	/^void gdk_window_withdraw(GdkWindow \*window)$/;"	f
gdouble	stubs/glibstub.c	/^typedef double	gdouble;$/;"	t
getc	stubs/ansistub.c	/^int getc(FILE \*fp)$/;"	f
getchar	stubs/ansistub.c	/^int getchar(void)$/;"	f
getcwd	stubs/unixstub.c	/^char \*getcwd(char \*buf, size_t size)$/;"	f
getdomainname	stubs/unixstub.c	/^int getdomainname(char \*name, size_t namelen)$/;"	f
getdtablesize	stubs/unixstub.c	/^int getdtablesize(void)$/;"	f
getegid	stubs/unixstub.c	/^gid_t getegid(void)$/;"	f
getenv	stubs/ansistub.c	/^char \*getenv(const char \*name)$/;"	f
geteuid	stubs/unixstub.c	/^uid_t geteuid(void)$/;"	f
getgid	stubs/unixstub.c	/^gid_t getgid(void)$/;"	f
getgroups	stubs/unixstub.c	/^int getgroups(int size, gid_t list\[\])$/;"	f
gethostname	stubs/unixstub.c	/^int gethostname(char \*name, size_t namelen)$/;"	f
getlogin	stubs/unixstub.c	/^char \*getlogin(void)$/;"	f
getlogin_r	stubs/unixstub.c	/^int getlogin_r(char \*name, size_t namelen)$/;"	f
getopt	stubs/unixstub.c	/^int getopt(int argc, char \* const argv\[\], const char \*letters)$/;"	f
getopt_long	stubs/unixstub.c	/^int getopt_long(int argc, char \* const argv\[\], const char \*letters, const struct option \*longopts, int \*longind)$/;"	f
getopt_long_only	stubs/unixstub.c	/^int getopt_long_only(int argc, char \* const argv\[\], const char \*letters, const struct option \*longopts, int \*longind)$/;"	f
getpagesize	stubs/unixstub.c	/^int getpagesize(void)$/;"	f
getpass	stubs/unixstub.c	/^char \*getpass(const char \*prompt)$/;"	f
getpgid	stubs/unixstub.c	/^pid_t getpgid(void)$/;"	f
getpgrp	stubs/unixstub.c	/^pid_t getpgrp(void)$/;"	f
getpid	stubs/unixstub.c	/^pid_t getpid(void)$/;"	f
getppid	stubs/unixstub.c	/^pid_t getppid(void)$/;"	f
getrlimit	stubs/unixstub.c	5077;"	d
gets	stubs/ansistub.c	/^char \*gets(char \*string)$/;"	f
getsid	stubs/unixstub.c	/^pid_t getsid(pid_t pid)$/;"	f
gettimeofday	stubs/unixstub.c	/^int gettimeofday (struct timeval \*__restrict __tv, __timezone_ptr_t __tz)$/;"	f
getuid	stubs/unixstub.c	/^uid_t getuid(void)$/;"	f
getusershell	stubs/unixstub.c	/^char \*getusershell(void)$/;"	f
getwd	stubs/unixstub.c	/^char \*getwd(char \*buf)$/;"	f
gfloat	stubs/glibstub.c	/^typedef float	gfloat;$/;"	t
gfloat	stubs/gtkstub.c	3448;"	struct:GtkCurve
gid_t	stubs/unixstub.c	/^typedef __gid_t gid_t;$/;"	t
gid_t	stubs/unixstub.c	/^typedef __gid_t gid_t;$/;"	v
gid_t	stubs/unixstub.c	/^typedef __gid_t gid_t;$/;"	v
gint	stubs/glibstub.c	/^typedef int    gint;$/;"	t
gint	stubs/gtkstub.c	1657;"	struct:GtkCListClass
gint	stubs/gtkstub.c	2663;"	struct:GtkContainerClass
gint	stubs/gtkstub.c	9320;"	struct:GtkRangeClass
gint	stubs/gtkstub.c	9320;"	struct:GtkRangeClass
gint	stubs/gtkstub.c	9320;"	struct:GtkRangeClass
gint	stubs/gtkstub.c	13791;"	struct:GtkWidgetClass
gint	stubs/gtkstub.c	13791;"	struct:GtkWidgetClass
gint	stubs/gtkstub.c	13791;"	struct:GtkWidgetClass
gint	stubs/gtkstub.c	13791;"	struct:GtkWidgetClass
gint	stubs/gtkstub.c	13791;"	struct:GtkWidgetClass
gint	stubs/gtkstub.c	13791;"	struct:GtkWidgetClass
gint	stubs/gtkstub.c	13791;"	struct:GtkWidgetClass
gint	stubs/gtkstub.c	13791;"	struct:GtkWidgetClass
gint	stubs/gtkstub.c	13791;"	struct:GtkWidgetClass
gint	stubs/gtkstub.c	13791;"	struct:GtkWidgetClass
gint	stubs/gtkstub.c	13791;"	struct:GtkWidgetClass
gint	stubs/gtkstub.c	13791;"	struct:GtkWidgetClass
gint	stubs/gtkstub.c	13791;"	struct:GtkWidgetClass
gint	stubs/gtkstub.c	13791;"	struct:GtkWidgetClass
gint	stubs/gtkstub.c	13791;"	struct:GtkWidgetClass
gint	stubs/gtkstub.c	13791;"	struct:GtkWidgetClass
gint	stubs/gtkstub.c	13791;"	struct:GtkWidgetClass
gint	stubs/gtkstub.c	13791;"	struct:GtkWidgetClass
gint	stubs/gtkstub.c	13791;"	struct:GtkWidgetClass
gint	stubs/gtkstub.c	13791;"	struct:GtkWidgetClass
gint	stubs/gtkstub.c	13791;"	struct:GtkWidgetClass
gint	stubs/gtkstub.c	13791;"	struct:GtkWidgetClass
gint	stubs/gtkstub.c	13791;"	struct:GtkWidgetClass
gint	stubs/gtkstub.c	13791;"	struct:GtkWidgetClass
gint	stubs/gtkstub.c	13791;"	struct:GtkWidgetClass
gint	stubs/gtkstub.c	13791;"	struct:GtkWidgetClass
gint16	stubs/glibstub.c	/^typedef short gint16;		\/\* 16-bit signed integer (system dependent) \*\/$/;"	t
gint32	stubs/glibstub.c	/^typedef long gint32;		\/\* 32-bit signed integer (system dependent) \*\/$/;"	t
gint64	stubs/glibstub.c	/^typedef long long gint64;	\/\* 64-bit signed integer (system dependent) \*\/$/;"	t
gint8	stubs/glibstub.c	/^typedef char gint8;		\/\* 8-bit signed integer (system dependent) \*\/$/;"	t
glib_binary_age	stubs/glibstub.c	/^GUTILS_C_VAR const guint glib_binary_age;$/;"	v
glib_interface_age	stubs/glibstub.c	/^GUTILS_C_VAR const guint glib_interface_age;$/;"	v
glib_major_version	stubs/glibstub.c	/^GUTILS_C_VAR const guint glib_major_version;$/;"	v
glib_micro_version	stubs/glibstub.c	/^GUTILS_C_VAR const guint glib_micro_version;$/;"	v
glib_minor_version	stubs/glibstub.c	/^GUTILS_C_VAR const guint glib_minor_version;$/;"	v
global_auto_repeat	stubs/xlibstub.c	504;"	struct:XKeyboardState
glong	stubs/glibstub.c	/^typedef long   glong;$/;"	t
gmon_cg_arc_record	stubs/unixstub.c	/^struct gmon_cg_arc_record$/;"	s
gmon_hdr	stubs/unixstub.c	/^struct gmon_hdr$/;"	s
gmon_hist_hdr	stubs/unixstub.c	/^struct gmon_hist_hdr$/;"	s
gmonparam	stubs/unixstub.c	/^struct gmonparam {$/;"	s
gmtime	stubs/ansistub.c	/^struct tm \*gmtime(const time_t \*tptr)$/;"	f
gpointer	stubs/glibstub.c	/^typedef void\* gpointer;$/;"	t
grab_point	stubs/gtkstub.c	3448;"	struct:GtkCurve
graph	stubs/gtkstub.c	3448;"	struct:GtkCurve
graphics_exposures	stubs/gdkstub.c	6201;"	struct:GdkGCValues
graphics_exposures	stubs/xftstub.c	97;"	struct:XRenderPictureAttributes
graphics_exposures	stubs/xlibstub.c	312;"	struct:XGCValues
green	stubs/gdkstub.c	6096;"	struct:GdkColor
green	stubs/xftstub.c	25;"	struct:XRenderDirectFormat
green	stubs/xftstub.c	105;"	struct:XRenderColor
green	stubs/xlibstub.c	459;"	struct:XColor
greenMask	stubs/xftstub.c	25;"	struct:XRenderDirectFormat
green_closeness	stubs/xpmstub.c	118;"	struct:XpmAttributes
green_mask	stubs/gdkstub.c	6125;"	struct:GdkVisual
green_mask	stubs/xlibstub.c	328;"	struct:Visual
green_mask	stubs/xlibstub.c	442;"	struct:XImage
green_mask	stubs/xlibstub.c	1348;"	struct:XVisualInfo
green_max	stubs/xlibstub.c	1362;"	struct:XStandardColormap
green_mult	stubs/xlibstub.c	1362;"	struct:XStandardColormap
green_prec	stubs/gdkstub.c	6125;"	struct:GdkVisual
green_shift	stubs/gdkstub.c	6125;"	struct:GdkVisual
greg_t	stubs/unixstub.c	/^typedef int greg_t;$/;"	t
gregset_t	stubs/unixstub.c	/^typedef greg_t gregset_t\[NGREG\];$/;"	t
groove_rectangle	stubs/gtkstub.c	8493;"	struct:GtkPaned
group	stubs/gtkstub.c	9138;"	struct:GtkRadioButton
group	stubs/gtkstub.c	9208;"	struct:GtkRadioMenuItem
grow_space	stubs/gtkstub.c	1158;"	struct:GtkCalendar
gshort	stubs/glibstub.c	/^typedef short  gshort;$/;"	t
gsize	stubs/glibstub.c	/^typedef guint32 gsize;$/;"	t
gssize	stubs/glibstub.c	/^typedef gint32	gssize;$/;"	t
gtk_accel_group_activate	stubs/gtkstub.c	/^gboolean gtk_accel_group_activate(GtkAccelGroup \*accel_group, guint accel_key, GdkModifierType accel_mods)$/;"	f
gtk_accel_group_add	stubs/gtkstub.c	/^void gtk_accel_group_add(GtkAccelGroup \*accel_group, guint accel_key, GdkModifierType accel_mods, GtkAccelFlags accel_flags, GtkObject \*object, const gchar \*/;"	f
gtk_accel_group_attach	stubs/gtkstub.c	/^void gtk_accel_group_attach(GtkAccelGroup \*accel_group, GtkObject \*object)$/;"	f
gtk_accel_group_create_add	stubs/gtkstub.c	/^guint gtk_accel_group_create_add(GtkType class_type, GtkSignalRunType signal_flags, guint handler_offset)$/;"	f
gtk_accel_group_create_remove	stubs/gtkstub.c	/^guint gtk_accel_group_create_remove(GtkType class_type, GtkSignalRunType signal_flags, guint handler_offset)$/;"	f
gtk_accel_group_detach	stubs/gtkstub.c	/^void gtk_accel_group_detach(GtkAccelGroup \*accel_group, GtkObject \*object)$/;"	f
gtk_accel_group_entries_from_object	stubs/gtkstub.c	/^GSList\* gtk_accel_group_entries_from_object(GtkObject \*object)$/;"	f
gtk_accel_group_get_default	stubs/gtkstub.c	/^GtkAccelGroup\* gtk_accel_group_get_default(void)$/;"	f
gtk_accel_group_get_entry	stubs/gtkstub.c	/^GtkAccelEntry\* gtk_accel_group_get_entry(GtkAccelGroup \*accel_group, guint accel_key, GdkModifierType accel_mods)$/;"	f
gtk_accel_group_handle_add	stubs/gtkstub.c	/^void gtk_accel_group_handle_add(GtkObject \*object, guint accel_signal_id, GtkAccelGroup \*accel_group, guint accel_key, GdkModifierType accel_mods, GtkAccelFla/;"	f
gtk_accel_group_handle_remove	stubs/gtkstub.c	/^void gtk_accel_group_handle_remove(GtkObject \*object, GtkAccelGroup \*accel_group, guint accel_key, GdkModifierType accel_mods)$/;"	f
gtk_accel_group_lock	stubs/gtkstub.c	/^void gtk_accel_group_lock(GtkAccelGroup \*accel_group)$/;"	f
gtk_accel_group_lock_entry	stubs/gtkstub.c	/^void gtk_accel_group_lock_entry(GtkAccelGroup \*accel_group, guint accel_key, GdkModifierType accel_mods)$/;"	f
gtk_accel_group_new	stubs/gtkstub.c	/^GtkAccelGroup\* gtk_accel_group_new(void)$/;"	f
gtk_accel_group_ref	stubs/gtkstub.c	/^GtkAccelGroup\* gtk_accel_group_ref(GtkAccelGroup \*accel_group)$/;"	f
gtk_accel_group_remove	stubs/gtkstub.c	/^void gtk_accel_group_remove(GtkAccelGroup \*accel_group, guint accel_key, GdkModifierType accel_mods, GtkObject \*object)$/;"	f
gtk_accel_group_unlock	stubs/gtkstub.c	/^void gtk_accel_group_unlock(GtkAccelGroup \*accel_group)$/;"	f
gtk_accel_group_unlock_entry	stubs/gtkstub.c	/^void gtk_accel_group_unlock_entry(GtkAccelGroup \*accel_group, guint accel_key, GdkModifierType accel_mods)$/;"	f
gtk_accel_group_unref	stubs/gtkstub.c	/^void gtk_accel_group_unref(GtkAccelGroup \*accel_group)$/;"	f
gtk_accel_groups_activate	stubs/gtkstub.c	/^gboolean gtk_accel_groups_activate(GtkObject \*object, guint accel_key, GdkModifierType accel_mods)$/;"	f
gtk_accel_groups_from_object	stubs/gtkstub.c	/^GSList\* gtk_accel_groups_from_object(GtkObject \*object)$/;"	f
gtk_accel_label_accelerator_width	stubs/gtkstub.c	2565;"	d
gtk_accel_label_get_accel_width	stubs/gtkstub.c	/^guint gtk_accel_label_get_accel_width(GtkAccelLabel \*accel_label)$/;"	f
gtk_accel_label_get_type	stubs/gtkstub.c	/^GtkType gtk_accel_label_get_type(void)$/;"	f
gtk_accel_label_new	stubs/gtkstub.c	/^GtkWidget\* gtk_accel_label_new(const gchar \*string)$/;"	f
gtk_accel_label_refetch	stubs/gtkstub.c	/^gboolean gtk_accel_label_refetch(GtkAccelLabel \*accel_label)$/;"	f
gtk_accel_label_set_accel_widget	stubs/gtkstub.c	/^void gtk_accel_label_set_accel_widget(GtkAccelLabel \*accel_label, GtkWidget \*accel_widget)$/;"	f
gtk_accelerator_get_default_mod_mask	stubs/gtkstub.c	/^guint gtk_accelerator_get_default_mod_mask(void)$/;"	f
gtk_accelerator_name	stubs/gtkstub.c	/^gchar\* gtk_accelerator_name(guint accelerator_key, GdkModifierType accelerator_mods)$/;"	f
gtk_accelerator_parse	stubs/gtkstub.c	/^void gtk_accelerator_parse(const gchar \*accelerator, guint \*accelerator_key, GdkModifierType \*accelerator_mods)$/;"	f
gtk_accelerator_set_default_mod_mask	stubs/gtkstub.c	/^void gtk_accelerator_set_default_mod_mask(GdkModifierType default_mod_mask)$/;"	f
gtk_accelerator_valid	stubs/gtkstub.c	/^gboolean gtk_accelerator_valid(guint keyval, GdkModifierType modifiers)$/;"	f
gtk_adjustment_changed	stubs/gtkstub.c	/^void gtk_adjustment_changed(GtkAdjustment \*adjustment)$/;"	f
gtk_adjustment_clamp_page	stubs/gtkstub.c	/^void gtk_adjustment_clamp_page(GtkAdjustment \*adjustment, gfloat lower, gfloat upper)$/;"	f
gtk_adjustment_get_type	stubs/gtkstub.c	/^GtkType gtk_adjustment_get_type(void)$/;"	f
gtk_adjustment_new	stubs/gtkstub.c	/^GtkObject\* gtk_adjustment_new(gfloat value, gfloat lower, gfloat upper, gfloat step_increment, gfloat page_increment, gfloat page_size)$/;"	f
gtk_adjustment_set_value	stubs/gtkstub.c	/^void gtk_adjustment_set_value(GtkAdjustment \*adjustment, gfloat value)$/;"	f
gtk_adjustment_value_changed	stubs/gtkstub.c	/^void gtk_adjustment_value_changed(GtkAdjustment \*adjustment)$/;"	f
gtk_alignment_get_type	stubs/gtkstub.c	/^GtkType gtk_alignment_get_type(void)$/;"	f
gtk_alignment_new	stubs/gtkstub.c	/^GtkWidget\* gtk_alignment_new(gfloat xalign, gfloat yalign, gfloat xscale, gfloat yscale)$/;"	f
gtk_alignment_set	stubs/gtkstub.c	/^void gtk_alignment_set(GtkAlignment \*alignment, gfloat xalign, gfloat yalign, gfloat xscale, gfloat yscale)$/;"	f
gtk_arg_copy	stubs/gtkstub.c	/^GtkArg\* gtk_arg_copy(GtkArg \*src_arg, GtkArg \*dest_arg)$/;"	f
gtk_arg_free	stubs/gtkstub.c	/^void gtk_arg_free(GtkArg \*arg, gboolean free_contents)$/;"	f
gtk_arg_get_info	stubs/gtkstub.c	/^gchar\* gtk_arg_get_info(GtkType object_type, GHashTable \*arg_info_hash_table, const gchar \*arg_name, GtkArgInfo \*\*info_p)$/;"	f
gtk_arg_info_equal	stubs/gtkstub.c	/^gint gtk_arg_info_equal(gconstpointer arg_info_1, gconstpointer arg_info_2)$/;"	f
gtk_arg_info_hash	stubs/gtkstub.c	/^guint gtk_arg_info_hash(gconstpointer arg_info)$/;"	f
gtk_arg_name_strip_type	stubs/gtkstub.c	/^gchar\* gtk_arg_name_strip_type(const gchar \*arg_name)$/;"	f
gtk_arg_new	stubs/gtkstub.c	/^GtkArg\* gtk_arg_new(GtkType arg_type)$/;"	f
gtk_arg_reset	stubs/gtkstub.c	/^void gtk_arg_reset(GtkArg \*arg)$/;"	f
gtk_arg_to_valueloc	stubs/gtkstub.c	/^void gtk_arg_to_valueloc(GtkArg \*arg, gpointer value_pointer)$/;"	f
gtk_arg_type_new_static	stubs/gtkstub.c	/^GtkArgInfo\* gtk_arg_type_new_static(GtkType base_class_type, const gchar \*arg_name, guint class_n_args_offset, GHashTable \*arg_info_hash_table, GtkType arg_t/;"	f
gtk_arg_values_equal	stubs/gtkstub.c	/^gboolean gtk_arg_values_equal(const GtkArg \*arg1, const GtkArg \*arg2)$/;"	f
gtk_args_collect	stubs/gtkstub.c	/^gchar\* gtk_args_collect(GtkType object_type, GHashTable \*arg_info_hash_table, GSList \*\*arg_list_p, GSList \*\*info_list_p, const gchar \*first_arg_name, va_/;"	f
gtk_args_collect_cleanup	stubs/gtkstub.c	/^void gtk_args_collect_cleanup(GSList \*arg_list, GSList \*info_list)$/;"	f
gtk_args_query	stubs/gtkstub.c	/^GtkArg\* gtk_args_query(GtkType class_type, GHashTable \*arg_info_hash_table, guint32 \*\*arg_flags, guint \*n_args_p)$/;"	f
gtk_arrow_get_type	stubs/gtkstub.c	/^GtkType gtk_arrow_get_type(void)$/;"	f
gtk_arrow_new	stubs/gtkstub.c	/^GtkWidget\* gtk_arrow_new(GtkArrowType arrow_type, GtkShadowType shadow_type)$/;"	f
gtk_arrow_set	stubs/gtkstub.c	/^void gtk_arrow_set(GtkArrow \*arrow, GtkArrowType arrow_type, GtkShadowType shadow_type)$/;"	f
gtk_aspect_frame_get_type	stubs/gtkstub.c	/^GtkType gtk_aspect_frame_get_type(void)$/;"	f
gtk_aspect_frame_new	stubs/gtkstub.c	/^GtkWidget\* gtk_aspect_frame_new(const gchar \*label, gfloat xalign, gfloat yalign, gfloat ratio, gboolean obey_child)$/;"	f
gtk_aspect_frame_set	stubs/gtkstub.c	/^void gtk_aspect_frame_set(GtkAspectFrame \*aspect_frame, gfloat xalign, gfloat yalign, gfloat ratio, gboolean obey_child)$/;"	f
gtk_bin_get_type	stubs/gtkstub.c	/^GtkType gtk_bin_get_type(void)$/;"	f
gtk_binding_entry_add	stubs/gtkstub.c	830;"	d
gtk_binding_entry_add_signal	stubs/gtkstub.c	/^void gtk_binding_entry_add_signal(GtkBindingSet \*binding_set, guint keyval, guint modifiers, const gchar \*signal_name, guint n_args, \.\.\.)$/;"	f
gtk_binding_entry_clear	stubs/gtkstub.c	/^void gtk_binding_entry_clear(GtkBindingSet \*binding_set, guint keyval, guint modifiers)$/;"	f
gtk_binding_set_activate	stubs/gtkstub.c	/^gboolean gtk_binding_set_activate(GtkBindingSet \*binding_set, guint keyval, guint modifiers, GtkObject \*object)$/;"	f
gtk_binding_set_add_path	stubs/gtkstub.c	/^void gtk_binding_set_add_path(GtkBindingSet \*binding_set, GtkPathType path_type, const gchar \*path_pattern, GtkPathPriorityType priority)$/;"	f
gtk_binding_set_by_class	stubs/gtkstub.c	/^GtkBindingSet\* gtk_binding_set_by_class(gpointer object_class)$/;"	f
gtk_binding_set_find	stubs/gtkstub.c	/^GtkBindingSet\* gtk_binding_set_find(const gchar \*set_name)$/;"	f
gtk_binding_set_new	stubs/gtkstub.c	/^GtkBindingSet\* gtk_binding_set_new(const gchar \*set_name)$/;"	f
gtk_bindings_activate	stubs/gtkstub.c	/^gboolean gtk_bindings_activate(GtkObject \*object, guint keyval, guint modifiers)$/;"	f
gtk_box_get_type	stubs/gtkstub.c	/^GtkType gtk_box_get_type(void)$/;"	f
gtk_box_pack_end	stubs/gtkstub.c	/^void gtk_box_pack_end(GtkBox \*box, GtkWidget \*child, gboolean expand, gboolean fill, guint padding)$/;"	f
gtk_box_pack_end_defaults	stubs/gtkstub.c	/^void gtk_box_pack_end_defaults(GtkBox \*box, GtkWidget \*widget)$/;"	f
gtk_box_pack_start	stubs/gtkstub.c	/^void gtk_box_pack_start(GtkBox \*box, GtkWidget \*child, gboolean expand, gboolean fill, guint padding)$/;"	f
gtk_box_pack_start_defaults	stubs/gtkstub.c	/^void gtk_box_pack_start_defaults(GtkBox \*box, GtkWidget \*widget)$/;"	f
gtk_box_query_child_packing	stubs/gtkstub.c	/^void gtk_box_query_child_packing(GtkBox \*box, GtkWidget \*child, gboolean \*expand, gboolean \*fill, guint \*padding, GtkPackType \*pack_type)$/;"	f
gtk_box_reorder_child	stubs/gtkstub.c	/^void gtk_box_reorder_child(GtkBox \*box, GtkWidget \*child, gint position)$/;"	f
gtk_box_set_child_packing	stubs/gtkstub.c	/^void gtk_box_set_child_packing(GtkBox \*box, GtkWidget \*child, gboolean expand, gboolean fill, guint padding, GtkPackType pack_type)$/;"	f
gtk_box_set_homogeneous	stubs/gtkstub.c	/^void gtk_box_set_homogeneous(GtkBox \*box, gboolean homogeneous)$/;"	f
gtk_box_set_spacing	stubs/gtkstub.c	/^void gtk_box_set_spacing(GtkBox \*box, gint spacing)$/;"	f
gtk_button_box_get_child_ipadding	stubs/gtkstub.c	/^void gtk_button_box_get_child_ipadding(GtkButtonBox \*widget, gint \*ipad_x, gint \*ipad_y)$/;"	f
gtk_button_box_get_child_ipadding_default	stubs/gtkstub.c	/^void gtk_button_box_get_child_ipadding_default(gint \*ipad_x, gint \*ipad_y)$/;"	f
gtk_button_box_get_child_size	stubs/gtkstub.c	/^void gtk_button_box_get_child_size(GtkButtonBox \*widget, gint \*min_width, gint \*min_height)$/;"	f
gtk_button_box_get_child_size_default	stubs/gtkstub.c	/^void gtk_button_box_get_child_size_default(gint \*min_width, gint \*min_height)$/;"	f
gtk_button_box_get_layout	stubs/gtkstub.c	/^GtkButtonBoxStyle gtk_button_box_get_layout(GtkButtonBox \*widget)$/;"	f
gtk_button_box_get_spacing	stubs/gtkstub.c	/^gint gtk_button_box_get_spacing(GtkButtonBox \*widget)$/;"	f
gtk_button_box_get_type	stubs/gtkstub.c	/^GtkType gtk_button_box_get_type(void)$/;"	f
gtk_button_box_set_child_ipadding	stubs/gtkstub.c	/^void gtk_button_box_set_child_ipadding(GtkButtonBox \*widget, gint ipad_x, gint ipad_y)$/;"	f
gtk_button_box_set_child_ipadding_default	stubs/gtkstub.c	/^void gtk_button_box_set_child_ipadding_default(gint ipad_x, gint ipad_y)$/;"	f
gtk_button_box_set_child_size	stubs/gtkstub.c	/^void gtk_button_box_set_child_size(GtkButtonBox \*widget, gint min_width, gint min_height)$/;"	f
gtk_button_box_set_child_size_default	stubs/gtkstub.c	/^void gtk_button_box_set_child_size_default(gint min_width, gint min_height)$/;"	f
gtk_button_box_set_layout	stubs/gtkstub.c	/^void gtk_button_box_set_layout(GtkButtonBox \*widget, GtkButtonBoxStyle layout_style)$/;"	f
gtk_button_box_set_spacing	stubs/gtkstub.c	/^void gtk_button_box_set_spacing(GtkButtonBox \*widget, gint spacing)$/;"	f
gtk_button_clicked	stubs/gtkstub.c	/^void gtk_button_clicked(GtkButton \*button)$/;"	f
gtk_button_enter	stubs/gtkstub.c	/^void gtk_button_enter(GtkButton \*button)$/;"	f
gtk_button_get_relief	stubs/gtkstub.c	/^GtkReliefStyle gtk_button_get_relief(GtkButton \*button)$/;"	f
gtk_button_get_type	stubs/gtkstub.c	/^GtkType gtk_button_get_type(void)$/;"	f
gtk_button_leave	stubs/gtkstub.c	/^void gtk_button_leave(GtkButton \*button)$/;"	f
gtk_button_new	stubs/gtkstub.c	/^GtkWidget\* gtk_button_new(void)$/;"	f
gtk_button_new_with_label	stubs/gtkstub.c	/^GtkWidget\* gtk_button_new_with_label(const gchar \*label)$/;"	f
gtk_button_pressed	stubs/gtkstub.c	/^void gtk_button_pressed(GtkButton \*button)$/;"	f
gtk_button_released	stubs/gtkstub.c	/^void gtk_button_released(GtkButton \*button)$/;"	f
gtk_button_set_relief	stubs/gtkstub.c	/^void gtk_button_set_relief(GtkButton \*button, GtkReliefStyle newstyle)$/;"	f
gtk_calendar_clear_marks	stubs/gtkstub.c	/^void gtk_calendar_clear_marks(GtkCalendar \*calendar)$/;"	f
gtk_calendar_display_options	stubs/gtkstub.c	/^void gtk_calendar_display_options(GtkCalendar \*calendar, GtkCalendarDisplayOptions flags)$/;"	f
gtk_calendar_freeze	stubs/gtkstub.c	/^void gtk_calendar_freeze(GtkCalendar \*calendar)$/;"	f
gtk_calendar_get_date	stubs/gtkstub.c	/^void gtk_calendar_get_date(GtkCalendar \*calendar, guint \*year, guint \*month, guint \*day)$/;"	f
gtk_calendar_get_type	stubs/gtkstub.c	/^GtkType gtk_calendar_get_type(void)$/;"	f
gtk_calendar_mark_day	stubs/gtkstub.c	/^gint gtk_calendar_mark_day(GtkCalendar \*calendar, guint day)$/;"	f
gtk_calendar_new	stubs/gtkstub.c	/^GtkWidget\* gtk_calendar_new(void)$/;"	f
gtk_calendar_select_day	stubs/gtkstub.c	/^void gtk_calendar_select_day(GtkCalendar \*calendar, guint day)$/;"	f
gtk_calendar_select_month	stubs/gtkstub.c	/^gint gtk_calendar_select_month(GtkCalendar \*calendar, guint month, guint year)$/;"	f
gtk_calendar_thaw	stubs/gtkstub.c	/^void gtk_calendar_thaw(GtkCalendar \*calendar)$/;"	f
gtk_calendar_unmark_day	stubs/gtkstub.c	/^gint gtk_calendar_unmark_day(GtkCalendar \*calendar, guint day)$/;"	f
gtk_check_button_get_type	stubs/gtkstub.c	/^GtkType gtk_check_button_get_type(void)$/;"	f
gtk_check_button_new	stubs/gtkstub.c	/^GtkWidget\* gtk_check_button_new(void)$/;"	f
gtk_check_button_new_with_label	stubs/gtkstub.c	/^GtkWidget\* gtk_check_button_new_with_label(const gchar \*label)$/;"	f
gtk_check_menu_item_get_type	stubs/gtkstub.c	/^GtkType gtk_check_menu_item_get_type(void)$/;"	f
gtk_check_menu_item_new	stubs/gtkstub.c	/^GtkWidget\* gtk_check_menu_item_new(void)$/;"	f
gtk_check_menu_item_new_with_label	stubs/gtkstub.c	/^GtkWidget\* gtk_check_menu_item_new_with_label(const gchar \*label)$/;"	f
gtk_check_menu_item_set_active	stubs/gtkstub.c	/^void gtk_check_menu_item_set_active(GtkCheckMenuItem \*check_menu_item, gboolean is_active)$/;"	f
gtk_check_menu_item_set_show_toggle	stubs/gtkstub.c	/^void gtk_check_menu_item_set_show_toggle(GtkCheckMenuItem \*menu_item, gboolean always)$/;"	f
gtk_check_menu_item_set_state	stubs/gtkstub.c	2592;"	d
gtk_check_menu_item_toggled	stubs/gtkstub.c	/^void gtk_check_menu_item_toggled(GtkCheckMenuItem \*check_menu_item)$/;"	f
gtk_check_version	stubs/gtkstub.c	/^gchar\* gtk_check_version(guint required_major, guint required_minor, guint required_micro)$/;"	f
gtk_clist_append	stubs/gtkstub.c	/^gint gtk_clist_append(GtkCList \*clist, gchar \*text\[\])$/;"	f
gtk_clist_clear	stubs/gtkstub.c	/^void gtk_clist_clear(GtkCList \*clist)$/;"	f
gtk_clist_column_title_active	stubs/gtkstub.c	/^void gtk_clist_column_title_active(GtkCList \*clist, gint column)$/;"	f
gtk_clist_column_title_passive	stubs/gtkstub.c	/^void gtk_clist_column_title_passive(GtkCList \*clist, gint column)$/;"	f
gtk_clist_column_titles_active	stubs/gtkstub.c	/^void gtk_clist_column_titles_active(GtkCList \*clist)$/;"	f
gtk_clist_column_titles_hide	stubs/gtkstub.c	/^void gtk_clist_column_titles_hide(GtkCList \*clist)$/;"	f
gtk_clist_column_titles_passive	stubs/gtkstub.c	/^void gtk_clist_column_titles_passive(GtkCList \*clist)$/;"	f
gtk_clist_column_titles_show	stubs/gtkstub.c	/^void gtk_clist_column_titles_show(GtkCList \*clist)$/;"	f
gtk_clist_columns_autosize	stubs/gtkstub.c	/^gint gtk_clist_columns_autosize(GtkCList \*clist)$/;"	f
gtk_clist_construct	stubs/gtkstub.c	/^void gtk_clist_construct(GtkCList \*clist, gint columns, gchar \*titles\[\])$/;"	f
gtk_clist_find_row_from_data	stubs/gtkstub.c	/^gint gtk_clist_find_row_from_data(GtkCList \*clist, gpointer data)$/;"	f
gtk_clist_freeze	stubs/gtkstub.c	/^void gtk_clist_freeze(GtkCList \*clist)$/;"	f
gtk_clist_get_cell_style	stubs/gtkstub.c	/^GtkStyle \*gtk_clist_get_cell_style(GtkCList \*clist, gint row, gint column)$/;"	f
gtk_clist_get_cell_type	stubs/gtkstub.c	/^GtkCellType gtk_clist_get_cell_type(GtkCList \*clist, gint row, gint column)$/;"	f
gtk_clist_get_column_title	stubs/gtkstub.c	/^gchar \* gtk_clist_get_column_title(GtkCList \*clist, gint column)$/;"	f
gtk_clist_get_column_widget	stubs/gtkstub.c	/^GtkWidget \* gtk_clist_get_column_widget(GtkCList \*clist, gint column)$/;"	f
gtk_clist_get_hadjustment	stubs/gtkstub.c	/^GtkAdjustment\* gtk_clist_get_hadjustment(GtkCList \*clist)$/;"	f
gtk_clist_get_pixmap	stubs/gtkstub.c	/^gint gtk_clist_get_pixmap(GtkCList \*clist, gint row, gint column, GdkPixmap \*\*pixmap, GdkBitmap \*\*mask)$/;"	f
gtk_clist_get_pixtext	stubs/gtkstub.c	/^gint gtk_clist_get_pixtext(GtkCList \*clist, gint row, gint column, gchar \*\*text, guint8 \*spacing, GdkPixmap \*\*pixmap, GdkBitmap \*\*mask)$/;"	f
gtk_clist_get_row_data	stubs/gtkstub.c	/^gpointer gtk_clist_get_row_data(GtkCList \*clist, gint row)$/;"	f
gtk_clist_get_row_style	stubs/gtkstub.c	/^GtkStyle \*gtk_clist_get_row_style(GtkCList \*clist, gint row)$/;"	f
gtk_clist_get_selectable	stubs/gtkstub.c	/^gboolean gtk_clist_get_selectable(GtkCList \*clist, gint row)$/;"	f
gtk_clist_get_selection_info	stubs/gtkstub.c	/^gint gtk_clist_get_selection_info(GtkCList \*clist, gint x, gint y, gint \*row, gint \*column)$/;"	f
gtk_clist_get_text	stubs/gtkstub.c	/^gint gtk_clist_get_text(GtkCList \*clist, gint row, gint column, gchar \*\*text)$/;"	f
gtk_clist_get_type	stubs/gtkstub.c	/^GtkType gtk_clist_get_type(void)$/;"	f
gtk_clist_get_vadjustment	stubs/gtkstub.c	/^GtkAdjustment\* gtk_clist_get_vadjustment(GtkCList \*clist)$/;"	f
gtk_clist_insert	stubs/gtkstub.c	/^gint gtk_clist_insert(GtkCList \*clist, gint row, gchar \*text\[\])$/;"	f
gtk_clist_moveto	stubs/gtkstub.c	/^void gtk_clist_moveto(GtkCList \*clist, gint row, gint column, gfloat row_align, gfloat col_align)$/;"	f
gtk_clist_new	stubs/gtkstub.c	/^GtkWidget\* gtk_clist_new(gint columns)$/;"	f
gtk_clist_new_with_titles	stubs/gtkstub.c	/^GtkWidget\* gtk_clist_new_with_titles(gint columns, gchar \*titles\[\])$/;"	f
gtk_clist_optimal_column_width	stubs/gtkstub.c	/^gint gtk_clist_optimal_column_width(GtkCList \*clist, gint column)$/;"	f
gtk_clist_prepend	stubs/gtkstub.c	/^gint gtk_clist_prepend(GtkCList \*clist, gchar \*text\[\])$/;"	f
gtk_clist_remove	stubs/gtkstub.c	/^void gtk_clist_remove(GtkCList \*clist, gint row)$/;"	f
gtk_clist_row_is_visible	stubs/gtkstub.c	/^GtkVisibility gtk_clist_row_is_visible(GtkCList \*clist, gint row)$/;"	f
gtk_clist_row_move	stubs/gtkstub.c	/^void gtk_clist_row_move(GtkCList \*clist, gint source_row, gint dest_row)$/;"	f
gtk_clist_select_all	stubs/gtkstub.c	/^void gtk_clist_select_all(GtkCList \*clist)$/;"	f
gtk_clist_select_row	stubs/gtkstub.c	/^void gtk_clist_select_row(GtkCList \*clist, gint row, gint column)$/;"	f
gtk_clist_set_auto_sort	stubs/gtkstub.c	/^void gtk_clist_set_auto_sort(GtkCList \*clist, gboolean auto_sort)$/;"	f
gtk_clist_set_background	stubs/gtkstub.c	/^void gtk_clist_set_background(GtkCList \*clist, gint row, GdkColor \*color)$/;"	f
gtk_clist_set_button_actions	stubs/gtkstub.c	/^void gtk_clist_set_button_actions(GtkCList \*clist, guint button, guint8 button_actions)$/;"	f
gtk_clist_set_cell_style	stubs/gtkstub.c	/^void gtk_clist_set_cell_style(GtkCList \*clist, gint row, gint column, GtkStyle \*style)$/;"	f
gtk_clist_set_column_auto_resize	stubs/gtkstub.c	/^void gtk_clist_set_column_auto_resize(GtkCList \*clist, gint column, gboolean auto_resize)$/;"	f
gtk_clist_set_column_justification	stubs/gtkstub.c	/^void gtk_clist_set_column_justification(GtkCList \*clist, gint column, GtkJustification justification)$/;"	f
gtk_clist_set_column_max_width	stubs/gtkstub.c	/^void gtk_clist_set_column_max_width(GtkCList \*clist, gint column, gint max_width)$/;"	f
gtk_clist_set_column_min_width	stubs/gtkstub.c	/^void gtk_clist_set_column_min_width(GtkCList \*clist, gint column, gint min_width)$/;"	f
gtk_clist_set_column_resizeable	stubs/gtkstub.c	/^void gtk_clist_set_column_resizeable(GtkCList \*clist, gint column, gboolean resizeable)$/;"	f
gtk_clist_set_column_title	stubs/gtkstub.c	/^void gtk_clist_set_column_title(GtkCList \*clist, gint column, const gchar \*title)$/;"	f
gtk_clist_set_column_visibility	stubs/gtkstub.c	/^void gtk_clist_set_column_visibility(GtkCList \*clist, gint column, gboolean visible)$/;"	f
gtk_clist_set_column_widget	stubs/gtkstub.c	/^void gtk_clist_set_column_widget(GtkCList \*clist, gint column, GtkWidget \*widget)$/;"	f
gtk_clist_set_column_width	stubs/gtkstub.c	/^void gtk_clist_set_column_width(GtkCList \*clist, gint column, gint width)$/;"	f
gtk_clist_set_compare_func	stubs/gtkstub.c	/^void gtk_clist_set_compare_func(GtkCList \*clist, GtkCListCompareFunc cmp_func)$/;"	f
gtk_clist_set_foreground	stubs/gtkstub.c	/^void gtk_clist_set_foreground(GtkCList \*clist, gint row, GdkColor \*color)$/;"	f
gtk_clist_set_hadjustment	stubs/gtkstub.c	/^void gtk_clist_set_hadjustment(GtkCList \*clist, GtkAdjustment \*adjustment)$/;"	f
gtk_clist_set_pixmap	stubs/gtkstub.c	/^void gtk_clist_set_pixmap(GtkCList \*clist, gint row, gint column, GdkPixmap \*pixmap, GdkBitmap \*mask)$/;"	f
gtk_clist_set_pixtext	stubs/gtkstub.c	/^void gtk_clist_set_pixtext(GtkCList \*clist, gint row, gint column, const gchar \*text, guint8 spacing, GdkPixmap \*pixmap, GdkBitmap \*mask)$/;"	f
gtk_clist_set_reorderable	stubs/gtkstub.c	/^void gtk_clist_set_reorderable(GtkCList \*clist, gboolean reorderable)$/;"	f
gtk_clist_set_row_data	stubs/gtkstub.c	/^void gtk_clist_set_row_data(GtkCList \*clist, gint row, gpointer data)$/;"	f
gtk_clist_set_row_data_full	stubs/gtkstub.c	/^void gtk_clist_set_row_data_full(GtkCList \*clist, gint row, gpointer data, GtkDestroyNotify destroy)$/;"	f
gtk_clist_set_row_height	stubs/gtkstub.c	/^void gtk_clist_set_row_height(GtkCList \*clist, guint height)$/;"	f
gtk_clist_set_row_style	stubs/gtkstub.c	/^void gtk_clist_set_row_style(GtkCList \*clist, gint row, GtkStyle \*style)$/;"	f
gtk_clist_set_selectable	stubs/gtkstub.c	/^void gtk_clist_set_selectable(GtkCList \*clist, gint row, gboolean selectable)$/;"	f
gtk_clist_set_selection_mode	stubs/gtkstub.c	/^void gtk_clist_set_selection_mode(GtkCList \*clist, GtkSelectionMode mode)$/;"	f
gtk_clist_set_shadow_type	stubs/gtkstub.c	/^void gtk_clist_set_shadow_type(GtkCList \*clist, GtkShadowType type)$/;"	f
gtk_clist_set_shift	stubs/gtkstub.c	/^void gtk_clist_set_shift(GtkCList \*clist, gint row, gint column, gint vertical, gint horizontal)$/;"	f
gtk_clist_set_sort_column	stubs/gtkstub.c	/^void gtk_clist_set_sort_column(GtkCList \*clist, gint column)$/;"	f
gtk_clist_set_sort_type	stubs/gtkstub.c	/^void gtk_clist_set_sort_type(GtkCList \*clist, GtkSortType sort_type)$/;"	f
gtk_clist_set_text	stubs/gtkstub.c	/^void gtk_clist_set_text(GtkCList \*clist, gint row, gint column, const gchar \*text)$/;"	f
gtk_clist_set_use_drag_icons	stubs/gtkstub.c	/^void gtk_clist_set_use_drag_icons(GtkCList \*clist, gboolean use_icons)$/;"	f
gtk_clist_set_vadjustment	stubs/gtkstub.c	/^void gtk_clist_set_vadjustment(GtkCList \*clist, GtkAdjustment \*adjustment)$/;"	f
gtk_clist_sort	stubs/gtkstub.c	/^void gtk_clist_sort(GtkCList \*clist)$/;"	f
gtk_clist_swap_rows	stubs/gtkstub.c	/^void gtk_clist_swap_rows(GtkCList \*clist, gint row1, gint row2)$/;"	f
gtk_clist_thaw	stubs/gtkstub.c	/^void gtk_clist_thaw(GtkCList \*clist)$/;"	f
gtk_clist_undo_selection	stubs/gtkstub.c	/^void gtk_clist_undo_selection(GtkCList \*clist)$/;"	f
gtk_clist_unselect_all	stubs/gtkstub.c	/^void gtk_clist_unselect_all(GtkCList \*clist)$/;"	f
gtk_clist_unselect_row	stubs/gtkstub.c	/^void gtk_clist_unselect_row(GtkCList \*clist, gint row, gint column)$/;"	f
gtk_color_selection_dialog_get_type	stubs/gtkstub.c	/^GtkType gtk_color_selection_dialog_get_type(void)$/;"	f
gtk_color_selection_dialog_new	stubs/gtkstub.c	/^GtkWidget\* gtk_color_selection_dialog_new(const gchar \*title)$/;"	f
gtk_color_selection_get_color	stubs/gtkstub.c	/^void gtk_color_selection_get_color(GtkColorSelection \*colorsel, gdouble \*color)$/;"	f
gtk_color_selection_get_type	stubs/gtkstub.c	/^GtkType gtk_color_selection_get_type(void)$/;"	f
gtk_color_selection_new	stubs/gtkstub.c	/^GtkWidget\* gtk_color_selection_new(void)$/;"	f
gtk_color_selection_set_color	stubs/gtkstub.c	/^void gtk_color_selection_set_color(GtkColorSelection \*colorsel, gdouble \*color)$/;"	f
gtk_color_selection_set_opacity	stubs/gtkstub.c	/^void gtk_color_selection_set_opacity(GtkColorSelection \*colorsel, gint use_opacity)$/;"	f
gtk_color_selection_set_update_policy	stubs/gtkstub.c	/^void gtk_color_selection_set_update_policy(GtkColorSelection \*colorsel, GtkUpdateType policy)$/;"	f
gtk_combo_disable_activate	stubs/gtkstub.c	/^void gtk_combo_disable_activate(GtkCombo\* combo)$/;"	f
gtk_combo_get_type	stubs/gtkstub.c	/^guint gtk_combo_get_type(void)$/;"	f
gtk_combo_new	stubs/gtkstub.c	/^GtkWidget \*gtk_combo_new(void)$/;"	f
gtk_combo_set_case_sensitive	stubs/gtkstub.c	/^void gtk_combo_set_case_sensitive(GtkCombo\* combo, gint val)$/;"	f
gtk_combo_set_item_string	stubs/gtkstub.c	/^void gtk_combo_set_item_string(GtkCombo\* combo, GtkItem\* item, const gchar\* item_value)$/;"	f
gtk_combo_set_popdown_strings	stubs/gtkstub.c	/^void gtk_combo_set_popdown_strings(GtkCombo\* combo, GList \*strings)$/;"	f
gtk_combo_set_use_arrows	stubs/gtkstub.c	/^void gtk_combo_set_use_arrows(GtkCombo\* combo, gint val)$/;"	f
gtk_combo_set_use_arrows_always	stubs/gtkstub.c	/^void gtk_combo_set_use_arrows_always(GtkCombo\* combo, gint val)$/;"	f
gtk_combo_set_value_in_list	stubs/gtkstub.c	/^void gtk_combo_set_value_in_list(GtkCombo\* combo, gint val, gint ok_if_empty)$/;"	f
gtk_container_add	stubs/gtkstub.c	/^void gtk_container_add(GtkContainer \*container, GtkWidget \*widget)$/;"	f
gtk_container_add_child_arg_type	stubs/gtkstub.c	/^void gtk_container_add_child_arg_type(const gchar \*arg_name, GtkType arg_type, guint arg_flags, guint arg_id)$/;"	f
gtk_container_add_with_args	stubs/gtkstub.c	/^void gtk_container_add_with_args(GtkContainer \*container, GtkWidget \*widget, const gchar \*first_arg_name, \.\.\.)$/;"	f
gtk_container_addv	stubs/gtkstub.c	/^void gtk_container_addv(GtkContainer \*container, GtkWidget \*widget, guint n_args, GtkArg \*args)$/;"	f
gtk_container_arg_get	stubs/gtkstub.c	/^void gtk_container_arg_get(GtkContainer \*container, GtkWidget \*child, GtkArg \*arg, GtkArgInfo \*info)$/;"	f
gtk_container_arg_set	stubs/gtkstub.c	/^void gtk_container_arg_set(GtkContainer \*container, GtkWidget \*child, GtkArg \*arg, GtkArgInfo \*info)$/;"	f
gtk_container_border_width	stubs/gtkstub.c	2568;"	d
gtk_container_check_resize	stubs/gtkstub.c	/^void gtk_container_check_resize(GtkContainer \*container)$/;"	f
gtk_container_child_arg_get_info	stubs/gtkstub.c	/^gchar\* gtk_container_child_arg_get_info(GtkType object_type, const gchar \*arg_name, GtkArgInfo \*\*info_p)$/;"	f
gtk_container_child_args_collect	stubs/gtkstub.c	/^gchar\* gtk_container_child_args_collect(GtkType object_type, GSList \*\*arg_list_p, GSList \*\*info_list_p, const gchar \*first_arg_name, va_list args)$/;"	f
gtk_container_child_composite_name	stubs/gtkstub.c	/^gchar\* gtk_container_child_composite_name(GtkContainer \*container, GtkWidget \*child)$/;"	f
gtk_container_child_getv	stubs/gtkstub.c	/^void gtk_container_child_getv(GtkContainer \*container, GtkWidget \*child, guint n_args, GtkArg \*args)$/;"	f
gtk_container_child_set	stubs/gtkstub.c	/^void gtk_container_child_set(GtkContainer \*container, GtkWidget \*child, const gchar \*first_arg_name, \.\.\.)$/;"	f
gtk_container_child_setv	stubs/gtkstub.c	/^void gtk_container_child_setv(GtkContainer \*container, GtkWidget \*child, guint n_args, GtkArg \*args)$/;"	f
gtk_container_child_type	stubs/gtkstub.c	/^GtkType gtk_container_child_type(GtkContainer \*container)$/;"	f
gtk_container_children	stubs/gtkstub.c	/^GList\* gtk_container_children(GtkContainer \*container)$/;"	f
gtk_container_clear_resize_widgets	stubs/gtkstub.c	/^void gtk_container_clear_resize_widgets(GtkContainer \*container)$/;"	f
gtk_container_dequeue_resize_handler	stubs/gtkstub.c	/^void gtk_container_dequeue_resize_handler(GtkContainer \*container)$/;"	f
gtk_container_focus	stubs/gtkstub.c	/^gint gtk_container_focus(GtkContainer \*container, GtkDirectionType direction)$/;"	f
gtk_container_forall	stubs/gtkstub.c	/^void gtk_container_forall(GtkContainer \*container, GtkCallback callback, gpointer callback_data)$/;"	f
gtk_container_foreach	stubs/gtkstub.c	/^void gtk_container_foreach(GtkContainer \*container, GtkCallback callback, gpointer callback_data)$/;"	f
gtk_container_foreach_full	stubs/gtkstub.c	/^void gtk_container_foreach_full(GtkContainer \*container, GtkCallback callback, GtkCallbackMarshal marshal, gpointer callback_data, GtkDestroyNotify notify)$/;"	f
gtk_container_get_toplevels	stubs/gtkstub.c	/^GList\* gtk_container_get_toplevels(void)$/;"	f
gtk_container_get_type	stubs/gtkstub.c	/^GtkType gtk_container_get_type(void)$/;"	f
gtk_container_query_child_args	stubs/gtkstub.c	/^GtkArg\* gtk_container_query_child_args(GtkType class_type, guint32 \*\*arg_flags, guint \*nargs)$/;"	f
gtk_container_queue_resize	stubs/gtkstub.c	/^void gtk_container_queue_resize(GtkContainer \*container)$/;"	f
gtk_container_register_toplevel	stubs/gtkstub.c	/^void gtk_container_register_toplevel(GtkContainer \*container)$/;"	f
gtk_container_remove	stubs/gtkstub.c	/^void gtk_container_remove(GtkContainer \*container, GtkWidget \*widget)$/;"	f
gtk_container_resize_children	stubs/gtkstub.c	/^void gtk_container_resize_children(GtkContainer \*container)$/;"	f
gtk_container_set_border_width	stubs/gtkstub.c	/^void gtk_container_set_border_width(GtkContainer \*container, guint border_width)$/;"	f
gtk_container_set_focus_child	stubs/gtkstub.c	/^void gtk_container_set_focus_child(GtkContainer \*container, GtkWidget \*child)$/;"	f
gtk_container_set_focus_hadjustment	stubs/gtkstub.c	/^void gtk_container_set_focus_hadjustment(GtkContainer \*container, GtkAdjustment \*adjustment)$/;"	f
gtk_container_set_focus_vadjustment	stubs/gtkstub.c	/^void gtk_container_set_focus_vadjustment(GtkContainer \*container, GtkAdjustment \*adjustment)$/;"	f
gtk_container_set_reallocate_redraws	stubs/gtkstub.c	/^void gtk_container_set_reallocate_redraws(GtkContainer \*container, gboolean needs_redraws)$/;"	f
gtk_container_set_resize_mode	stubs/gtkstub.c	/^void gtk_container_set_resize_mode(GtkContainer \*container, GtkResizeMode resize_mode)$/;"	f
gtk_container_unregister_toplevel	stubs/gtkstub.c	/^void gtk_container_unregister_toplevel(GtkContainer \*container)$/;"	f
gtk_ctree_collapse	stubs/gtkstub.c	/^void gtk_ctree_collapse(GtkCTree \*ctree, GtkCTreeNode \*node)$/;"	f
gtk_ctree_collapse_recursive	stubs/gtkstub.c	/^void gtk_ctree_collapse_recursive(GtkCTree \*ctree, GtkCTreeNode \*node)$/;"	f
gtk_ctree_collapse_to_depth	stubs/gtkstub.c	/^void gtk_ctree_collapse_to_depth(GtkCTree \*ctree, GtkCTreeNode \*node, gint depth)$/;"	f
gtk_ctree_construct	stubs/gtkstub.c	/^void gtk_ctree_construct(GtkCTree \*ctree, gint columns, gint tree_column, gchar \*titles\[\])$/;"	f
gtk_ctree_expand	stubs/gtkstub.c	/^void gtk_ctree_expand(GtkCTree \*ctree, GtkCTreeNode \*node)$/;"	f
gtk_ctree_expand_recursive	stubs/gtkstub.c	/^void gtk_ctree_expand_recursive(GtkCTree \*ctree, GtkCTreeNode \*node)$/;"	f
gtk_ctree_expand_to_depth	stubs/gtkstub.c	/^void gtk_ctree_expand_to_depth(GtkCTree \*ctree, GtkCTreeNode \*node, gint depth)$/;"	f
gtk_ctree_export_to_gnode	stubs/gtkstub.c	/^GNode \* gtk_ctree_export_to_gnode(GtkCTree \*ctree, GNode \*parent, GNode \*sibling, GtkCTreeNode \*node, GtkCTreeGNodeFunc func, gpointer data)$/;"	f
gtk_ctree_find	stubs/gtkstub.c	/^gboolean gtk_ctree_find(GtkCTree \*ctree, GtkCTreeNode \*node, GtkCTreeNode \*child)$/;"	f
gtk_ctree_find_all_by_row_data	stubs/gtkstub.c	/^GList \* gtk_ctree_find_all_by_row_data(GtkCTree \*ctree, GtkCTreeNode \*node, gpointer data)$/;"	f
gtk_ctree_find_all_by_row_data_custom	stubs/gtkstub.c	/^GList \* gtk_ctree_find_all_by_row_data_custom(GtkCTree \*ctree, GtkCTreeNode \*node, gpointer data, GCompareFunc func)$/;"	f
gtk_ctree_find_by_row_data	stubs/gtkstub.c	/^GtkCTreeNode \* gtk_ctree_find_by_row_data(GtkCTree \*ctree, GtkCTreeNode \*node, gpointer data)$/;"	f
gtk_ctree_find_by_row_data_custom	stubs/gtkstub.c	/^GtkCTreeNode \* gtk_ctree_find_by_row_data_custom(GtkCTree \*ctree, GtkCTreeNode \*node, gpointer data, GCompareFunc func)$/;"	f
gtk_ctree_find_node_ptr	stubs/gtkstub.c	/^GtkCTreeNode \* gtk_ctree_find_node_ptr(GtkCTree \*ctree, GtkCTreeRow \*ctree_row)$/;"	f
gtk_ctree_get_node_info	stubs/gtkstub.c	/^gint gtk_ctree_get_node_info(GtkCTree \*ctree, GtkCTreeNode \*node, gchar \*\*text, guint8 \*spacing, GdkPixmap \*\*pixmap_closed, GdkBitmap \*\*mask_closed, Gd/;"	f
gtk_ctree_get_type	stubs/gtkstub.c	/^GtkType gtk_ctree_get_type(void)$/;"	f
gtk_ctree_insert_gnode	stubs/gtkstub.c	/^GtkCTreeNode \* gtk_ctree_insert_gnode(GtkCTree \*ctree, GtkCTreeNode \*parent, GtkCTreeNode \*sibling, GNode \*gnode, GtkCTreeGNodeFunc func, gpointer data)$/;"	f
gtk_ctree_insert_node	stubs/gtkstub.c	/^GtkCTreeNode \* gtk_ctree_insert_node(GtkCTree \*ctree, GtkCTreeNode \*parent, GtkCTreeNode \*sibling, gchar \*text\[\], guint8 spacing, GdkPixmap \*pixmap_clos/;"	f
gtk_ctree_is_ancestor	stubs/gtkstub.c	/^gboolean gtk_ctree_is_ancestor(GtkCTree \*ctree, GtkCTreeNode \*node, GtkCTreeNode \*child)$/;"	f
gtk_ctree_is_hot_spot	stubs/gtkstub.c	/^gboolean gtk_ctree_is_hot_spot(GtkCTree \*ctree, gint x, gint y)$/;"	f
gtk_ctree_is_viewable	stubs/gtkstub.c	/^gboolean gtk_ctree_is_viewable(GtkCTree \*ctree, GtkCTreeNode \*node)$/;"	f
gtk_ctree_last	stubs/gtkstub.c	/^GtkCTreeNode \* gtk_ctree_last(GtkCTree \*ctree, GtkCTreeNode \*node)$/;"	f
gtk_ctree_move	stubs/gtkstub.c	/^void gtk_ctree_move(GtkCTree \*ctree, GtkCTreeNode \*node, GtkCTreeNode \*new_parent, GtkCTreeNode \*new_sibling)$/;"	f
gtk_ctree_new	stubs/gtkstub.c	/^GtkWidget \* gtk_ctree_new(gint columns, gint tree_column)$/;"	f
gtk_ctree_new_with_titles	stubs/gtkstub.c	/^GtkWidget \* gtk_ctree_new_with_titles(gint columns, gint tree_column, gchar \*titles\[\])$/;"	f
gtk_ctree_node_get_cell_style	stubs/gtkstub.c	/^GtkStyle \* gtk_ctree_node_get_cell_style(GtkCTree \*ctree, GtkCTreeNode \*node, gint column)$/;"	f
gtk_ctree_node_get_cell_type	stubs/gtkstub.c	/^GtkCellType gtk_ctree_node_get_cell_type(GtkCTree \*ctree, GtkCTreeNode \*node, gint column)$/;"	f
gtk_ctree_node_get_pixmap	stubs/gtkstub.c	/^gint gtk_ctree_node_get_pixmap(GtkCTree \*ctree, GtkCTreeNode \*node, gint column, GdkPixmap \*\*pixmap, GdkBitmap \*\*mask)$/;"	f
gtk_ctree_node_get_pixtext	stubs/gtkstub.c	/^gint gtk_ctree_node_get_pixtext(GtkCTree \*ctree, GtkCTreeNode \*node, gint column, gchar \*\*text, guint8 \*spacing, GdkPixmap \*\*pixmap, GdkBitmap \*\*mask)$/;"	f
gtk_ctree_node_get_row_data	stubs/gtkstub.c	/^gpointer gtk_ctree_node_get_row_data(GtkCTree \*ctree, GtkCTreeNode \*node)$/;"	f
gtk_ctree_node_get_row_style	stubs/gtkstub.c	/^GtkStyle \* gtk_ctree_node_get_row_style(GtkCTree \*ctree, GtkCTreeNode \*node)$/;"	f
gtk_ctree_node_get_selectable	stubs/gtkstub.c	/^gboolean gtk_ctree_node_get_selectable(GtkCTree \*ctree, GtkCTreeNode \*node)$/;"	f
gtk_ctree_node_get_text	stubs/gtkstub.c	/^gint gtk_ctree_node_get_text(GtkCTree \*ctree, GtkCTreeNode \*node, gint column, gchar \*\*text)$/;"	f
gtk_ctree_node_is_visible	stubs/gtkstub.c	/^GtkVisibility gtk_ctree_node_is_visible(GtkCTree \*ctree, GtkCTreeNode \*node)$/;"	f
gtk_ctree_node_moveto	stubs/gtkstub.c	/^void gtk_ctree_node_moveto(GtkCTree \*ctree, GtkCTreeNode \*node, gint column, gfloat row_align, gfloat col_align)$/;"	f
gtk_ctree_node_nth	stubs/gtkstub.c	/^GtkCTreeNode \* gtk_ctree_node_nth(GtkCTree \*ctree, guint row)$/;"	f
gtk_ctree_node_set_background	stubs/gtkstub.c	/^void gtk_ctree_node_set_background(GtkCTree \*ctree, GtkCTreeNode \*node, GdkColor \*color)$/;"	f
gtk_ctree_node_set_cell_style	stubs/gtkstub.c	/^void gtk_ctree_node_set_cell_style(GtkCTree \*ctree, GtkCTreeNode \*node, gint column, GtkStyle \*style)$/;"	f
gtk_ctree_node_set_foreground	stubs/gtkstub.c	/^void gtk_ctree_node_set_foreground(GtkCTree \*ctree, GtkCTreeNode \*node, GdkColor \*color)$/;"	f
gtk_ctree_node_set_pixmap	stubs/gtkstub.c	/^void gtk_ctree_node_set_pixmap(GtkCTree \*ctree, GtkCTreeNode \*node, gint column, GdkPixmap \*pixmap, GdkBitmap \*mask)$/;"	f
gtk_ctree_node_set_pixtext	stubs/gtkstub.c	/^void gtk_ctree_node_set_pixtext(GtkCTree \*ctree, GtkCTreeNode \*node, gint column, const gchar \*text, guint8 spacing, GdkPixmap \*pixmap, GdkBitmap \*mask)$/;"	f
gtk_ctree_node_set_row_data	stubs/gtkstub.c	/^void gtk_ctree_node_set_row_data(GtkCTree \*ctree, GtkCTreeNode \*node, gpointer data)$/;"	f
gtk_ctree_node_set_row_data_full	stubs/gtkstub.c	/^void gtk_ctree_node_set_row_data_full(GtkCTree \*ctree, GtkCTreeNode \*node, gpointer data, GtkDestroyNotify destroy)$/;"	f
gtk_ctree_node_set_row_style	stubs/gtkstub.c	/^void gtk_ctree_node_set_row_style(GtkCTree \*ctree, GtkCTreeNode \*node, GtkStyle \*style)$/;"	f
gtk_ctree_node_set_selectable	stubs/gtkstub.c	/^void gtk_ctree_node_set_selectable(GtkCTree \*ctree, GtkCTreeNode \*node, gboolean selectable)$/;"	f
gtk_ctree_node_set_shift	stubs/gtkstub.c	/^void gtk_ctree_node_set_shift(GtkCTree \*ctree, GtkCTreeNode \*node, gint column, gint vertical, gint horizontal)$/;"	f
gtk_ctree_node_set_text	stubs/gtkstub.c	/^void gtk_ctree_node_set_text(GtkCTree \*ctree, GtkCTreeNode \*node, gint column, const gchar \*text)$/;"	f
gtk_ctree_post_recursive	stubs/gtkstub.c	/^void gtk_ctree_post_recursive(GtkCTree \*ctree, GtkCTreeNode \*node, GtkCTreeFunc func, gpointer data)$/;"	f
gtk_ctree_post_recursive_to_depth	stubs/gtkstub.c	/^void gtk_ctree_post_recursive_to_depth(GtkCTree \*ctree, GtkCTreeNode \*node, gint depth, GtkCTreeFunc func, gpointer data)$/;"	f
gtk_ctree_pre_recursive	stubs/gtkstub.c	/^void gtk_ctree_pre_recursive(GtkCTree \*ctree, GtkCTreeNode \*node, GtkCTreeFunc func, gpointer data)$/;"	f
gtk_ctree_pre_recursive_to_depth	stubs/gtkstub.c	/^void gtk_ctree_pre_recursive_to_depth(GtkCTree \*ctree, GtkCTreeNode \*node, gint depth, GtkCTreeFunc func, gpointer data)$/;"	f
gtk_ctree_real_select_recursive	stubs/gtkstub.c	/^void gtk_ctree_real_select_recursive(GtkCTree \*ctree, GtkCTreeNode \*node, gint state)$/;"	f
gtk_ctree_remove_node	stubs/gtkstub.c	/^void gtk_ctree_remove_node(GtkCTree \*ctree, GtkCTreeNode \*node)$/;"	f
gtk_ctree_select	stubs/gtkstub.c	/^void gtk_ctree_select(GtkCTree \*ctree, GtkCTreeNode \*node)$/;"	f
gtk_ctree_select_recursive	stubs/gtkstub.c	/^void gtk_ctree_select_recursive(GtkCTree \*ctree, GtkCTreeNode \*node)$/;"	f
gtk_ctree_set_drag_compare_func	stubs/gtkstub.c	/^void gtk_ctree_set_drag_compare_func(GtkCTree \*ctree, GtkCTreeCompareDragFunc cmp_func)$/;"	f
gtk_ctree_set_expander_style	stubs/gtkstub.c	/^void gtk_ctree_set_expander_style(GtkCTree \*ctree, GtkCTreeExpanderStyle expander_style)$/;"	f
gtk_ctree_set_indent	stubs/gtkstub.c	/^void gtk_ctree_set_indent(GtkCTree \*ctree, gint indent)$/;"	f
gtk_ctree_set_line_style	stubs/gtkstub.c	/^void gtk_ctree_set_line_style(GtkCTree \*ctree, GtkCTreeLineStyle line_style)$/;"	f
gtk_ctree_set_node_info	stubs/gtkstub.c	/^void gtk_ctree_set_node_info(GtkCTree \*ctree, GtkCTreeNode \*node, const gchar \*text, guint8 spacing, GdkPixmap \*pixmap_closed, GdkBitmap \*mask_closed, GdkP/;"	f
gtk_ctree_set_reorderable	stubs/gtkstub.c	2597;"	d
gtk_ctree_set_show_stub	stubs/gtkstub.c	/^void gtk_ctree_set_show_stub(GtkCTree \*ctree, gboolean show_stub)$/;"	f
gtk_ctree_set_spacing	stubs/gtkstub.c	/^void gtk_ctree_set_spacing(GtkCTree \*ctree, gint spacing)$/;"	f
gtk_ctree_sort_node	stubs/gtkstub.c	/^void gtk_ctree_sort_node(GtkCTree \*ctree, GtkCTreeNode \*node)$/;"	f
gtk_ctree_sort_recursive	stubs/gtkstub.c	/^void gtk_ctree_sort_recursive(GtkCTree \*ctree, GtkCTreeNode \*node)$/;"	f
gtk_ctree_toggle_expansion	stubs/gtkstub.c	/^void gtk_ctree_toggle_expansion(GtkCTree \*ctree, GtkCTreeNode \*node)$/;"	f
gtk_ctree_toggle_expansion_recursive	stubs/gtkstub.c	/^void gtk_ctree_toggle_expansion_recursive(GtkCTree \*ctree, GtkCTreeNode \*node)$/;"	f
gtk_ctree_unselect	stubs/gtkstub.c	/^void gtk_ctree_unselect(GtkCTree \*ctree, GtkCTreeNode \*node)$/;"	f
gtk_ctree_unselect_recursive	stubs/gtkstub.c	/^void gtk_ctree_unselect_recursive(GtkCTree \*ctree, GtkCTreeNode \*node)$/;"	f
gtk_curve_get_type	stubs/gtkstub.c	/^GtkType gtk_curve_get_type(void)$/;"	f
gtk_curve_get_vector	stubs/gtkstub.c	/^void gtk_curve_get_vector(GtkCurve \*curve, int veclen, gfloat vector\[\])$/;"	f
gtk_curve_new	stubs/gtkstub.c	/^GtkWidget\* gtk_curve_new(void)$/;"	f
gtk_curve_reset	stubs/gtkstub.c	/^void gtk_curve_reset(GtkCurve \*curve)$/;"	f
gtk_curve_set_curve_type	stubs/gtkstub.c	/^void gtk_curve_set_curve_type(GtkCurve \*curve, GtkCurveType type)$/;"	f
gtk_curve_set_gamma	stubs/gtkstub.c	/^void gtk_curve_set_gamma(GtkCurve \*curve, gfloat gamma)$/;"	f
gtk_curve_set_range	stubs/gtkstub.c	/^void gtk_curve_set_range(GtkCurve \*curve, gfloat min_x, gfloat max_x, gfloat min_y, gfloat max_y)$/;"	f
gtk_curve_set_vector	stubs/gtkstub.c	/^void gtk_curve_set_vector(GtkCurve \*curve, int veclen, gfloat vector\[\])$/;"	f
gtk_dialog_get_type	stubs/gtkstub.c	/^GtkType gtk_dialog_get_type(void)$/;"	f
gtk_dialog_new	stubs/gtkstub.c	/^GtkWidget\* gtk_dialog_new(void)$/;"	f
gtk_drag_begin	stubs/gtkstub.c	/^GdkDragContext \*gtk_drag_begin(GtkWidget \*widget, GtkTargetList \*targets, GdkDragAction actions, gint button, GdkEvent \*event)$/;"	f
gtk_drag_dest_handle_event	stubs/gtkstub.c	/^void gtk_drag_dest_handle_event(GtkWidget \*toplevel, GdkEvent \*event)$/;"	f
gtk_drag_dest_set	stubs/gtkstub.c	/^void gtk_drag_dest_set(GtkWidget \*widget, GtkDestDefaults flags, const GtkTargetEntry \*targets, gint n_targets, GdkDragAction actions)$/;"	f
gtk_drag_dest_set_proxy	stubs/gtkstub.c	/^void gtk_drag_dest_set_proxy(GtkWidget \*widget, GdkWindow \*proxy_window, GdkDragProtocol protocol, gboolean use_coordinates)$/;"	f
gtk_drag_dest_unset	stubs/gtkstub.c	/^void gtk_drag_dest_unset(GtkWidget \*widget)$/;"	f
gtk_drag_finish	stubs/gtkstub.c	/^void gtk_drag_finish(GdkDragContext \*context, gboolean success, gboolean del, guint32 time)$/;"	f
gtk_drag_get_data	stubs/gtkstub.c	/^void gtk_drag_get_data(GtkWidget \*widget, GdkDragContext \*context, GdkAtom target, guint32 time)$/;"	f
gtk_drag_get_source_widget	stubs/gtkstub.c	/^GtkWidget \*gtk_drag_get_source_widget(GdkDragContext \*context)$/;"	f
gtk_drag_highlight	stubs/gtkstub.c	/^void gtk_drag_highlight(GtkWidget \*widget)$/;"	f
gtk_drag_set_default_icon	stubs/gtkstub.c	/^void gtk_drag_set_default_icon(GdkColormap \*colormap, GdkPixmap \*pixmap, GdkBitmap \*mask, gint hot_x, gint hot_y)$/;"	f
gtk_drag_set_icon_default	stubs/gtkstub.c	/^void gtk_drag_set_icon_default(GdkDragContext \*context)$/;"	f
gtk_drag_set_icon_pixmap	stubs/gtkstub.c	/^void gtk_drag_set_icon_pixmap(GdkDragContext \*context, GdkColormap \*colormap, GdkPixmap \*pixmap, GdkBitmap \*mask, gint hot_x, gint hot_y)$/;"	f
gtk_drag_set_icon_widget	stubs/gtkstub.c	/^void gtk_drag_set_icon_widget(GdkDragContext \*context, GtkWidget \*widget, gint hot_x, gint hot_y)$/;"	f
gtk_drag_source_handle_event	stubs/gtkstub.c	/^void gtk_drag_source_handle_event(GtkWidget \*widget, GdkEvent \*event)$/;"	f
gtk_drag_source_set	stubs/gtkstub.c	/^void gtk_drag_source_set(GtkWidget \*widget, GdkModifierType start_button_mask, const GtkTargetEntry \*targets, gint n_targets, GdkDragAction actions)$/;"	f
gtk_drag_source_set_icon	stubs/gtkstub.c	/^void gtk_drag_source_set_icon(GtkWidget \*widget, GdkColormap \*colormap, GdkPixmap \*pixmap, GdkBitmap \*mask)$/;"	f
gtk_drag_source_unset	stubs/gtkstub.c	/^void gtk_drag_source_unset(GtkWidget \*widget)$/;"	f
gtk_drag_unhighlight	stubs/gtkstub.c	/^void gtk_drag_unhighlight(GtkWidget \*widget)$/;"	f
gtk_draw_arrow	stubs/gtkstub.c	/^void gtk_draw_arrow(GtkStyle \*style, GdkWindow \*window, GtkStateType state_type, GtkShadowType shadow_type, GtkArrowType arrow_type, gboolean fill, gint x, gi/;"	f
gtk_draw_box	stubs/gtkstub.c	/^void gtk_draw_box(GtkStyle \*style, GdkWindow \*window, GtkStateType state_type, GtkShadowType shadow_type, gint x, gint y, gint width, gint height)$/;"	f
gtk_draw_box_gap	stubs/gtkstub.c	/^void gtk_draw_box_gap(GtkStyle \*style, GdkWindow \*window, GtkStateType state_type, GtkShadowType shadow_type, gint x, gint y, gint width, gint height, GtkPosi/;"	f
gtk_draw_check	stubs/gtkstub.c	/^void gtk_draw_check(GtkStyle \*style, GdkWindow \*window, GtkStateType state_type, GtkShadowType shadow_type, gint x, gint y, gint width, gint height)$/;"	f
gtk_draw_cross	stubs/gtkstub.c	/^void gtk_draw_cross(GtkStyle \*style, GdkWindow \*window, GtkStateType state_type, GtkShadowType shadow_type, gint x, gint y, gint width, gint height)$/;"	f
gtk_draw_diamond	stubs/gtkstub.c	/^void gtk_draw_diamond(GtkStyle \*style, GdkWindow \*window, GtkStateType state_type, GtkShadowType shadow_type, gint x, gint y, gint width, gint height)$/;"	f
gtk_draw_extension	stubs/gtkstub.c	/^void gtk_draw_extension(GtkStyle \*style, GdkWindow \*window, GtkStateType state_type, GtkShadowType shadow_type, gint x, gint y, gint width, gint height, GtkPo/;"	f
gtk_draw_flat_box	stubs/gtkstub.c	/^void gtk_draw_flat_box(GtkStyle \*style, GdkWindow \*window, GtkStateType state_type, GtkShadowType shadow_type, gint x, gint y, gint width, gint height)$/;"	f
gtk_draw_focus	stubs/gtkstub.c	/^void gtk_draw_focus(GtkStyle \*style, GdkWindow \*window, gint x, gint y, gint width, gint height)$/;"	f
gtk_draw_handle	stubs/gtkstub.c	/^void gtk_draw_handle(GtkStyle \*style, GdkWindow \*window, GtkStateType state_type, GtkShadowType shadow_type, gint x, gint y, gint width, gint height, GtkOrien/;"	f
gtk_draw_hline	stubs/gtkstub.c	/^void gtk_draw_hline(GtkStyle \*style, GdkWindow \*window, GtkStateType state_type, gint x1, gint x2, gint y)$/;"	f
gtk_draw_option	stubs/gtkstub.c	/^void gtk_draw_option(GtkStyle \*style, GdkWindow \*window, GtkStateType state_type, GtkShadowType shadow_type, gint x, gint y, gint width, gint height)$/;"	f
gtk_draw_oval	stubs/gtkstub.c	/^void gtk_draw_oval(GtkStyle \*style, GdkWindow \*window, GtkStateType state_type, GtkShadowType shadow_type, gint x, gint y, gint width, gint height)$/;"	f
gtk_draw_polygon	stubs/gtkstub.c	/^void gtk_draw_polygon(GtkStyle \*style, GdkWindow \*window, GtkStateType state_type, GtkShadowType shadow_type, GdkPoint \*points, gint npoints, gboolean fill)$/;"	f
gtk_draw_ramp	stubs/gtkstub.c	/^void gtk_draw_ramp(GtkStyle \*style, GdkWindow \*window, GtkStateType state_type, GtkShadowType shadow_type, GtkArrowType arrow_type, gint x, gint y, gint width/;"	f
gtk_draw_shadow	stubs/gtkstub.c	/^void gtk_draw_shadow(GtkStyle \*style, GdkWindow \*window, GtkStateType state_type, GtkShadowType shadow_type, gint x, gint y, gint width, gint height)$/;"	f
gtk_draw_shadow_gap	stubs/gtkstub.c	/^void gtk_draw_shadow_gap(GtkStyle \*style, GdkWindow \*window, GtkStateType state_type, GtkShadowType shadow_type, gint x, gint y, gint width, gint height, GtkP/;"	f
gtk_draw_slider	stubs/gtkstub.c	/^void gtk_draw_slider(GtkStyle \*style, GdkWindow \*window, GtkStateType state_type, GtkShadowType shadow_type, gint x, gint y, gint width, gint height, GtkOrien/;"	f
gtk_draw_string	stubs/gtkstub.c	/^void gtk_draw_string(GtkStyle \*style, GdkWindow \*window, GtkStateType state_type, gint x, gint y, const gchar \*string)$/;"	f
gtk_draw_tab	stubs/gtkstub.c	/^void gtk_draw_tab(GtkStyle \*style, GdkWindow \*window, GtkStateType state_type, GtkShadowType shadow_type, gint x, gint y, gint width, gint height)$/;"	f
gtk_draw_vline	stubs/gtkstub.c	/^void gtk_draw_vline(GtkStyle \*style, GdkWindow \*window, GtkStateType state_type, gint y1, gint y2, gint x)$/;"	f
gtk_drawing_area_get_type	stubs/gtkstub.c	/^GtkType gtk_drawing_area_get_type(void)$/;"	f
gtk_drawing_area_new	stubs/gtkstub.c	/^GtkWidget\* gtk_drawing_area_new(void)$/;"	f
gtk_drawing_area_size	stubs/gtkstub.c	/^void gtk_drawing_area_size(GtkDrawingArea \*darea, gint width, gint height)$/;"	f
gtk_editable_changed	stubs/gtkstub.c	/^void gtk_editable_changed(GtkEditable \*editable)$/;"	f
gtk_editable_claim_selection	stubs/gtkstub.c	/^void gtk_editable_claim_selection(GtkEditable \*editable, gboolean claim, guint32 time)$/;"	f
gtk_editable_copy_clipboard	stubs/gtkstub.c	/^void gtk_editable_copy_clipboard(GtkEditable \*editable)$/;"	f
gtk_editable_cut_clipboard	stubs/gtkstub.c	/^void gtk_editable_cut_clipboard(GtkEditable \*editable)$/;"	f
gtk_editable_delete_selection	stubs/gtkstub.c	/^void gtk_editable_delete_selection(GtkEditable \*editable)$/;"	f
gtk_editable_delete_text	stubs/gtkstub.c	/^void gtk_editable_delete_text(GtkEditable \*editable, gint start_pos, gint end_pos)$/;"	f
gtk_editable_get_chars	stubs/gtkstub.c	/^gchar\* gtk_editable_get_chars(GtkEditable \*editable, gint start_pos, gint end_pos)$/;"	f
gtk_editable_get_position	stubs/gtkstub.c	/^gint gtk_editable_get_position(GtkEditable \*editable)$/;"	f
gtk_editable_get_type	stubs/gtkstub.c	/^GtkType gtk_editable_get_type(void)$/;"	f
gtk_editable_insert_text	stubs/gtkstub.c	/^void gtk_editable_insert_text(GtkEditable \*editable, const gchar \*new_text, gint new_text_length, gint \*position)$/;"	f
gtk_editable_paste_clipboard	stubs/gtkstub.c	/^void gtk_editable_paste_clipboard(GtkEditable \*editable)$/;"	f
gtk_editable_select_region	stubs/gtkstub.c	/^void gtk_editable_select_region(GtkEditable \*editable, gint start, gint end)$/;"	f
gtk_editable_set_editable	stubs/gtkstub.c	/^void gtk_editable_set_editable(GtkEditable \*editable, gboolean is_editable)$/;"	f
gtk_editable_set_position	stubs/gtkstub.c	/^void gtk_editable_set_position(GtkEditable \*editable, gint position)$/;"	f
gtk_entry_append_text	stubs/gtkstub.c	/^void gtk_entry_append_text(GtkEntry \*entry, const gchar \*text)$/;"	f
gtk_entry_get_text	stubs/gtkstub.c	/^gchar\* gtk_entry_get_text(GtkEntry \*entry)$/;"	f
gtk_entry_get_type	stubs/gtkstub.c	/^GtkType gtk_entry_get_type(void)$/;"	f
gtk_entry_new	stubs/gtkstub.c	/^GtkWidget\* gtk_entry_new(void)$/;"	f
gtk_entry_new_with_max_length	stubs/gtkstub.c	/^GtkWidget\* gtk_entry_new_with_max_length(guint16 max)$/;"	f
gtk_entry_prepend_text	stubs/gtkstub.c	/^void gtk_entry_prepend_text(GtkEntry \*entry, const gchar \*text)$/;"	f
gtk_entry_select_region	stubs/gtkstub.c	/^void gtk_entry_select_region(GtkEntry \*entry, gint start, gint end)$/;"	f
gtk_entry_set_editable	stubs/gtkstub.c	/^void gtk_entry_set_editable(GtkEntry \*entry, gboolean editable)$/;"	f
gtk_entry_set_max_length	stubs/gtkstub.c	/^void gtk_entry_set_max_length(GtkEntry \*entry, guint16 max)$/;"	f
gtk_entry_set_position	stubs/gtkstub.c	/^void gtk_entry_set_position(GtkEntry \*entry, gint position)$/;"	f
gtk_entry_set_text	stubs/gtkstub.c	/^void gtk_entry_set_text(GtkEntry \*entry, const gchar \*text)$/;"	f
gtk_entry_set_visibility	stubs/gtkstub.c	/^void gtk_entry_set_visibility(GtkEntry \*entry, gboolean visible)$/;"	f
gtk_event_box_get_type	stubs/gtkstub.c	/^GtkType gtk_event_box_get_type(void)$/;"	f
gtk_event_box_new	stubs/gtkstub.c	/^GtkWidget\* gtk_event_box_new(void)$/;"	f
gtk_events_pending	stubs/gtkstub.c	/^gint gtk_events_pending(void)$/;"	f
gtk_exit	stubs/gtkstub.c	/^void gtk_exit(gint error_code)$/;"	f
gtk_false	stubs/gtkstub.c	/^gint gtk_false(void)$/;"	f
gtk_file_selection_complete	stubs/gtkstub.c	/^void gtk_file_selection_complete(GtkFileSelection \*filesel, const gchar \*pattern)$/;"	f
gtk_file_selection_get_filename	stubs/gtkstub.c	/^gchar\* gtk_file_selection_get_filename(GtkFileSelection \*filesel)$/;"	f
gtk_file_selection_get_type	stubs/gtkstub.c	/^GtkType gtk_file_selection_get_type(void)$/;"	f
gtk_file_selection_hide_fileop_buttons	stubs/gtkstub.c	/^void gtk_file_selection_hide_fileop_buttons(GtkFileSelection \*filesel)$/;"	f
gtk_file_selection_new	stubs/gtkstub.c	/^GtkWidget\* gtk_file_selection_new(const gchar \*title)$/;"	f
gtk_file_selection_set_filename	stubs/gtkstub.c	/^void gtk_file_selection_set_filename(GtkFileSelection \*filesel, const gchar \*filename)$/;"	f
gtk_file_selection_show_fileop_buttons	stubs/gtkstub.c	/^void gtk_file_selection_show_fileop_buttons(GtkFileSelection \*filesel)$/;"	f
gtk_fixed_get_type	stubs/gtkstub.c	/^GtkType gtk_fixed_get_type(void)$/;"	f
gtk_fixed_move	stubs/gtkstub.c	/^void gtk_fixed_move(GtkFixed \*fixed, GtkWidget \*widget, gint16 x, gint16 y)$/;"	f
gtk_fixed_new	stubs/gtkstub.c	/^GtkWidget\* gtk_fixed_new(void)$/;"	f
gtk_fixed_put	stubs/gtkstub.c	/^void gtk_fixed_put(GtkFixed \*fixed, GtkWidget \*widget, gint16 x, gint16 y)$/;"	f
gtk_font_selection_dialog_get_font	stubs/gtkstub.c	/^GdkFont\* gtk_font_selection_dialog_get_font(GtkFontSelectionDialog \*fsd)$/;"	f
gtk_font_selection_dialog_get_font_name	stubs/gtkstub.c	/^gchar\* gtk_font_selection_dialog_get_font_name(GtkFontSelectionDialog \*fsd)$/;"	f
gtk_font_selection_dialog_get_preview_text	stubs/gtkstub.c	/^gchar\* gtk_font_selection_dialog_get_preview_text(GtkFontSelectionDialog \*fsd)$/;"	f
gtk_font_selection_dialog_get_type	stubs/gtkstub.c	/^GtkType gtk_font_selection_dialog_get_type(void)$/;"	f
gtk_font_selection_dialog_new	stubs/gtkstub.c	/^GtkWidget\* gtk_font_selection_dialog_new(const gchar \*title)$/;"	f
gtk_font_selection_dialog_set_filter	stubs/gtkstub.c	/^void gtk_font_selection_dialog_set_filter(GtkFontSelectionDialog \*fsd, GtkFontFilterType filter_type, GtkFontType font_type, gchar \*\*foundries, gchar \*\*wei/;"	f
gtk_font_selection_dialog_set_font_name	stubs/gtkstub.c	/^gboolean gtk_font_selection_dialog_set_font_name(GtkFontSelectionDialog \*fsd, const gchar \*fontname)$/;"	f
gtk_font_selection_dialog_set_preview_text	stubs/gtkstub.c	/^void gtk_font_selection_dialog_set_preview_text(GtkFontSelectionDialog \*fsd, const gchar \*text)$/;"	f
gtk_font_selection_get_font	stubs/gtkstub.c	/^GdkFont\* gtk_font_selection_get_font(GtkFontSelection \*fontsel)$/;"	f
gtk_font_selection_get_font_name	stubs/gtkstub.c	/^gchar\* gtk_font_selection_get_font_name(GtkFontSelection \*fontsel)$/;"	f
gtk_font_selection_get_preview_text	stubs/gtkstub.c	/^gchar\* gtk_font_selection_get_preview_text(GtkFontSelection \*fontsel)$/;"	f
gtk_font_selection_get_type	stubs/gtkstub.c	/^GtkType gtk_font_selection_get_type(void)$/;"	f
gtk_font_selection_new	stubs/gtkstub.c	/^GtkWidget\* gtk_font_selection_new(void)$/;"	f
gtk_font_selection_set_filter	stubs/gtkstub.c	/^void gtk_font_selection_set_filter(GtkFontSelection \*fontsel, GtkFontFilterType filter_type, GtkFontType font_type, gchar \*\*foundries, gchar \*\*weights, gch/;"	f
gtk_font_selection_set_font_name	stubs/gtkstub.c	/^gboolean gtk_font_selection_set_font_name(GtkFontSelection \*fontsel, const gchar \*fontname)$/;"	f
gtk_font_selection_set_preview_text	stubs/gtkstub.c	/^void gtk_font_selection_set_preview_text(GtkFontSelection \*fontsel, const gchar \*text)$/;"	f
gtk_frame_get_type	stubs/gtkstub.c	/^GtkType gtk_frame_get_type(void)$/;"	f
gtk_frame_new	stubs/gtkstub.c	/^GtkWidget\* gtk_frame_new(const gchar \*label)$/;"	f
gtk_frame_set_label	stubs/gtkstub.c	/^void gtk_frame_set_label(GtkFrame \*frame, const gchar \*label)$/;"	f
gtk_frame_set_label_align	stubs/gtkstub.c	/^void gtk_frame_set_label_align(GtkFrame \*frame, gfloat xalign, gfloat yalign)$/;"	f
gtk_frame_set_shadow_type	stubs/gtkstub.c	/^void gtk_frame_set_shadow_type(GtkFrame \*frame, GtkShadowType type)$/;"	f
gtk_gamma_curve_get_type	stubs/gtkstub.c	/^guint gtk_gamma_curve_get_type(void)$/;"	f
gtk_gamma_curve_new	stubs/gtkstub.c	/^GtkWidget\* gtk_gamma_curve_new(void)$/;"	f
gtk_gc_get	stubs/gtkstub.c	/^GdkGC\* gtk_gc_get(gint depth, GdkColormap \*colormap, GdkGCValues \*values, GdkGCValuesMask values_mask)$/;"	f
gtk_gc_release	stubs/gtkstub.c	/^void gtk_gc_release(GdkGC \*gc)$/;"	f
gtk_get_current_event	stubs/gtkstub.c	/^GdkEvent\* gtk_get_current_event(void)$/;"	f
gtk_get_event_widget	stubs/gtkstub.c	/^GtkWidget\* gtk_get_event_widget(GdkEvent \*event)$/;"	f
gtk_grab_add	stubs/gtkstub.c	/^void gtk_grab_add(GtkWidget \*widget)$/;"	f
gtk_grab_get_current	stubs/gtkstub.c	/^GtkWidget\* gtk_grab_get_current(void)$/;"	f
gtk_grab_remove	stubs/gtkstub.c	/^void gtk_grab_remove(GtkWidget \*widget)$/;"	f
gtk_handle_box_get_type	stubs/gtkstub.c	/^GtkType gtk_handle_box_get_type(void)$/;"	f
gtk_handle_box_new	stubs/gtkstub.c	/^GtkWidget\* gtk_handle_box_new(void)$/;"	f
gtk_handle_box_set_handle_position	stubs/gtkstub.c	/^void gtk_handle_box_set_handle_position(GtkHandleBox \*handle_box, GtkPositionType position)$/;"	f
gtk_handle_box_set_shadow_type	stubs/gtkstub.c	/^void gtk_handle_box_set_shadow_type(GtkHandleBox \*handle_box, GtkShadowType type)$/;"	f
gtk_handle_box_set_snap_edge	stubs/gtkstub.c	/^void gtk_handle_box_set_snap_edge(GtkHandleBox \*handle_box, GtkPositionType edge)$/;"	f
gtk_hbox_get_type	stubs/gtkstub.c	/^GtkType gtk_hbox_get_type(void)$/;"	f
gtk_hbox_new	stubs/gtkstub.c	/^GtkWidget\* gtk_hbox_new(gboolean homogeneous, gint spacing)$/;"	f
gtk_hbutton_box_get_layout_default	stubs/gtkstub.c	/^GtkButtonBoxStyle gtk_hbutton_box_get_layout_default(void)$/;"	f
gtk_hbutton_box_get_spacing_default	stubs/gtkstub.c	/^gint gtk_hbutton_box_get_spacing_default(void)$/;"	f
gtk_hbutton_box_get_type	stubs/gtkstub.c	/^guint gtk_hbutton_box_get_type(void)$/;"	f
gtk_hbutton_box_new	stubs/gtkstub.c	/^GtkWidget \*gtk_hbutton_box_new(void)$/;"	f
gtk_hbutton_box_set_layout_default	stubs/gtkstub.c	/^void gtk_hbutton_box_set_layout_default(GtkButtonBoxStyle layout)$/;"	f
gtk_hbutton_box_set_spacing_default	stubs/gtkstub.c	/^void gtk_hbutton_box_set_spacing_default(gint spacing)$/;"	f
gtk_hpaned_get_type	stubs/gtkstub.c	/^guint gtk_hpaned_get_type(void)$/;"	f
gtk_hpaned_new	stubs/gtkstub.c	/^GtkWidget\* gtk_hpaned_new(void)$/;"	f
gtk_hruler_get_type	stubs/gtkstub.c	/^guint gtk_hruler_get_type(void)$/;"	f
gtk_hruler_new	stubs/gtkstub.c	/^GtkWidget\* gtk_hruler_new(void)$/;"	f
gtk_hscale_get_type	stubs/gtkstub.c	/^GtkType gtk_hscale_get_type(void)$/;"	f
gtk_hscale_new	stubs/gtkstub.c	/^GtkWidget\* gtk_hscale_new(GtkAdjustment \*adjustment)$/;"	f
gtk_hscrollbar_get_type	stubs/gtkstub.c	/^GtkType gtk_hscrollbar_get_type(void)$/;"	f
gtk_hscrollbar_new	stubs/gtkstub.c	/^GtkWidget\* gtk_hscrollbar_new(GtkAdjustment \*adjustment)$/;"	f
gtk_hseparator_get_type	stubs/gtkstub.c	/^GtkType gtk_hseparator_get_type(void)$/;"	f
gtk_hseparator_new	stubs/gtkstub.c	/^GtkWidget\* gtk_hseparator_new(void)$/;"	f
gtk_identifier_get_type	stubs/gtkstub.c	/^GtkType gtk_identifier_get_type(void)$/;"	f
gtk_idle_add	stubs/gtkstub.c	/^guint gtk_idle_add(GtkFunction function, gpointer data)$/;"	f
gtk_idle_add_full	stubs/gtkstub.c	/^guint gtk_idle_add_full(gint priority, GtkFunction function, GtkCallbackMarshal marshal, gpointer data, GtkDestroyNotify destroy)$/;"	f
gtk_idle_add_priority	stubs/gtkstub.c	/^guint gtk_idle_add_priority(gint priority, GtkFunction function, gpointer data)$/;"	f
gtk_idle_remove	stubs/gtkstub.c	/^void gtk_idle_remove(guint idle_handler_id)$/;"	f
gtk_idle_remove_by_data	stubs/gtkstub.c	/^void gtk_idle_remove_by_data(gpointer data)$/;"	f
gtk_image_get	stubs/gtkstub.c	/^void gtk_image_get(GtkImage \*image, GdkImage \*\*val, GdkBitmap \*\*mask)$/;"	f
gtk_image_get_type	stubs/gtkstub.c	/^GtkType gtk_image_get_type(void)$/;"	f
gtk_image_new	stubs/gtkstub.c	/^GtkWidget\* gtk_image_new(GdkImage \*val, GdkBitmap \*mask)$/;"	f
gtk_image_set	stubs/gtkstub.c	/^void gtk_image_set(GtkImage \*image, GdkImage \*val, GdkBitmap \*mask)$/;"	f
gtk_init	stubs/gtkstub.c	/^void gtk_init(int \*argc, char \*\*\*argv)$/;"	f
gtk_init_add	stubs/gtkstub.c	/^void gtk_init_add(GtkFunction function, gpointer data)$/;"	f
gtk_init_check	stubs/gtkstub.c	/^gboolean gtk_init_check(int \*argc, char \*\*\*argv)$/;"	f
gtk_input_add_full	stubs/gtkstub.c	/^guint gtk_input_add_full(gint source, GdkInputCondition condition, GdkInputFunction function, GtkCallbackMarshal marshal, gpointer data, GtkDestroyNotify destro/;"	f
gtk_input_dialog_get_type	stubs/gtkstub.c	/^GtkType gtk_input_dialog_get_type(void)$/;"	f
gtk_input_dialog_new	stubs/gtkstub.c	/^GtkWidget\* gtk_input_dialog_new(void)$/;"	f
gtk_input_remove	stubs/gtkstub.c	/^void gtk_input_remove(guint input_handler_id)$/;"	f
gtk_invisible_get_type	stubs/gtkstub.c	/^GtkType gtk_invisible_get_type(void)$/;"	f
gtk_invisible_new	stubs/gtkstub.c	/^GtkWidget\* gtk_invisible_new(void)$/;"	f
gtk_item_deselect	stubs/gtkstub.c	/^void gtk_item_deselect(GtkItem \*item)$/;"	f
gtk_item_factories_path_delete	stubs/gtkstub.c	/^void gtk_item_factories_path_delete(const gchar \*ifactory_path, const gchar \*path)$/;"	f
gtk_item_factory_add_foreign	stubs/gtkstub.c	/^void gtk_item_factory_add_foreign(GtkWidget \*accel_widget, const gchar \*full_path, GtkAccelGroup \*accel_group, guint keyval, GdkModifierType modifiers)$/;"	f
gtk_item_factory_construct	stubs/gtkstub.c	/^void gtk_item_factory_construct(GtkItemFactory \*ifactory, GtkType container_type, const gchar \*path, GtkAccelGroup \*accel_group)$/;"	f
gtk_item_factory_create_item	stubs/gtkstub.c	/^void gtk_item_factory_create_item(GtkItemFactory \*ifactory, GtkItemFactoryEntry \*entry, gpointer callback_data, guint callback_type)$/;"	f
gtk_item_factory_create_items	stubs/gtkstub.c	/^void gtk_item_factory_create_items(GtkItemFactory \*ifactory, guint n_entries, GtkItemFactoryEntry \*entries, gpointer callback_data)$/;"	f
gtk_item_factory_create_items_ac	stubs/gtkstub.c	/^void gtk_item_factory_create_items_ac(GtkItemFactory \*ifactory, guint n_entries, GtkItemFactoryEntry \*entries, gpointer callback_data, guint callback_type)$/;"	f
gtk_item_factory_create_menu_entries	stubs/gtkstub.c	/^void gtk_item_factory_create_menu_entries(guint n_entries, GtkMenuEntry \*entries)$/;"	f
gtk_item_factory_delete_entries	stubs/gtkstub.c	/^void gtk_item_factory_delete_entries(GtkItemFactory \*ifactory, guint n_entries, GtkItemFactoryEntry \*entries)$/;"	f
gtk_item_factory_delete_entry	stubs/gtkstub.c	/^void gtk_item_factory_delete_entry(GtkItemFactory \*ifactory, GtkItemFactoryEntry \*entry)$/;"	f
gtk_item_factory_delete_item	stubs/gtkstub.c	/^void gtk_item_factory_delete_item(GtkItemFactory \*ifactory, const gchar \*path)$/;"	f
gtk_item_factory_dump_items	stubs/gtkstub.c	/^void gtk_item_factory_dump_items(GtkPatternSpec \*path_pspec, gboolean modified_only, GtkPrintFunc print_func, gpointer func_data)$/;"	f
gtk_item_factory_dump_rc	stubs/gtkstub.c	/^void gtk_item_factory_dump_rc(const gchar \*file_name, GtkPatternSpec \*path_pspec, gboolean modified_only)$/;"	f
gtk_item_factory_from_path	stubs/gtkstub.c	/^GtkItemFactory\* gtk_item_factory_from_path(const gchar \*path)$/;"	f
gtk_item_factory_from_widget	stubs/gtkstub.c	/^GtkItemFactory\* gtk_item_factory_from_widget(GtkWidget \*widget)$/;"	f
gtk_item_factory_get_item	stubs/gtkstub.c	/^GtkWidget\* gtk_item_factory_get_item(GtkItemFactory \*ifactory, const gchar \*path)$/;"	f
gtk_item_factory_get_item_by_action	stubs/gtkstub.c	/^GtkWidget\* gtk_item_factory_get_item_by_action(GtkItemFactory \*ifactory, guint action)$/;"	f
gtk_item_factory_get_type	stubs/gtkstub.c	/^GtkType gtk_item_factory_get_type(void)$/;"	f
gtk_item_factory_get_widget	stubs/gtkstub.c	/^GtkWidget\* gtk_item_factory_get_widget(GtkItemFactory \*ifactory, const gchar \*path)$/;"	f
gtk_item_factory_get_widget_by_action	stubs/gtkstub.c	/^GtkWidget\* gtk_item_factory_get_widget_by_action(GtkItemFactory \*ifactory, guint action)$/;"	f
gtk_item_factory_new	stubs/gtkstub.c	/^GtkItemFactory\* gtk_item_factory_new(GtkType container_type, const gchar \*path, GtkAccelGroup \*accel_group)$/;"	f
gtk_item_factory_parse_rc	stubs/gtkstub.c	/^void gtk_item_factory_parse_rc(const gchar \*file_name)$/;"	f
gtk_item_factory_parse_rc_scanner	stubs/gtkstub.c	/^void gtk_item_factory_parse_rc_scanner(GScanner \*scanner)$/;"	f
gtk_item_factory_parse_rc_string	stubs/gtkstub.c	/^void gtk_item_factory_parse_rc_string(const gchar \*rc_string)$/;"	f
gtk_item_factory_path_from_widget	stubs/gtkstub.c	/^gchar\* gtk_item_factory_path_from_widget(GtkWidget \*widget)$/;"	f
gtk_item_factory_popup	stubs/gtkstub.c	/^void gtk_item_factory_popup(GtkItemFactory \*ifactory, guint x, guint y, guint mouse_button, guint32 time)$/;"	f
gtk_item_factory_popup_data	stubs/gtkstub.c	/^gpointer gtk_item_factory_popup_data(GtkItemFactory \*ifactory)$/;"	f
gtk_item_factory_popup_data_from_widget	stubs/gtkstub.c	/^gpointer gtk_item_factory_popup_data_from_widget(GtkWidget \*widget)$/;"	f
gtk_item_factory_popup_with_data	stubs/gtkstub.c	/^void gtk_item_factory_popup_with_data(GtkItemFactory \*ifactory, gpointer popup_data, GtkDestroyNotify destroy, guint x, guint y, guint mouse_button, guint32 ti/;"	f
gtk_item_factory_print_func	stubs/gtkstub.c	/^void gtk_item_factory_print_func(gpointer FILE_pointer, gchar \*string)$/;"	f
gtk_item_factory_set_translate_func	stubs/gtkstub.c	/^void gtk_item_factory_set_translate_func(GtkItemFactory \*ifactory, GtkTranslateFunc func, gpointer data, GtkDestroyNotify notify)$/;"	f
gtk_item_get_type	stubs/gtkstub.c	/^GtkType gtk_item_get_type(void)$/;"	f
gtk_item_select	stubs/gtkstub.c	/^void gtk_item_select(GtkItem \*item)$/;"	f
gtk_item_toggle	stubs/gtkstub.c	/^void gtk_item_toggle(GtkItem \*item)$/;"	f
gtk_key_snooper_install	stubs/gtkstub.c	/^guint gtk_key_snooper_install(GtkKeySnoopFunc snooper, gpointer func_data)$/;"	f
gtk_key_snooper_remove	stubs/gtkstub.c	/^void gtk_key_snooper_remove(guint snooper_handler_id)$/;"	f
gtk_label_get	stubs/gtkstub.c	/^void gtk_label_get(GtkLabel \*label, gchar \*\*str)$/;"	f
gtk_label_get_type	stubs/gtkstub.c	/^GtkType gtk_label_get_type(void)$/;"	f
gtk_label_new	stubs/gtkstub.c	/^GtkWidget\* gtk_label_new(const gchar \*str)$/;"	f
gtk_label_parse_uline	stubs/gtkstub.c	/^guint gtk_label_parse_uline(GtkLabel \*label, const gchar \*string)$/;"	f
gtk_label_set_justify	stubs/gtkstub.c	/^void gtk_label_set_justify(GtkLabel \*label, GtkJustification jtype)$/;"	f
gtk_label_set_line_wrap	stubs/gtkstub.c	/^void gtk_label_set_line_wrap(GtkLabel \*label, gboolean wrap)$/;"	f
gtk_label_set_pattern	stubs/gtkstub.c	/^void gtk_label_set_pattern(GtkLabel \*label, const gchar \*pattern)$/;"	f
gtk_label_set_text	stubs/gtkstub.c	/^void gtk_label_set_text(GtkLabel \*label, const gchar \*str)$/;"	f
gtk_layout_freeze	stubs/gtkstub.c	/^void gtk_layout_freeze(GtkLayout \*layout)$/;"	f
gtk_layout_get_hadjustment	stubs/gtkstub.c	/^GtkAdjustment\* gtk_layout_get_hadjustment(GtkLayout \*layout)$/;"	f
gtk_layout_get_type	stubs/gtkstub.c	/^GtkType gtk_layout_get_type(void)$/;"	f
gtk_layout_get_vadjustment	stubs/gtkstub.c	/^GtkAdjustment\* gtk_layout_get_vadjustment(GtkLayout \*layout)$/;"	f
gtk_layout_move	stubs/gtkstub.c	/^void gtk_layout_move(GtkLayout \*layout, GtkWidget \*widget, gint x, gint y)$/;"	f
gtk_layout_new	stubs/gtkstub.c	/^GtkWidget\* gtk_layout_new(GtkAdjustment \*hadjustment, GtkAdjustment \*vadjustment)$/;"	f
gtk_layout_put	stubs/gtkstub.c	/^void gtk_layout_put(GtkLayout \*layout, GtkWidget \*widget, gint x, gint y)$/;"	f
gtk_layout_set_hadjustment	stubs/gtkstub.c	/^void gtk_layout_set_hadjustment(GtkLayout \*layout, GtkAdjustment \*adjustment)$/;"	f
gtk_layout_set_size	stubs/gtkstub.c	/^void gtk_layout_set_size(GtkLayout \*layout, guint width, guint height)$/;"	f
gtk_layout_set_vadjustment	stubs/gtkstub.c	/^void gtk_layout_set_vadjustment(GtkLayout \*layout, GtkAdjustment \*adjustment)$/;"	f
gtk_layout_thaw	stubs/gtkstub.c	/^void gtk_layout_thaw(GtkLayout \*layout)$/;"	f
gtk_list_append_items	stubs/gtkstub.c	/^void gtk_list_append_items(GtkList \*list, GList \*items)$/;"	f
gtk_list_child_position	stubs/gtkstub.c	/^gint gtk_list_child_position(GtkList \*list, GtkWidget \*child)$/;"	f
gtk_list_clear_items	stubs/gtkstub.c	/^void gtk_list_clear_items(GtkList \*list, gint start, gint end)$/;"	f
gtk_list_end_drag_selection	stubs/gtkstub.c	/^void gtk_list_end_drag_selection(GtkList \*list)$/;"	f
gtk_list_end_selection	stubs/gtkstub.c	/^void gtk_list_end_selection(GtkList \*list)$/;"	f
gtk_list_extend_selection	stubs/gtkstub.c	/^void gtk_list_extend_selection(GtkList \*list, GtkScrollType scroll_type, gfloat position, gboolean auto_start_selection)$/;"	f
gtk_list_get_type	stubs/gtkstub.c	/^GtkType gtk_list_get_type(void)$/;"	f
gtk_list_insert_items	stubs/gtkstub.c	/^void gtk_list_insert_items(GtkList \*list, GList \*items, gint position)$/;"	f
gtk_list_item_deselect	stubs/gtkstub.c	/^void gtk_list_item_deselect(GtkListItem \*list_item)$/;"	f
gtk_list_item_get_type	stubs/gtkstub.c	/^GtkType gtk_list_item_get_type(void)$/;"	f
gtk_list_item_new	stubs/gtkstub.c	/^GtkWidget\* gtk_list_item_new(void)$/;"	f
gtk_list_item_new_with_label	stubs/gtkstub.c	/^GtkWidget\* gtk_list_item_new_with_label(const gchar \*label)$/;"	f
gtk_list_item_select	stubs/gtkstub.c	/^void gtk_list_item_select(GtkListItem \*list_item)$/;"	f
gtk_list_new	stubs/gtkstub.c	/^GtkWidget\* gtk_list_new(void)$/;"	f
gtk_list_prepend_items	stubs/gtkstub.c	/^void gtk_list_prepend_items(GtkList \*list, GList \*items)$/;"	f
gtk_list_remove_items	stubs/gtkstub.c	/^void gtk_list_remove_items(GtkList \*list, GList \*items)$/;"	f
gtk_list_remove_items_no_unref	stubs/gtkstub.c	/^void gtk_list_remove_items_no_unref(GtkList \*list, GList \*items)$/;"	f
gtk_list_scroll_horizontal	stubs/gtkstub.c	/^void gtk_list_scroll_horizontal(GtkList \*list, GtkScrollType scroll_type, gfloat position)$/;"	f
gtk_list_scroll_vertical	stubs/gtkstub.c	/^void gtk_list_scroll_vertical(GtkList \*list, GtkScrollType scroll_type, gfloat position)$/;"	f
gtk_list_select_all	stubs/gtkstub.c	/^void gtk_list_select_all(GtkList \*list)$/;"	f
gtk_list_select_child	stubs/gtkstub.c	/^void gtk_list_select_child(GtkList \*list, GtkWidget \*child)$/;"	f
gtk_list_select_item	stubs/gtkstub.c	/^void gtk_list_select_item(GtkList \*list, gint item)$/;"	f
gtk_list_set_selection_mode	stubs/gtkstub.c	/^void gtk_list_set_selection_mode(GtkList \*list, GtkSelectionMode mode)$/;"	f
gtk_list_start_selection	stubs/gtkstub.c	/^void gtk_list_start_selection(GtkList \*list)$/;"	f
gtk_list_toggle_add_mode	stubs/gtkstub.c	/^void gtk_list_toggle_add_mode(GtkList \*list)$/;"	f
gtk_list_toggle_focus_row	stubs/gtkstub.c	/^void gtk_list_toggle_focus_row(GtkList \*list)$/;"	f
gtk_list_toggle_row	stubs/gtkstub.c	/^void gtk_list_toggle_row(GtkList \*list, GtkWidget \*item)$/;"	f
gtk_list_undo_selection	stubs/gtkstub.c	/^void gtk_list_undo_selection(GtkList \*list)$/;"	f
gtk_list_unselect_all	stubs/gtkstub.c	/^void gtk_list_unselect_all(GtkList \*list)$/;"	f
gtk_list_unselect_child	stubs/gtkstub.c	/^void gtk_list_unselect_child(GtkList \*list, GtkWidget \*child)$/;"	f
gtk_list_unselect_item	stubs/gtkstub.c	/^void gtk_list_unselect_item(GtkList \*list, gint item)$/;"	f
gtk_main	stubs/gtkstub.c	/^void gtk_main(void)$/;"	f
gtk_main_do_event	stubs/gtkstub.c	/^void gtk_main_do_event(GdkEvent \*event)$/;"	f
gtk_main_iteration	stubs/gtkstub.c	/^gint gtk_main_iteration(void)$/;"	f
gtk_main_iteration_do	stubs/gtkstub.c	/^gint gtk_main_iteration_do(gboolean blocking)$/;"	f
gtk_main_level	stubs/gtkstub.c	/^guint gtk_main_level(void)$/;"	f
gtk_main_quit	stubs/gtkstub.c	/^void gtk_main_quit(void)$/;"	f
gtk_marshal_BOOL__POINTER_INT_INT_UINT	stubs/gtkstub.c	6767;"	d
gtk_marshal_BOOL__POINTER_STRING_STRING_POINTER	stubs/gtkstub.c	6773;"	d
gtk_marshal_ENUM__ENUM	stubs/gtkstub.c	6779;"	d
gtk_marshal_NONE__BOXED	stubs/gtkstub.c	6791;"	d
gtk_marshal_NONE__ENUM	stubs/gtkstub.c	6801;"	d
gtk_marshal_NONE__ENUM_FLOAT	stubs/gtkstub.c	6807;"	d
gtk_marshal_NONE__ENUM_FLOAT_BOOL	stubs/gtkstub.c	6813;"	d
gtk_marshal_NONE__OBJECT	stubs/gtkstub.c	6825;"	d
gtk_marshal_NONE__POINTER_INT_INT_POINTER_UINT_U	stubs/gtkstub.c	6855;"	d
gtk_marshal_NONE__POINTER_POINTER_UINT_UINT	stubs/gtkstub.c	6849;"	d
gtk_marshal_NONE__POINTER_STRING_STRING	stubs/gtkstub.c	6835;"	d
gtk_marshal_NONE__POINTER_UINT	stubs/gtkstub.c	6839;"	d
gtk_marshal_NONE__POINTER_UINT_ENUM	stubs/gtkstub.c	6843;"	d
gtk_marshal_NONE__POINTER_UINT_UINT	stubs/gtkstub.c	6861;"	d
gtk_marshal_NONE__STRING	stubs/gtkstub.c	6865;"	d
gtk_marshal_NONE__STRING_INT_POINTER	stubs/gtkstub.c	6869;"	d
gtk_marshal_NONE__UINT	stubs/gtkstub.c	6875;"	d
gtk_marshal_NONE__UINT_POINTER_UINT_ENUM_ENUM_PO	stubs/gtkstub.c	6879;"	d
gtk_marshal_NONE__UINT_POINTER_UINT_UINT_ENUM	stubs/gtkstub.c	6885;"	d
gtk_marshal_NONE__UINT_STRING	stubs/gtkstub.c	6891;"	d
gtk_menu_append	stubs/gtkstub.c	/^void gtk_menu_append(GtkMenu \*menu, GtkWidget \*child)$/;"	f
gtk_menu_attach_to_widget	stubs/gtkstub.c	/^void gtk_menu_attach_to_widget(GtkMenu \*menu, GtkWidget \*attach_widget, GtkMenuDetachFunc detacher)$/;"	f
gtk_menu_bar_append	stubs/gtkstub.c	/^void gtk_menu_bar_append(GtkMenuBar \*menu_bar, GtkWidget \*child)$/;"	f
gtk_menu_bar_get_type	stubs/gtkstub.c	/^GtkType gtk_menu_bar_get_type(void)$/;"	f
gtk_menu_bar_insert	stubs/gtkstub.c	/^void gtk_menu_bar_insert(GtkMenuBar \*menu_bar, GtkWidget \*child, gint position)$/;"	f
gtk_menu_bar_new	stubs/gtkstub.c	/^GtkWidget\* gtk_menu_bar_new(void)$/;"	f
gtk_menu_bar_prepend	stubs/gtkstub.c	/^void gtk_menu_bar_prepend(GtkMenuBar \*menu_bar, GtkWidget \*child)$/;"	f
gtk_menu_bar_set_shadow_type	stubs/gtkstub.c	/^void gtk_menu_bar_set_shadow_type(GtkMenuBar \*menu_bar, GtkShadowType type)$/;"	f
gtk_menu_detach	stubs/gtkstub.c	/^void gtk_menu_detach(GtkMenu \*menu)$/;"	f
gtk_menu_ensure_uline_accel_group	stubs/gtkstub.c	/^GtkAccelGroup\* gtk_menu_ensure_uline_accel_group(GtkMenu \*menu)$/;"	f
gtk_menu_factory_add_entries	stubs/gtkstub.c	/^void gtk_menu_factory_add_entries(GtkMenuFactory \*factory, GtkMenuEntry \*entries, int nentries)$/;"	f
gtk_menu_factory_add_subfactory	stubs/gtkstub.c	/^void gtk_menu_factory_add_subfactory(GtkMenuFactory \*factory, GtkMenuFactory \*subfactory, const char \*path)$/;"	f
gtk_menu_factory_destroy	stubs/gtkstub.c	/^void gtk_menu_factory_destroy(GtkMenuFactory \*factory)$/;"	f
gtk_menu_factory_find	stubs/gtkstub.c	/^GtkMenuPath\* gtk_menu_factory_find(GtkMenuFactory \*factory, const char \*path)$/;"	f
gtk_menu_factory_new	stubs/gtkstub.c	/^GtkMenuFactory\* gtk_menu_factory_new(GtkMenuFactoryType type)$/;"	f
gtk_menu_factory_remove_entries	stubs/gtkstub.c	/^void gtk_menu_factory_remove_entries(GtkMenuFactory \*factory, GtkMenuEntry \*entries, int nentries)$/;"	f
gtk_menu_factory_remove_paths	stubs/gtkstub.c	/^void gtk_menu_factory_remove_paths(GtkMenuFactory \*factory, char \*\*paths, int npaths)$/;"	f
gtk_menu_factory_remove_subfactory	stubs/gtkstub.c	/^void gtk_menu_factory_remove_subfactory(GtkMenuFactory \*factory, GtkMenuFactory \*subfactory, const char \*path)$/;"	f
gtk_menu_get_accel_group	stubs/gtkstub.c	/^GtkAccelGroup\* gtk_menu_get_accel_group(GtkMenu \*menu)$/;"	f
gtk_menu_get_active	stubs/gtkstub.c	/^GtkWidget\* gtk_menu_get_active(GtkMenu \*menu)$/;"	f
gtk_menu_get_attach_widget	stubs/gtkstub.c	/^GtkWidget\* gtk_menu_get_attach_widget(GtkMenu \*menu)$/;"	f
gtk_menu_get_type	stubs/gtkstub.c	/^GtkType gtk_menu_get_type(void)$/;"	f
gtk_menu_get_uline_accel_group	stubs/gtkstub.c	/^GtkAccelGroup\* gtk_menu_get_uline_accel_group(GtkMenu \*menu)$/;"	f
gtk_menu_insert	stubs/gtkstub.c	/^void gtk_menu_insert(GtkMenu \*menu, GtkWidget \*child, gint position)$/;"	f
gtk_menu_item_activate	stubs/gtkstub.c	/^void gtk_menu_item_activate(GtkMenuItem \*menu_item)$/;"	f
gtk_menu_item_configure	stubs/gtkstub.c	/^void gtk_menu_item_configure(GtkMenuItem \*menu_item, gint show_toggle_indicator, gint show_submenu_indicator)$/;"	f
gtk_menu_item_deselect	stubs/gtkstub.c	/^void gtk_menu_item_deselect(GtkMenuItem \*menu_item)$/;"	f
gtk_menu_item_get_type	stubs/gtkstub.c	/^GtkType gtk_menu_item_get_type(void)$/;"	f
gtk_menu_item_new	stubs/gtkstub.c	/^GtkWidget\* gtk_menu_item_new(void)$/;"	f
gtk_menu_item_new_with_label	stubs/gtkstub.c	/^GtkWidget\* gtk_menu_item_new_with_label(const gchar \*label)$/;"	f
gtk_menu_item_remove_submenu	stubs/gtkstub.c	/^void gtk_menu_item_remove_submenu(GtkMenuItem \*menu_item)$/;"	f
gtk_menu_item_right_justify	stubs/gtkstub.c	/^void gtk_menu_item_right_justify(GtkMenuItem \*menu_item)$/;"	f
gtk_menu_item_select	stubs/gtkstub.c	/^void gtk_menu_item_select(GtkMenuItem \*menu_item)$/;"	f
gtk_menu_item_set_placement	stubs/gtkstub.c	/^void gtk_menu_item_set_placement(GtkMenuItem \*menu_item, GtkSubmenuPlacement placement)$/;"	f
gtk_menu_item_set_submenu	stubs/gtkstub.c	/^void gtk_menu_item_set_submenu(GtkMenuItem \*menu_item, GtkWidget \*submenu)$/;"	f
gtk_menu_new	stubs/gtkstub.c	/^GtkWidget\* gtk_menu_new(void)$/;"	f
gtk_menu_popdown	stubs/gtkstub.c	/^void gtk_menu_popdown(GtkMenu \*menu)$/;"	f
gtk_menu_popup	stubs/gtkstub.c	/^void gtk_menu_popup(GtkMenu \*menu, GtkWidget \*parent_menu_shell, GtkWidget \*parent_menu_item, GtkMenuPositionFunc func, gpointer data, guint button, guint32 /;"	f
gtk_menu_prepend	stubs/gtkstub.c	/^void gtk_menu_prepend(GtkMenu \*menu, GtkWidget \*child)$/;"	f
gtk_menu_reorder_child	stubs/gtkstub.c	/^void gtk_menu_reorder_child(GtkMenu \*menu, GtkWidget \*child, gint position)$/;"	f
gtk_menu_reposition	stubs/gtkstub.c	/^void gtk_menu_reposition(GtkMenu \*menu)$/;"	f
gtk_menu_set_accel_group	stubs/gtkstub.c	/^void gtk_menu_set_accel_group(GtkMenu \*menu, GtkAccelGroup \*accel_group)$/;"	f
gtk_menu_set_active	stubs/gtkstub.c	/^void gtk_menu_set_active(GtkMenu \*menu, guint index)$/;"	f
gtk_menu_set_tearoff_state	stubs/gtkstub.c	/^void gtk_menu_set_tearoff_state(GtkMenu \*menu, gboolean torn_off)$/;"	f
gtk_menu_set_title	stubs/gtkstub.c	/^void gtk_menu_set_title(GtkMenu \*menu, const gchar \*title)$/;"	f
gtk_menu_shell_activate_item	stubs/gtkstub.c	/^void gtk_menu_shell_activate_item(GtkMenuShell \*menu_shell, GtkWidget \*menu_item, gboolean force_deactivate)$/;"	f
gtk_menu_shell_append	stubs/gtkstub.c	/^void gtk_menu_shell_append(GtkMenuShell \*menu_shell, GtkWidget \*child)$/;"	f
gtk_menu_shell_deactivate	stubs/gtkstub.c	/^void gtk_menu_shell_deactivate(GtkMenuShell \*menu_shell)$/;"	f
gtk_menu_shell_deselect	stubs/gtkstub.c	/^void gtk_menu_shell_deselect(GtkMenuShell \*menu_shell)$/;"	f
gtk_menu_shell_get_type	stubs/gtkstub.c	/^GtkType gtk_menu_shell_get_type(void)$/;"	f
gtk_menu_shell_insert	stubs/gtkstub.c	/^void gtk_menu_shell_insert(GtkMenuShell \*menu_shell, GtkWidget \*child, gint position)$/;"	f
gtk_menu_shell_prepend	stubs/gtkstub.c	/^void gtk_menu_shell_prepend(GtkMenuShell \*menu_shell, GtkWidget \*child)$/;"	f
gtk_menu_shell_select_item	stubs/gtkstub.c	/^void gtk_menu_shell_select_item(GtkMenuShell \*menu_shell, GtkWidget \*menu_item)$/;"	f
gtk_misc_get_type	stubs/gtkstub.c	/^GtkType gtk_misc_get_type(void)$/;"	f
gtk_misc_set_alignment	stubs/gtkstub.c	/^void gtk_misc_set_alignment(GtkMisc \*misc, gfloat xalign, gfloat yalign)$/;"	f
gtk_misc_set_padding	stubs/gtkstub.c	/^void gtk_misc_set_padding(GtkMisc \*misc, gint xpad, gint ypad)$/;"	f
gtk_notebook_append_page	stubs/gtkstub.c	/^void gtk_notebook_append_page(GtkNotebook \*notebook, GtkWidget \*child, GtkWidget \*tab_label)$/;"	f
gtk_notebook_append_page_menu	stubs/gtkstub.c	/^void gtk_notebook_append_page_menu(GtkNotebook \*notebook, GtkWidget \*child, GtkWidget \*tab_label, GtkWidget \*menu_label)$/;"	f
gtk_notebook_current_page	stubs/gtkstub.c	2571;"	d
gtk_notebook_get_current_page	stubs/gtkstub.c	/^gint gtk_notebook_get_current_page(GtkNotebook \*notebook)$/;"	f
gtk_notebook_get_menu_label	stubs/gtkstub.c	/^GtkWidget \* gtk_notebook_get_menu_label(GtkNotebook \*notebook, GtkWidget \*child)$/;"	f
gtk_notebook_get_nth_page	stubs/gtkstub.c	/^GtkWidget\* gtk_notebook_get_nth_page(GtkNotebook \*notebook, gint page_num)$/;"	f
gtk_notebook_get_tab_label	stubs/gtkstub.c	/^GtkWidget \* gtk_notebook_get_tab_label(GtkNotebook \*notebook, GtkWidget \*child)$/;"	f
gtk_notebook_get_type	stubs/gtkstub.c	/^GtkType gtk_notebook_get_type(void)$/;"	f
gtk_notebook_insert_page	stubs/gtkstub.c	/^void gtk_notebook_insert_page(GtkNotebook \*notebook, GtkWidget \*child, GtkWidget \*tab_label, gint position)$/;"	f
gtk_notebook_insert_page_menu	stubs/gtkstub.c	/^void gtk_notebook_insert_page_menu(GtkNotebook \*notebook, GtkWidget \*child, GtkWidget \*tab_label, GtkWidget \*menu_label, gint position)$/;"	f
gtk_notebook_new	stubs/gtkstub.c	/^GtkWidget \* gtk_notebook_new(void)$/;"	f
gtk_notebook_next_page	stubs/gtkstub.c	/^void gtk_notebook_next_page(GtkNotebook \*notebook)$/;"	f
gtk_notebook_page_num	stubs/gtkstub.c	/^gint gtk_notebook_page_num(GtkNotebook \*notebook, GtkWidget \*child)$/;"	f
gtk_notebook_popup_disable	stubs/gtkstub.c	/^void gtk_notebook_popup_disable(GtkNotebook \*notebook)$/;"	f
gtk_notebook_popup_enable	stubs/gtkstub.c	/^void gtk_notebook_popup_enable(GtkNotebook \*notebook)$/;"	f
gtk_notebook_prepend_page	stubs/gtkstub.c	/^void gtk_notebook_prepend_page(GtkNotebook \*notebook, GtkWidget \*child, GtkWidget \*tab_label)$/;"	f
gtk_notebook_prepend_page_menu	stubs/gtkstub.c	/^void gtk_notebook_prepend_page_menu(GtkNotebook \*notebook, GtkWidget \*child, GtkWidget \*tab_label, GtkWidget \*menu_label)$/;"	f
gtk_notebook_prev_page	stubs/gtkstub.c	/^void gtk_notebook_prev_page(GtkNotebook \*notebook)$/;"	f
gtk_notebook_query_tab_label_packing	stubs/gtkstub.c	/^void gtk_notebook_query_tab_label_packing(GtkNotebook \*notebook, GtkWidget \*child, gboolean \*expand, gboolean \*fill, GtkPackType \*pack_type)$/;"	f
gtk_notebook_remove_page	stubs/gtkstub.c	/^void gtk_notebook_remove_page(GtkNotebook \*notebook, gint page_num)$/;"	f
gtk_notebook_reorder_child	stubs/gtkstub.c	/^void gtk_notebook_reorder_child(GtkNotebook \*notebook, GtkWidget \*child, gint position)$/;"	f
gtk_notebook_set_homogeneous_tabs	stubs/gtkstub.c	/^void gtk_notebook_set_homogeneous_tabs(GtkNotebook \*notebook, gboolean homogeneous)$/;"	f
gtk_notebook_set_menu_label	stubs/gtkstub.c	/^void gtk_notebook_set_menu_label(GtkNotebook \*notebook, GtkWidget \*child, GtkWidget \*menu_label)$/;"	f
gtk_notebook_set_menu_label_text	stubs/gtkstub.c	/^void gtk_notebook_set_menu_label_text(GtkNotebook \*notebook, GtkWidget \*child, const gchar \*menu_text)$/;"	f
gtk_notebook_set_page	stubs/gtkstub.c	/^void gtk_notebook_set_page(GtkNotebook \*notebook, gint page_num)$/;"	f
gtk_notebook_set_scrollable	stubs/gtkstub.c	/^void gtk_notebook_set_scrollable(GtkNotebook \*notebook, gboolean scrollable)$/;"	f
gtk_notebook_set_show_border	stubs/gtkstub.c	/^void gtk_notebook_set_show_border(GtkNotebook \*notebook, gboolean show_border)$/;"	f
gtk_notebook_set_show_tabs	stubs/gtkstub.c	/^void gtk_notebook_set_show_tabs(GtkNotebook \*notebook, gboolean show_tabs)$/;"	f
gtk_notebook_set_tab_border	stubs/gtkstub.c	/^void gtk_notebook_set_tab_border(GtkNotebook \*notebook, guint border_width)$/;"	f
gtk_notebook_set_tab_hborder	stubs/gtkstub.c	/^void gtk_notebook_set_tab_hborder(GtkNotebook \*notebook, guint tab_hborder)$/;"	f
gtk_notebook_set_tab_label	stubs/gtkstub.c	/^void gtk_notebook_set_tab_label(GtkNotebook \*notebook, GtkWidget \*child, GtkWidget \*tab_label)$/;"	f
gtk_notebook_set_tab_label_packing	stubs/gtkstub.c	/^void gtk_notebook_set_tab_label_packing(GtkNotebook \*notebook, GtkWidget \*child, gboolean expand, gboolean fill, GtkPackType pack_type)$/;"	f
gtk_notebook_set_tab_label_text	stubs/gtkstub.c	/^void gtk_notebook_set_tab_label_text(GtkNotebook \*notebook, GtkWidget \*child, const gchar \*tab_text)$/;"	f
gtk_notebook_set_tab_pos	stubs/gtkstub.c	/^void gtk_notebook_set_tab_pos(GtkNotebook \*notebook, GtkPositionType pos)$/;"	f
gtk_notebook_set_tab_vborder	stubs/gtkstub.c	/^void gtk_notebook_set_tab_vborder(GtkNotebook \*notebook, guint tab_vborder)$/;"	f
gtk_object_add_arg_type	stubs/gtkstub.c	/^void gtk_object_add_arg_type(const gchar \*arg_name, GtkType arg_type, guint arg_flags, guint arg_id)$/;"	f
gtk_object_arg_get	stubs/gtkstub.c	/^void gtk_object_arg_get(GtkObject \*object, GtkArg \*arg, GtkArgInfo \*info)$/;"	f
gtk_object_arg_get_info	stubs/gtkstub.c	/^gchar\* gtk_object_arg_get_info(GtkType object_type, const gchar \*arg_name, GtkArgInfo \*\*info_p)$/;"	f
gtk_object_arg_set	stubs/gtkstub.c	/^void gtk_object_arg_set(GtkObject \*object, GtkArg \*arg, GtkArgInfo \*info)$/;"	f
gtk_object_args_collect	stubs/gtkstub.c	/^gchar\* gtk_object_args_collect(GtkType object_type, GSList \*\*arg_list_p, GSList \*\*info_list_p, const gchar \*first_arg_name, va_list var_args)$/;"	f
gtk_object_class_add_signals	stubs/gtkstub.c	/^void gtk_object_class_add_signals(GtkObjectClass \*klass, guint \*signals, guint nsignals)$/;"	f
gtk_object_class_user_signal_new	stubs/gtkstub.c	/^guint gtk_object_class_user_signal_new(GtkObjectClass \*klass, const gchar \*name, GtkSignalRunType signal_flags, GtkSignalMarshaller marshaller, GtkType return/;"	f
gtk_object_class_user_signal_newv	stubs/gtkstub.c	/^guint gtk_object_class_user_signal_newv(GtkObjectClass \*klass, const gchar \*name, GtkSignalRunType signal_flags, GtkSignalMarshaller marshaller, GtkType retur/;"	f
gtk_object_constructed	stubs/gtkstub.c	/^void gtk_object_constructed(GtkObject \*object)$/;"	f
gtk_object_data_force_id	stubs/gtkstub.c	8183;"	d
gtk_object_data_try_key	stubs/gtkstub.c	8180;"	d
gtk_object_default_construct	stubs/gtkstub.c	/^void gtk_object_default_construct(GtkObject \*object)$/;"	f
gtk_object_destroy	stubs/gtkstub.c	/^void gtk_object_destroy(GtkObject \*object)$/;"	f
gtk_object_get	stubs/gtkstub.c	/^void gtk_object_get(GtkObject \*object, const gchar \*first_arg_name, \.\.\.)$/;"	f
gtk_object_get_data	stubs/gtkstub.c	/^gpointer gtk_object_get_data(GtkObject \*object, const gchar \*key)$/;"	f
gtk_object_get_data_by_id	stubs/gtkstub.c	/^gpointer gtk_object_get_data_by_id(GtkObject \*object, GQuark data_id)$/;"	f
gtk_object_get_type	stubs/gtkstub.c	/^GtkType gtk_object_get_type(void)$/;"	f
gtk_object_get_user_data	stubs/gtkstub.c	/^gpointer gtk_object_get_user_data(GtkObject \*object)$/;"	f
gtk_object_getv	stubs/gtkstub.c	/^void gtk_object_getv(GtkObject \*object, guint n_args, GtkArg \*args)$/;"	f
gtk_object_new	stubs/gtkstub.c	/^GtkObject\* gtk_object_new(GtkType type, const gchar \*first_arg_name, \.\.\.)$/;"	f
gtk_object_newv	stubs/gtkstub.c	/^GtkObject\* gtk_object_newv(GtkType object_type, guint n_args, GtkArg \*args)$/;"	f
gtk_object_query_args	stubs/gtkstub.c	/^GtkArg\* gtk_object_query_args(GtkType class_type, guint32 \*\*arg_flags, guint \*n_args)$/;"	f
gtk_object_ref	stubs/gtkstub.c	/^void gtk_object_ref(GtkObject \*object)$/;"	f
gtk_object_ref	stubs/gtkstub.c	8215;"	d
gtk_object_remove_data	stubs/gtkstub.c	/^void gtk_object_remove_data(GtkObject \*object, const gchar \*key)$/;"	f
gtk_object_remove_data_by_id	stubs/gtkstub.c	/^void gtk_object_remove_data_by_id(GtkObject \*object, GQuark data_id)$/;"	f
gtk_object_remove_no_notify	stubs/gtkstub.c	/^void gtk_object_remove_no_notify(GtkObject \*object, const gchar \*key)$/;"	f
gtk_object_remove_no_notify_by_id	stubs/gtkstub.c	/^void gtk_object_remove_no_notify_by_id(GtkObject \*object, GQuark key_id)$/;"	f
gtk_object_set	stubs/gtkstub.c	/^void gtk_object_set(GtkObject \*object, const gchar \*first_arg_name, \.\.\.)$/;"	f
gtk_object_set_data	stubs/gtkstub.c	/^void gtk_object_set_data(GtkObject \*object, const gchar \*key, gpointer data)$/;"	f
gtk_object_set_data_by_id	stubs/gtkstub.c	/^void gtk_object_set_data_by_id(GtkObject \*object, GQuark data_id, gpointer data)$/;"	f
gtk_object_set_data_by_id_full	stubs/gtkstub.c	/^void gtk_object_set_data_by_id_full(GtkObject \*object, GQuark data_id, gpointer data, GtkDestroyNotify destroy)$/;"	f
gtk_object_set_data_full	stubs/gtkstub.c	/^void gtk_object_set_data_full(GtkObject \*object, const gchar \*key, gpointer data, GtkDestroyNotify destroy)$/;"	f
gtk_object_set_user_data	stubs/gtkstub.c	/^void gtk_object_set_user_data(GtkObject \*object, gpointer data)$/;"	f
gtk_object_setv	stubs/gtkstub.c	/^void gtk_object_setv(GtkObject \*object, guint n_args, GtkArg \*args)$/;"	f
gtk_object_sink	stubs/gtkstub.c	/^void gtk_object_sink(GtkObject \*object)$/;"	f
gtk_object_unref	stubs/gtkstub.c	/^void gtk_object_unref(GtkObject \*object)$/;"	f
gtk_object_unref	stubs/gtkstub.c	8218;"	d
gtk_object_weakref	stubs/gtkstub.c	/^void gtk_object_weakref(GtkObject \*object, GtkDestroyNotify notify, gpointer data)$/;"	f
gtk_object_weakunref	stubs/gtkstub.c	/^void gtk_object_weakunref(GtkObject \*object, GtkDestroyNotify notify, gpointer data)$/;"	f
gtk_option_menu_get_menu	stubs/gtkstub.c	/^GtkWidget\* gtk_option_menu_get_menu(GtkOptionMenu \*option_menu)$/;"	f
gtk_option_menu_get_type	stubs/gtkstub.c	/^GtkType gtk_option_menu_get_type(void)$/;"	f
gtk_option_menu_new	stubs/gtkstub.c	/^GtkWidget\* gtk_option_menu_new(void)$/;"	f
gtk_option_menu_remove_menu	stubs/gtkstub.c	/^void gtk_option_menu_remove_menu(GtkOptionMenu \*option_menu)$/;"	f
gtk_option_menu_set_history	stubs/gtkstub.c	/^void gtk_option_menu_set_history(GtkOptionMenu \*option_menu, guint index)$/;"	f
gtk_option_menu_set_menu	stubs/gtkstub.c	/^void gtk_option_menu_set_menu(GtkOptionMenu \*option_menu, GtkWidget \*menu)$/;"	f
gtk_packer_add	stubs/gtkstub.c	/^void gtk_packer_add(GtkPacker \*packer, GtkWidget \*child, GtkSideType side, GtkAnchorType anchor, GtkPackerOptions options, guint border_width, guint pad_x, gu/;"	f
gtk_packer_add_defaults	stubs/gtkstub.c	/^void gtk_packer_add_defaults(GtkPacker \*packer, GtkWidget \*child, GtkSideType side, GtkAnchorType anchor, GtkPackerOptions options)$/;"	f
gtk_packer_configure	stubs/gtkstub.c	2574;"	d
gtk_packer_get_type	stubs/gtkstub.c	/^GtkType gtk_packer_get_type(void)$/;"	f
gtk_packer_new	stubs/gtkstub.c	/^GtkWidget\* gtk_packer_new(void)$/;"	f
gtk_packer_reorder_child	stubs/gtkstub.c	/^void gtk_packer_reorder_child(GtkPacker \*packer, GtkWidget \*child, gint position)$/;"	f
gtk_packer_set_child_packing	stubs/gtkstub.c	/^void gtk_packer_set_child_packing(GtkPacker \*packer, GtkWidget \*child, GtkSideType side, GtkAnchorType anchor, GtkPackerOptions options, guint border_width, g/;"	f
gtk_packer_set_default_border_width	stubs/gtkstub.c	/^void gtk_packer_set_default_border_width(GtkPacker \*packer, guint border)$/;"	f
gtk_packer_set_default_ipad	stubs/gtkstub.c	/^void gtk_packer_set_default_ipad(GtkPacker \*packer, guint i_pad_x, guint i_pad_y)$/;"	f
gtk_packer_set_default_pad	stubs/gtkstub.c	/^void gtk_packer_set_default_pad(GtkPacker \*packer, guint pad_x, guint pad_y)$/;"	f
gtk_packer_set_spacing	stubs/gtkstub.c	/^void gtk_packer_set_spacing(GtkPacker \*packer, guint spacing)$/;"	f
gtk_paint_arrow	stubs/gtkstub.c	/^void gtk_paint_arrow(GtkStyle \*style, GdkWindow \*window, GtkStateType state_type, GtkShadowType shadow_type, GdkRectangle \*area, GtkWidget \*widget, gchar \*/;"	f
gtk_paint_box	stubs/gtkstub.c	/^void gtk_paint_box(GtkStyle \*style, GdkWindow \*window, GtkStateType state_type, GtkShadowType shadow_type, GdkRectangle \*area, GtkWidget \*widget, gchar \*de/;"	f
gtk_paint_box_gap	stubs/gtkstub.c	/^void gtk_paint_box_gap(GtkStyle \*style, GdkWindow \*window, GtkStateType state_type, GtkShadowType shadow_type, GdkRectangle \*area, GtkWidget \*widget, gchar /;"	f
gtk_paint_check	stubs/gtkstub.c	/^void gtk_paint_check(GtkStyle \*style, GdkWindow \*window, GtkStateType state_type, GtkShadowType shadow_type, GdkRectangle \*area, GtkWidget \*widget, gchar \*/;"	f
gtk_paint_cross	stubs/gtkstub.c	/^void gtk_paint_cross(GtkStyle \*style, GdkWindow \*window, GtkStateType state_type, GtkShadowType shadow_type, GdkRectangle \*area, GtkWidget \*widget, gchar \*/;"	f
gtk_paint_diamond	stubs/gtkstub.c	/^void gtk_paint_diamond(GtkStyle \*style, GdkWindow \*window, GtkStateType state_type, GtkShadowType shadow_type, GdkRectangle \*area, GtkWidget \*widget, gchar /;"	f
gtk_paint_extension	stubs/gtkstub.c	/^void gtk_paint_extension(GtkStyle \*style, GdkWindow \*window, GtkStateType state_type, GtkShadowType shadow_type, GdkRectangle \*area, GtkWidget \*widget, gcha/;"	f
gtk_paint_flat_box	stubs/gtkstub.c	/^void gtk_paint_flat_box(GtkStyle \*style, GdkWindow \*window, GtkStateType state_type, GtkShadowType shadow_type, GdkRectangle \*area, GtkWidget \*widget, gchar/;"	f
gtk_paint_focus	stubs/gtkstub.c	/^void gtk_paint_focus(GtkStyle \*style, GdkWindow \*window, GdkRectangle \*area, GtkWidget \*widget, gchar \*detail, gint x, gint y, gint width, gint height)$/;"	f
gtk_paint_handle	stubs/gtkstub.c	/^void gtk_paint_handle(GtkStyle \*style, GdkWindow \*window, GtkStateType state_type, GtkShadowType shadow_type, GdkRectangle \*area, GtkWidget \*widget, gchar \*/;"	f
gtk_paint_hline	stubs/gtkstub.c	/^void gtk_paint_hline(GtkStyle \*style, GdkWindow \*window, GtkStateType state_type, GdkRectangle \*area, GtkWidget \*widget, gchar \*detail, gint x1, gint x2, g/;"	f
gtk_paint_option	stubs/gtkstub.c	/^void gtk_paint_option(GtkStyle \*style, GdkWindow \*window, GtkStateType state_type, GtkShadowType shadow_type, GdkRectangle \*area, GtkWidget \*widget, gchar \*/;"	f
gtk_paint_oval	stubs/gtkstub.c	/^void gtk_paint_oval(GtkStyle \*style, GdkWindow \*window, GtkStateType state_type, GtkShadowType shadow_type, GdkRectangle \*area, GtkWidget \*widget, gchar \*d/;"	f
gtk_paint_polygon	stubs/gtkstub.c	/^void gtk_paint_polygon(GtkStyle \*style, GdkWindow \*window, GtkStateType state_type, GtkShadowType shadow_type, GdkRectangle \*area, GtkWidget \*widget, gchar /;"	f
gtk_paint_ramp	stubs/gtkstub.c	/^void gtk_paint_ramp(GtkStyle \*style, GdkWindow \*window, GtkStateType state_type, GtkShadowType shadow_type, GdkRectangle \*area, GtkWidget \*widget, gchar \*d/;"	f
gtk_paint_shadow	stubs/gtkstub.c	/^void gtk_paint_shadow(GtkStyle \*style, GdkWindow \*window, GtkStateType state_type, GtkShadowType shadow_type, GdkRectangle \*area, GtkWidget \*widget, gchar \*/;"	f
gtk_paint_shadow_gap	stubs/gtkstub.c	/^void gtk_paint_shadow_gap(GtkStyle \*style, GdkWindow \*window, GtkStateType state_type, GtkShadowType shadow_type, GdkRectangle \*area, GtkWidget \*widget, gch/;"	f
gtk_paint_slider	stubs/gtkstub.c	/^void gtk_paint_slider(GtkStyle \*style, GdkWindow \*window, GtkStateType state_type, GtkShadowType shadow_type, GdkRectangle \*area, GtkWidget \*widget, gchar \*/;"	f
gtk_paint_string	stubs/gtkstub.c	/^void gtk_paint_string(GtkStyle \*style, GdkWindow \*window, GtkStateType state_type, GdkRectangle \*area, GtkWidget \*widget, gchar \*detail, gint x, gint y, co/;"	f
gtk_paint_tab	stubs/gtkstub.c	/^void gtk_paint_tab(GtkStyle \*style, GdkWindow \*window, GtkStateType state_type, GtkShadowType shadow_type, GdkRectangle \*area, GtkWidget \*widget, gchar \*de/;"	f
gtk_paint_vline	stubs/gtkstub.c	/^void gtk_paint_vline(GtkStyle \*style, GdkWindow \*window, GtkStateType state_type, GdkRectangle \*area, GtkWidget \*widget, gchar \*detail, gint y1, gint y2, g/;"	f
gtk_paned_add1	stubs/gtkstub.c	/^void gtk_paned_add1(GtkPaned \*paned, GtkWidget \*child)$/;"	f
gtk_paned_add2	stubs/gtkstub.c	/^void gtk_paned_add2(GtkPaned \*paned, GtkWidget \*child)$/;"	f
gtk_paned_compute_position	stubs/gtkstub.c	/^void gtk_paned_compute_position(GtkPaned \*paned, gint allocation, gint child1_req, gint child2_req)$/;"	f
gtk_paned_get_type	stubs/gtkstub.c	/^GtkType gtk_paned_get_type(void)$/;"	f
gtk_paned_gutter_size	stubs/gtkstub.c	2577;"	d
gtk_paned_handle_size	stubs/gtkstub.c	2580;"	d
gtk_paned_pack1	stubs/gtkstub.c	/^void gtk_paned_pack1(GtkPaned \*paned, GtkWidget \*child, gboolean resize, gboolean shrink)$/;"	f
gtk_paned_pack2	stubs/gtkstub.c	/^void gtk_paned_pack2(GtkPaned \*paned, GtkWidget \*child, gboolean resize, gboolean shrink)$/;"	f
gtk_paned_set_gutter_size	stubs/gtkstub.c	/^void gtk_paned_set_gutter_size(GtkPaned \*paned, guint16 size)$/;"	f
gtk_paned_set_handle_size	stubs/gtkstub.c	/^void gtk_paned_set_handle_size(GtkPaned \*paned, guint16 size)$/;"	f
gtk_paned_set_position	stubs/gtkstub.c	/^void gtk_paned_set_position(GtkPaned \*paned, gint position)$/;"	f
gtk_pattern_match	stubs/gtkstub.c	/^gboolean gtk_pattern_match(GtkPatternSpec \*pspec, guint string_length, const gchar \*string, const gchar \*string_reversed)$/;"	f
gtk_pattern_match_simple	stubs/gtkstub.c	/^gboolean gtk_pattern_match_simple(const gchar \*pattern, const gchar \*string)$/;"	f
gtk_pattern_match_string	stubs/gtkstub.c	/^gboolean gtk_pattern_match_string(GtkPatternSpec \*pspec, const gchar \*string)$/;"	f
gtk_pattern_spec_free_segs	stubs/gtkstub.c	/^void gtk_pattern_spec_free_segs(GtkPatternSpec \*pspec)$/;"	f
gtk_pattern_spec_init	stubs/gtkstub.c	/^void gtk_pattern_spec_init(GtkPatternSpec \*pspec, const gchar \*pattern)$/;"	f
gtk_pixmap_get	stubs/gtkstub.c	/^void gtk_pixmap_get(GtkPixmap \*pixmap, GdkPixmap \*\*val, GdkBitmap \*\*mask)$/;"	f
gtk_pixmap_get_type	stubs/gtkstub.c	/^GtkType gtk_pixmap_get_type(void)$/;"	f
gtk_pixmap_new	stubs/gtkstub.c	/^GtkWidget\* gtk_pixmap_new(GdkPixmap \*pixmap, GdkBitmap \*mask)$/;"	f
gtk_pixmap_set	stubs/gtkstub.c	/^void gtk_pixmap_set(GtkPixmap \*pixmap, GdkPixmap \*val, GdkBitmap \*mask)$/;"	f
gtk_pixmap_set_build_insensitive	stubs/gtkstub.c	/^void gtk_pixmap_set_build_insensitive(GtkPixmap \*pixmap, guint build)$/;"	f
gtk_plug_construct	stubs/gtkstub.c	/^void gtk_plug_construct(GtkPlug \*plug, guint32 socket_id)$/;"	f
gtk_plug_get_type	stubs/gtkstub.c	/^guint gtk_plug_get_type(void)$/;"	f
gtk_plug_new	stubs/gtkstub.c	/^GtkWidget\* gtk_plug_new(guint32 socket_id)$/;"	f
gtk_preview_draw_row	stubs/gtkstub.c	/^void gtk_preview_draw_row(GtkPreview \*preview, guchar \*data, gint x, gint y, gint w)$/;"	f
gtk_preview_get_cmap	stubs/gtkstub.c	/^GdkColormap\* gtk_preview_get_cmap(void)$/;"	f
gtk_preview_get_info	stubs/gtkstub.c	/^GtkPreviewInfo\* gtk_preview_get_info(void)$/;"	f
gtk_preview_get_type	stubs/gtkstub.c	/^GtkType gtk_preview_get_type(void)$/;"	f
gtk_preview_get_visual	stubs/gtkstub.c	/^GdkVisual\* gtk_preview_get_visual(void)$/;"	f
gtk_preview_new	stubs/gtkstub.c	/^GtkWidget\* gtk_preview_new(GtkPreviewType type)$/;"	f
gtk_preview_put	stubs/gtkstub.c	/^void gtk_preview_put(GtkPreview \*preview, GdkWindow \*window, GdkGC \*gc, gint srcx, gint srcy, gint destx, gint desty, gint width, gint height)$/;"	f
gtk_preview_reset	stubs/gtkstub.c	/^void gtk_preview_reset(void)$/;"	f
gtk_preview_set_color_cube	stubs/gtkstub.c	/^void gtk_preview_set_color_cube(guint nred_shades, guint ngreen_shades, guint nblue_shades, guint ngray_shades)$/;"	f
gtk_preview_set_dither	stubs/gtkstub.c	/^void gtk_preview_set_dither(GtkPreview \*preview, GdkRgbDither dither)$/;"	f
gtk_preview_set_expand	stubs/gtkstub.c	/^void gtk_preview_set_expand(GtkPreview \*preview, gboolean expand)$/;"	f
gtk_preview_set_gamma	stubs/gtkstub.c	/^void gtk_preview_set_gamma(double gamma)$/;"	f
gtk_preview_set_install_cmap	stubs/gtkstub.c	/^void gtk_preview_set_install_cmap(gint install_cmap)$/;"	f
gtk_preview_set_reserved	stubs/gtkstub.c	/^void gtk_preview_set_reserved(gint nreserved)$/;"	f
gtk_preview_size	stubs/gtkstub.c	/^void gtk_preview_size(GtkPreview \*preview, gint width, gint height)$/;"	f
gtk_preview_uninit	stubs/gtkstub.c	/^void gtk_preview_uninit(void)$/;"	f
gtk_progress_bar_get_type	stubs/gtkstub.c	/^GtkType gtk_progress_bar_get_type(void)$/;"	f
gtk_progress_bar_new	stubs/gtkstub.c	/^GtkWidget\* gtk_progress_bar_new(void)$/;"	f
gtk_progress_bar_new_with_adjustment	stubs/gtkstub.c	/^GtkWidget\* gtk_progress_bar_new_with_adjustment(GtkAdjustment \*adjustment)$/;"	f
gtk_progress_bar_set_activity_blocks	stubs/gtkstub.c	/^void gtk_progress_bar_set_activity_blocks(GtkProgressBar \*pbar, guint blocks)$/;"	f
gtk_progress_bar_set_activity_step	stubs/gtkstub.c	/^void gtk_progress_bar_set_activity_step(GtkProgressBar \*pbar, guint step)$/;"	f
gtk_progress_bar_set_bar_style	stubs/gtkstub.c	/^void gtk_progress_bar_set_bar_style(GtkProgressBar \*pbar, GtkProgressBarStyle style)$/;"	f
gtk_progress_bar_set_discrete_blocks	stubs/gtkstub.c	/^void gtk_progress_bar_set_discrete_blocks(GtkProgressBar \*pbar, guint blocks)$/;"	f
gtk_progress_bar_set_orientation	stubs/gtkstub.c	/^void gtk_progress_bar_set_orientation(GtkProgressBar \*pbar, GtkProgressBarOrientation orientation)$/;"	f
gtk_progress_bar_update	stubs/gtkstub.c	/^void gtk_progress_bar_update(GtkProgressBar \*pbar, gfloat percentage)$/;"	f
gtk_progress_configure	stubs/gtkstub.c	/^void gtk_progress_configure(GtkProgress \*progress, gfloat value, gfloat min, gfloat max)$/;"	f
gtk_progress_get_current_percentage	stubs/gtkstub.c	/^gfloat gtk_progress_get_current_percentage(GtkProgress \*progress)$/;"	f
gtk_progress_get_current_text	stubs/gtkstub.c	/^gchar\* gtk_progress_get_current_text(GtkProgress \*progress)$/;"	f
gtk_progress_get_percentage_from_value	stubs/gtkstub.c	/^gfloat gtk_progress_get_percentage_from_value(GtkProgress \*progress, gfloat value)$/;"	f
gtk_progress_get_text_from_value	stubs/gtkstub.c	/^gchar\* gtk_progress_get_text_from_value(GtkProgress \*progress, gfloat value)$/;"	f
gtk_progress_get_type	stubs/gtkstub.c	/^GtkType gtk_progress_get_type(void)$/;"	f
gtk_progress_get_value	stubs/gtkstub.c	/^gfloat gtk_progress_get_value(GtkProgress \*progress)$/;"	f
gtk_progress_set_activity_mode	stubs/gtkstub.c	/^void gtk_progress_set_activity_mode(GtkProgress \*progress, guint activity_mode)$/;"	f
gtk_progress_set_adjustment	stubs/gtkstub.c	/^void gtk_progress_set_adjustment(GtkProgress \*progress, GtkAdjustment \*adjustment)$/;"	f
gtk_progress_set_format_string	stubs/gtkstub.c	/^void gtk_progress_set_format_string(GtkProgress \*progress, const gchar \*format)$/;"	f
gtk_progress_set_percentage	stubs/gtkstub.c	/^void gtk_progress_set_percentage(GtkProgress \*progress, gfloat percentage)$/;"	f
gtk_progress_set_show_text	stubs/gtkstub.c	/^void gtk_progress_set_show_text(GtkProgress \*progress, gint show_text)$/;"	f
gtk_progress_set_text_alignment	stubs/gtkstub.c	/^void gtk_progress_set_text_alignment(GtkProgress \*progress, gfloat x_align, gfloat y_align)$/;"	f
gtk_progress_set_value	stubs/gtkstub.c	/^void gtk_progress_set_value(GtkProgress \*progress, gfloat value)$/;"	f
gtk_quit_add	stubs/gtkstub.c	/^guint gtk_quit_add(guint main_level, GtkFunction function, gpointer data)$/;"	f
gtk_quit_add_destroy	stubs/gtkstub.c	/^void gtk_quit_add_destroy(guint main_level, GtkObject \*object)$/;"	f
gtk_quit_add_full	stubs/gtkstub.c	/^guint gtk_quit_add_full(guint main_level, GtkFunction function, GtkCallbackMarshal marshal, gpointer data, GtkDestroyNotify destroy)$/;"	f
gtk_quit_remove	stubs/gtkstub.c	/^void gtk_quit_remove(guint quit_handler_id)$/;"	f
gtk_quit_remove_by_data	stubs/gtkstub.c	/^void gtk_quit_remove_by_data(gpointer data)$/;"	f
gtk_radio_button_get_type	stubs/gtkstub.c	/^GtkType gtk_radio_button_get_type(void)$/;"	f
gtk_radio_button_group	stubs/gtkstub.c	/^GSList\* gtk_radio_button_group(GtkRadioButton \*radio_button)$/;"	f
gtk_radio_button_new	stubs/gtkstub.c	/^GtkWidget\* gtk_radio_button_new(GSList \*group)$/;"	f
gtk_radio_button_new_from_widget	stubs/gtkstub.c	/^GtkWidget\* gtk_radio_button_new_from_widget(GtkRadioButton \*group)$/;"	f
gtk_radio_button_new_with_label	stubs/gtkstub.c	/^GtkWidget\* gtk_radio_button_new_with_label(GSList \*group, const gchar \*label)$/;"	f
gtk_radio_button_new_with_label_from_widget	stubs/gtkstub.c	/^GtkWidget\* gtk_radio_button_new_with_label_from_widget(GtkRadioButton \*group, const gchar \*label)$/;"	f
gtk_radio_button_set_group	stubs/gtkstub.c	/^void gtk_radio_button_set_group(GtkRadioButton \*radio_button, GSList \*group)$/;"	f
gtk_radio_menu_item_get_type	stubs/gtkstub.c	/^GtkType gtk_radio_menu_item_get_type(void)$/;"	f
gtk_radio_menu_item_group	stubs/gtkstub.c	/^GSList\* gtk_radio_menu_item_group(GtkRadioMenuItem \*radio_menu_item)$/;"	f
gtk_radio_menu_item_new	stubs/gtkstub.c	/^GtkWidget\* gtk_radio_menu_item_new(GSList \*group)$/;"	f
gtk_radio_menu_item_new_with_label	stubs/gtkstub.c	/^GtkWidget\* gtk_radio_menu_item_new_with_label(GSList \*group, const gchar \*label)$/;"	f
gtk_radio_menu_item_set_group	stubs/gtkstub.c	/^void gtk_radio_menu_item_set_group(GtkRadioMenuItem \*radio_menu_item, GSList \*group)$/;"	f
gtk_range_clear_background	stubs/gtkstub.c	/^void gtk_range_clear_background(GtkRange \*range)$/;"	f
gtk_range_default_hmotion	stubs/gtkstub.c	/^void gtk_range_default_hmotion(GtkRange \*range, gint xdelta, gint ydelta)$/;"	f
gtk_range_default_hslider_update	stubs/gtkstub.c	/^void gtk_range_default_hslider_update(GtkRange \*range)$/;"	f
gtk_range_default_htrough_click	stubs/gtkstub.c	/^gint gtk_range_default_htrough_click(GtkRange \*range, gint x, gint y, gfloat \*jump_perc)$/;"	f
gtk_range_default_vmotion	stubs/gtkstub.c	/^void gtk_range_default_vmotion(GtkRange \*range, gint xdelta, gint ydelta)$/;"	f
gtk_range_default_vslider_update	stubs/gtkstub.c	/^void gtk_range_default_vslider_update(GtkRange \*range)$/;"	f
gtk_range_default_vtrough_click	stubs/gtkstub.c	/^gint gtk_range_default_vtrough_click(GtkRange \*range, gint x, gint y, gfloat \*jump_perc)$/;"	f
gtk_range_draw_background	stubs/gtkstub.c	/^void gtk_range_draw_background(GtkRange \*range)$/;"	f
gtk_range_draw_slider	stubs/gtkstub.c	/^void gtk_range_draw_slider(GtkRange \*range)$/;"	f
gtk_range_draw_step_back	stubs/gtkstub.c	/^void gtk_range_draw_step_back(GtkRange \*range)$/;"	f
gtk_range_draw_step_forw	stubs/gtkstub.c	/^void gtk_range_draw_step_forw(GtkRange \*range)$/;"	f
gtk_range_draw_trough	stubs/gtkstub.c	/^void gtk_range_draw_trough(GtkRange \*range)$/;"	f
gtk_range_get_adjustment	stubs/gtkstub.c	/^GtkAdjustment\* gtk_range_get_adjustment(GtkRange \*range)$/;"	f
gtk_range_get_type	stubs/gtkstub.c	/^GtkType gtk_range_get_type(void)$/;"	f
gtk_range_set_adjustment	stubs/gtkstub.c	/^void gtk_range_set_adjustment(GtkRange \*range, GtkAdjustment \*adjustment)$/;"	f
gtk_range_set_update_policy	stubs/gtkstub.c	/^void gtk_range_set_update_policy(GtkRange \*range, GtkUpdateType policy)$/;"	f
gtk_range_slider_update	stubs/gtkstub.c	/^void gtk_range_slider_update(GtkRange \*range)$/;"	f
gtk_range_trough_click	stubs/gtkstub.c	/^gint gtk_range_trough_click(GtkRange \*range, gint x, gint y, gfloat \*jump_perc)$/;"	f
gtk_rc_add_class_style	stubs/gtkstub.c	/^void gtk_rc_add_class_style(GtkRcStyle \*rc_style, const gchar \*pattern)$/;"	f
gtk_rc_add_default_file	stubs/gtkstub.c	/^void gtk_rc_add_default_file(const gchar \*filename)$/;"	f
gtk_rc_add_widget_class_style	stubs/gtkstub.c	/^void gtk_rc_add_widget_class_style(GtkRcStyle \*rc_style, const gchar \*pattern)$/;"	f
gtk_rc_add_widget_name_style	stubs/gtkstub.c	/^void gtk_rc_add_widget_name_style(GtkRcStyle \*rc_style, const gchar \*pattern)$/;"	f
gtk_rc_find_module_in_path	stubs/gtkstub.c	/^gchar\* gtk_rc_find_module_in_path(const gchar \*module_file)$/;"	f
gtk_rc_find_pixmap_in_path	stubs/gtkstub.c	/^gchar\* gtk_rc_find_pixmap_in_path(GScanner \*scanner, const gchar \*pixmap_file)$/;"	f
gtk_rc_get_default_files	stubs/gtkstub.c	/^gchar\*\* gtk_rc_get_default_files(void)$/;"	f
gtk_rc_get_module_dir	stubs/gtkstub.c	/^gchar\* gtk_rc_get_module_dir(void)$/;"	f
gtk_rc_get_style	stubs/gtkstub.c	/^GtkStyle\* gtk_rc_get_style(GtkWidget \*widget)$/;"	f
gtk_rc_get_theme_dir	stubs/gtkstub.c	/^gchar\* gtk_rc_get_theme_dir(void)$/;"	f
gtk_rc_init	stubs/gtkstub.c	/^void gtk_rc_init(void)$/;"	f
gtk_rc_load_image	stubs/gtkstub.c	/^GdkPixmap\* gtk_rc_load_image(GdkColormap \*colormap, GdkColor \*transparent_color, const gchar \*filename)$/;"	f
gtk_rc_parse	stubs/gtkstub.c	/^void gtk_rc_parse(const gchar \*filename)$/;"	f
gtk_rc_parse_color	stubs/gtkstub.c	/^guint gtk_rc_parse_color(GScanner \*scanner, GdkColor \*color)$/;"	f
gtk_rc_parse_priority	stubs/gtkstub.c	/^guint gtk_rc_parse_priority(GScanner \*scanner, GtkPathPriorityType \*priority)$/;"	f
gtk_rc_parse_state	stubs/gtkstub.c	/^guint gtk_rc_parse_state(GScanner \*scanner, GtkStateType \*state)$/;"	f
gtk_rc_parse_string	stubs/gtkstub.c	/^void gtk_rc_parse_string(const gchar \*rc_string)$/;"	f
gtk_rc_reparse_all	stubs/gtkstub.c	/^gboolean gtk_rc_reparse_all(void)$/;"	f
gtk_rc_set_default_files	stubs/gtkstub.c	/^void gtk_rc_set_default_files(gchar \*\*filenames)$/;"	f
gtk_rc_set_image_loader	stubs/gtkstub.c	/^void gtk_rc_set_image_loader(GtkImageLoader loader)$/;"	f
gtk_rc_style_new	stubs/gtkstub.c	/^GtkRcStyle\* gtk_rc_style_new(void)$/;"	f
gtk_rc_style_ref	stubs/gtkstub.c	/^void gtk_rc_style_ref(GtkRcStyle \*rc_style)$/;"	f
gtk_rc_style_unref	stubs/gtkstub.c	/^void gtk_rc_style_unref(GtkRcStyle \*rc_style)$/;"	f
gtk_ruler_draw_pos	stubs/gtkstub.c	/^void gtk_ruler_draw_pos(GtkRuler \*ruler)$/;"	f
gtk_ruler_draw_ticks	stubs/gtkstub.c	/^void gtk_ruler_draw_ticks(GtkRuler \*ruler)$/;"	f
gtk_ruler_get_type	stubs/gtkstub.c	/^GtkType gtk_ruler_get_type(void)$/;"	f
gtk_ruler_set_metric	stubs/gtkstub.c	/^void gtk_ruler_set_metric(GtkRuler \*ruler, GtkMetricType metric)$/;"	f
gtk_ruler_set_range	stubs/gtkstub.c	/^void gtk_ruler_set_range(GtkRuler \*ruler, gfloat lower, gfloat upper, gfloat position, gfloat max_size)$/;"	f
gtk_scale_draw_value	stubs/gtkstub.c	/^void gtk_scale_draw_value(GtkScale \*scale)$/;"	f
gtk_scale_get_type	stubs/gtkstub.c	/^GtkType gtk_scale_get_type(void)$/;"	f
gtk_scale_get_value_width	stubs/gtkstub.c	/^gint gtk_scale_get_value_width(GtkScale \*scale)$/;"	f
gtk_scale_set_digits	stubs/gtkstub.c	/^void gtk_scale_set_digits(GtkScale \*scale, gint digits)$/;"	f
gtk_scale_set_draw_value	stubs/gtkstub.c	/^void gtk_scale_set_draw_value(GtkScale \*scale, gboolean draw_value)$/;"	f
gtk_scale_set_value_pos	stubs/gtkstub.c	/^void gtk_scale_set_value_pos(GtkScale \*scale, GtkPositionType pos)$/;"	f
gtk_scale_value_width	stubs/gtkstub.c	2583;"	d
gtk_scrollbar_get_type	stubs/gtkstub.c	/^GtkType gtk_scrollbar_get_type(void)$/;"	f
gtk_scrolled_window_add_with_viewport	stubs/gtkstub.c	/^void gtk_scrolled_window_add_with_viewport(GtkScrolledWindow \*scrolled_window, GtkWidget \*child)$/;"	f
gtk_scrolled_window_get_hadjustment	stubs/gtkstub.c	/^GtkAdjustment\* gtk_scrolled_window_get_hadjustment(GtkScrolledWindow \*scrolled_window)$/;"	f
gtk_scrolled_window_get_type	stubs/gtkstub.c	/^GtkType gtk_scrolled_window_get_type(void)$/;"	f
gtk_scrolled_window_get_vadjustment	stubs/gtkstub.c	/^GtkAdjustment\* gtk_scrolled_window_get_vadjustment(GtkScrolledWindow \*scrolled_window)$/;"	f
gtk_scrolled_window_new	stubs/gtkstub.c	/^GtkWidget\* gtk_scrolled_window_new(GtkAdjustment \*hadjustment, GtkAdjustment \*vadjustment)$/;"	f
gtk_scrolled_window_set_hadjustment	stubs/gtkstub.c	/^void gtk_scrolled_window_set_hadjustment(GtkScrolledWindow \*scrolled_window, GtkAdjustment \*hadjustment)$/;"	f
gtk_scrolled_window_set_placement	stubs/gtkstub.c	/^void gtk_scrolled_window_set_placement(GtkScrolledWindow \*scrolled_window, GtkCornerType window_placement)$/;"	f
gtk_scrolled_window_set_policy	stubs/gtkstub.c	/^void gtk_scrolled_window_set_policy(GtkScrolledWindow \*scrolled_window, GtkPolicyType hscrollbar_policy, GtkPolicyType vscrollbar_policy)$/;"	f
gtk_scrolled_window_set_vadjustment	stubs/gtkstub.c	/^void gtk_scrolled_window_set_vadjustment(GtkScrolledWindow \*scrolled_window, GtkAdjustment \*hadjustment)$/;"	f
gtk_selection_add_target	stubs/gtkstub.c	/^void gtk_selection_add_target(GtkWidget \*widget, GdkAtom selection, GdkAtom target, guint info)$/;"	f
gtk_selection_add_targets	stubs/gtkstub.c	/^void gtk_selection_add_targets(GtkWidget \*widget, GdkAtom selection, const GtkTargetEntry \*targets, guint ntargets)$/;"	f
gtk_selection_clear	stubs/gtkstub.c	/^gint gtk_selection_clear(GtkWidget \*widget, GdkEventSelection \*event)$/;"	f
gtk_selection_convert	stubs/gtkstub.c	/^gint gtk_selection_convert(GtkWidget \*widget, GdkAtom selection, GdkAtom target, guint32 time)$/;"	f
gtk_selection_data_copy	stubs/gtkstub.c	/^GtkSelectioData \*gtk_selection_data_copy(GtkSelectionData \*data)$/;"	f
gtk_selection_data_free	stubs/gtkstub.c	/^void gtk_selection_data_free(GtkSelectionData \*data)$/;"	f
gtk_selection_data_set	stubs/gtkstub.c	/^void gtk_selection_data_set(GtkSelectionData \*selection_data, GdkAtom type, gint format, const guchar \*data, gint length)$/;"	f
gtk_selection_incr_event	stubs/gtkstub.c	/^gint gtk_selection_incr_event(GdkWindow \*window, GdkEventProperty \*event)$/;"	f
gtk_selection_notify	stubs/gtkstub.c	/^gint gtk_selection_notify(GtkWidget \*widget, GdkEventSelection \*event)$/;"	f
gtk_selection_owner_set	stubs/gtkstub.c	/^gint gtk_selection_owner_set(GtkWidget \*widget, GdkAtom selection, guint32 time)$/;"	f
gtk_selection_property_notify	stubs/gtkstub.c	/^gint gtk_selection_property_notify(GtkWidget \*widget, GdkEventProperty \*event)$/;"	f
gtk_selection_remove_all	stubs/gtkstub.c	/^void gtk_selection_remove_all(GtkWidget \*widget)$/;"	f
gtk_selection_request	stubs/gtkstub.c	/^gint gtk_selection_request(GtkWidget \*widget, GdkEventSelection \*event)$/;"	f
gtk_separator_get_type	stubs/gtkstub.c	/^GtkType gtk_separator_get_type(void)$/;"	f
gtk_set_locale	stubs/gtkstub.c	/^gchar\* gtk_set_locale(void)$/;"	f
gtk_signal_add_emission_hook	stubs/gtkstub.c	/^guint gtk_signal_add_emission_hook(guint signal_id, GtkEmissionHook hook_func, gpointer data)$/;"	f
gtk_signal_add_emission_hook_full	stubs/gtkstub.c	/^guint gtk_signal_add_emission_hook_full(guint signal_id, GtkEmissionHook hook_func, gpointer data, GDestroyNotify destroy)$/;"	f
gtk_signal_connect	stubs/gtkstub.c	/^guint gtk_signal_connect(GtkObject \*object, const gchar \*name, GtkSignalFunc func, gpointer func_data)$/;"	f
gtk_signal_connect_after	stubs/gtkstub.c	/^guint gtk_signal_connect_after(GtkObject \*object, const gchar \*name, GtkSignalFunc func, gpointer func_data)$/;"	f
gtk_signal_connect_full	stubs/gtkstub.c	/^guint gtk_signal_connect_full(GtkObject \*object, const gchar \*name, GtkSignalFunc func, GtkCallbackMarshal marshal, gpointer data, GtkDestroyNotify destroy_fu/;"	f
gtk_signal_connect_object	stubs/gtkstub.c	/^guint gtk_signal_connect_object(GtkObject \*object, const gchar \*name, GtkSignalFunc func, GtkObject \*slot_object)$/;"	f
gtk_signal_connect_object_after	stubs/gtkstub.c	/^guint gtk_signal_connect_object_after(GtkObject \*object, const gchar \*name, GtkSignalFunc func, GtkObject \*slot_object)$/;"	f
gtk_signal_connect_object_while_alive	stubs/gtkstub.c	/^void gtk_signal_connect_object_while_alive(GtkObject \*object, const gchar \*signal, GtkSignalFunc func, GtkObject \*alive_object)$/;"	f
gtk_signal_connect_while_alive	stubs/gtkstub.c	/^void gtk_signal_connect_while_alive(GtkObject \*object, const gchar \*signal, GtkSignalFunc func, gpointer func_data, GtkObject \*alive_object)$/;"	f
gtk_signal_default_marshaller	stubs/gtkstub.c	6755;"	d
gtk_signal_disconnect	stubs/gtkstub.c	/^void gtk_signal_disconnect(GtkObject \*object, guint handler_id)$/;"	f
gtk_signal_disconnect_by_data	stubs/gtkstub.c	/^void gtk_signal_disconnect_by_data(GtkObject \*object, gpointer data)$/;"	f
gtk_signal_disconnect_by_func	stubs/gtkstub.c	/^void gtk_signal_disconnect_by_func(GtkObject \*object, GtkSignalFunc func, gpointer data)$/;"	f
gtk_signal_emit	stubs/gtkstub.c	/^void gtk_signal_emit(GtkObject \*object, guint signal_id, \.\.\.)$/;"	f
gtk_signal_emit_by_name	stubs/gtkstub.c	/^void gtk_signal_emit_by_name(GtkObject \*object, const gchar \*name, \.\.\.)$/;"	f
gtk_signal_emit_stop	stubs/gtkstub.c	/^void gtk_signal_emit_stop(GtkObject \*object, guint signal_id)$/;"	f
gtk_signal_emit_stop_by_name	stubs/gtkstub.c	/^void gtk_signal_emit_stop_by_name(GtkObject \*object, const gchar \*name)$/;"	f
gtk_signal_emitv	stubs/gtkstub.c	/^void gtk_signal_emitv(GtkObject \*object, guint signal_id, GtkArg \*params)$/;"	f
gtk_signal_emitv_by_name	stubs/gtkstub.c	/^void gtk_signal_emitv_by_name(GtkObject \*object, const gchar \*name, GtkArg \*params)$/;"	f
gtk_signal_handler_block	stubs/gtkstub.c	/^void gtk_signal_handler_block(GtkObject \*object, guint handler_id)$/;"	f
gtk_signal_handler_block_by_data	stubs/gtkstub.c	/^void gtk_signal_handler_block_by_data(GtkObject \*object, gpointer data)$/;"	f
gtk_signal_handler_block_by_func	stubs/gtkstub.c	/^void gtk_signal_handler_block_by_func(GtkObject \*object, GtkSignalFunc func, gpointer data)$/;"	f
gtk_signal_handler_pending	stubs/gtkstub.c	/^guint gtk_signal_handler_pending(GtkObject \*object, guint signal_id, gboolean may_be_blocked)$/;"	f
gtk_signal_handler_pending_by_func	stubs/gtkstub.c	/^guint gtk_signal_handler_pending_by_func(GtkObject \*object, guint signal_id, gboolean may_be_blocked, GtkSignalFunc func, gpointer data)$/;"	f
gtk_signal_handler_pending_by_id	stubs/gtkstub.c	/^gint gtk_signal_handler_pending_by_id(GtkObject \*object, guint handler_id, gboolean may_be_blocked)$/;"	f
gtk_signal_handler_unblock	stubs/gtkstub.c	/^void gtk_signal_handler_unblock(GtkObject \*object, guint handler_id)$/;"	f
gtk_signal_handler_unblock_by_data	stubs/gtkstub.c	/^void gtk_signal_handler_unblock_by_data(GtkObject \*object, gpointer data)$/;"	f
gtk_signal_handler_unblock_by_func	stubs/gtkstub.c	/^void gtk_signal_handler_unblock_by_func(GtkObject \*object, GtkSignalFunc func, gpointer data)$/;"	f
gtk_signal_handlers_destroy	stubs/gtkstub.c	/^void gtk_signal_handlers_destroy(GtkObject \*object)$/;"	f
gtk_signal_init	stubs/gtkstub.c	/^void gtk_signal_init(void)$/;"	f
gtk_signal_lookup	stubs/gtkstub.c	/^guint gtk_signal_lookup(const gchar \*name, GtkType object_type)$/;"	f
gtk_signal_n_emissions	stubs/gtkstub.c	/^guint gtk_signal_n_emissions(GtkObject \*object, guint signal_id)$/;"	f
gtk_signal_n_emissions_by_name	stubs/gtkstub.c	/^guint gtk_signal_n_emissions_by_name(GtkObject \*object, const gchar \*name)$/;"	f
gtk_signal_name	stubs/gtkstub.c	/^gchar\* gtk_signal_name(guint signal_id)$/;"	f
gtk_signal_new	stubs/gtkstub.c	/^guint gtk_signal_new(const gchar \*name, GtkSignalRunType signal_flags, GtkType object_type, guint function_offset, GtkSignalMarshaller marshaller, GtkType retu/;"	f
gtk_signal_newv	stubs/gtkstub.c	/^guint gtk_signal_newv(const gchar \*name, GtkSignalRunType signal_flags, GtkType object_type, guint function_offset, GtkSignalMarshaller marshaller, GtkType ret/;"	f
gtk_signal_query	stubs/gtkstub.c	/^GtkSignalQuery\* gtk_signal_query(guint signal_id)$/;"	f
gtk_signal_remove_emission_hook	stubs/gtkstub.c	/^void gtk_signal_remove_emission_hook(guint signal_id, guint hook_id)$/;"	f
gtk_signal_set_funcs	stubs/gtkstub.c	/^void gtk_signal_set_funcs(GtkSignalMarshal marshal_func, GtkSignalDestroy destroy_func)$/;"	f
gtk_socket_get_type	stubs/gtkstub.c	/^guint gtk_socket_get_type(void )$/;"	f
gtk_socket_new	stubs/gtkstub.c	/^GtkWidget\* gtk_socket_new(void)$/;"	f
gtk_socket_steal	stubs/gtkstub.c	/^void gtk_socket_steal(GtkSocket \*socket, guint32 wid)$/;"	f
gtk_spin_button_configure	stubs/gtkstub.c	/^void gtk_spin_button_configure(GtkSpinButton \*spin_button, GtkAdjustment \*adjustment, gfloat climb_rate, guint digits)$/;"	f
gtk_spin_button_get_adjustment	stubs/gtkstub.c	/^GtkAdjustment\* gtk_spin_button_get_adjustment(GtkSpinButton \*spin_button)$/;"	f
gtk_spin_button_get_type	stubs/gtkstub.c	/^GtkType gtk_spin_button_get_type(void)$/;"	f
gtk_spin_button_get_value_as_float	stubs/gtkstub.c	/^gfloat gtk_spin_button_get_value_as_float(GtkSpinButton \*spin_button)$/;"	f
gtk_spin_button_get_value_as_int	stubs/gtkstub.c	/^gint gtk_spin_button_get_value_as_int(GtkSpinButton \*spin_button)$/;"	f
gtk_spin_button_new	stubs/gtkstub.c	/^GtkWidget\* gtk_spin_button_new(GtkAdjustment \*adjustment, gfloat climb_rate, guint digits)$/;"	f
gtk_spin_button_set_adjustment	stubs/gtkstub.c	/^void gtk_spin_button_set_adjustment(GtkSpinButton \*spin_button, GtkAdjustment \*adjustment)$/;"	f
gtk_spin_button_set_digits	stubs/gtkstub.c	/^void gtk_spin_button_set_digits(GtkSpinButton \*spin_button, guint digits)$/;"	f
gtk_spin_button_set_numeric	stubs/gtkstub.c	/^void gtk_spin_button_set_numeric(GtkSpinButton \*spin_button, gboolean numeric)$/;"	f
gtk_spin_button_set_shadow_type	stubs/gtkstub.c	/^void gtk_spin_button_set_shadow_type(GtkSpinButton \*spin_button, GtkShadowType shadow_type)$/;"	f
gtk_spin_button_set_snap_to_ticks	stubs/gtkstub.c	/^void gtk_spin_button_set_snap_to_ticks(GtkSpinButton \*spin_button, gboolean snap_to_ticks)$/;"	f
gtk_spin_button_set_update_policy	stubs/gtkstub.c	/^void gtk_spin_button_set_update_policy(GtkSpinButton \*spin_button, GtkSpinButtonUpdatePolicy policy)$/;"	f
gtk_spin_button_set_value	stubs/gtkstub.c	/^void gtk_spin_button_set_value(GtkSpinButton \*spin_button, gfloat value)$/;"	f
gtk_spin_button_set_wrap	stubs/gtkstub.c	/^void gtk_spin_button_set_wrap(GtkSpinButton \*spin_button, gboolean wrap)$/;"	f
gtk_spin_button_spin	stubs/gtkstub.c	/^void gtk_spin_button_spin(GtkSpinButton \*spin_button, GtkSpinType direction, gfloat increment)$/;"	f
gtk_spin_button_update	stubs/gtkstub.c	/^void gtk_spin_button_update(GtkSpinButton \*spin_button)$/;"	f
gtk_statusbar_get_context_id	stubs/gtkstub.c	/^guint gtk_statusbar_get_context_id(GtkStatusbar \*statusbar, const gchar \*context_description)$/;"	f
gtk_statusbar_get_type	stubs/gtkstub.c	/^guint gtk_statusbar_get_type(void)$/;"	f
gtk_statusbar_new	stubs/gtkstub.c	/^GtkWidget\* gtk_statusbar_new(void)$/;"	f
gtk_statusbar_pop	stubs/gtkstub.c	/^void gtk_statusbar_pop(GtkStatusbar \*statusbar, guint context_id)$/;"	f
gtk_statusbar_push	stubs/gtkstub.c	/^guint gtk_statusbar_push(GtkStatusbar \*statusbar, guint context_id, const gchar \*text)$/;"	f
gtk_statusbar_remove	stubs/gtkstub.c	/^void gtk_statusbar_remove(GtkStatusbar \*statusbar, guint context_id, guint message_id)$/;"	f
gtk_style_apply_default_background	stubs/gtkstub.c	/^void gtk_style_apply_default_background(GtkStyle \*style, GdkWindow \*window, gboolean set_bg, GtkStateType state_type, GdkRectangle \*area, gint x, gint y, gin/;"	f
gtk_style_apply_default_pixmap	stubs/gtkstub.c	2600;"	d
gtk_style_attach	stubs/gtkstub.c	/^GtkStyle\* gtk_style_attach(GtkStyle \*style, GdkWindow \*window)$/;"	f
gtk_style_copy	stubs/gtkstub.c	/^GtkStyle\* gtk_style_copy(GtkStyle \*style)$/;"	f
gtk_style_detach	stubs/gtkstub.c	/^void gtk_style_detach(GtkStyle \*style)$/;"	f
gtk_style_get_prop_experimental	stubs/gtkstub.c	/^gint gtk_style_get_prop_experimental(GtkStyle \*style, const gchar \*name, gint default_value)$/;"	f
gtk_style_new	stubs/gtkstub.c	/^GtkStyle\* gtk_style_new(void)$/;"	f
gtk_style_ref	stubs/gtkstub.c	/^GtkStyle\* gtk_style_ref(GtkStyle \*style)$/;"	f
gtk_style_set_background	stubs/gtkstub.c	/^void gtk_style_set_background(GtkStyle \*style, GdkWindow \*window, GtkStateType state_type)$/;"	f
gtk_style_set_prop_experimental	stubs/gtkstub.c	/^void gtk_style_set_prop_experimental(GtkStyle \*style, const gchar \*name, gint value)$/;"	f
gtk_style_unref	stubs/gtkstub.c	/^void gtk_style_unref(GtkStyle \*style)$/;"	f
gtk_table_attach	stubs/gtkstub.c	/^void gtk_table_attach(GtkTable \*table, GtkWidget \*child, guint left_attach, guint right_attach, guint top_attach, guint bottom_attach, GtkAttachOptions xoptio/;"	f
gtk_table_attach_defaults	stubs/gtkstub.c	/^void gtk_table_attach_defaults(GtkTable \*table, GtkWidget \*widget, guint left_attach, guint right_attach, guint top_attach, guint bottom_attach)$/;"	f
gtk_table_get_type	stubs/gtkstub.c	/^GtkType gtk_table_get_type(void)$/;"	f
gtk_table_new	stubs/gtkstub.c	/^GtkWidget\* gtk_table_new(guint rows, guint columns, gboolean homogeneous)$/;"	f
gtk_table_resize	stubs/gtkstub.c	/^void gtk_table_resize(GtkTable \*table, guint rows, guint columns)$/;"	f
gtk_table_set_col_spacing	stubs/gtkstub.c	/^void gtk_table_set_col_spacing(GtkTable \*table, guint column, guint spacing)$/;"	f
gtk_table_set_col_spacings	stubs/gtkstub.c	/^void gtk_table_set_col_spacings(GtkTable \*table, guint spacing)$/;"	f
gtk_table_set_homogeneous	stubs/gtkstub.c	/^void gtk_table_set_homogeneous(GtkTable \*table, gboolean homogeneous)$/;"	f
gtk_table_set_row_spacing	stubs/gtkstub.c	/^void gtk_table_set_row_spacing(GtkTable \*table, guint row, guint spacing)$/;"	f
gtk_table_set_row_spacings	stubs/gtkstub.c	/^void gtk_table_set_row_spacings(GtkTable \*table, guint spacing)$/;"	f
gtk_target_list_add	stubs/gtkstub.c	/^void gtk_target_list_add(GtkTargetList \*list, GdkAtom target, guint flags, guint info)$/;"	f
gtk_target_list_add_table	stubs/gtkstub.c	/^void gtk_target_list_add_table(GtkTargetList \*list, const GtkTargetEntry \*targets, guint ntargets)$/;"	f
gtk_target_list_find	stubs/gtkstub.c	/^gboolean gtk_target_list_find(GtkTargetList \*list, GdkAtom target, guint \*info)$/;"	f
gtk_target_list_new	stubs/gtkstub.c	/^GtkTargetList \*gtk_target_list_new(const GtkTargetEntry \*targets, guint ntargets)$/;"	f
gtk_target_list_ref	stubs/gtkstub.c	/^void gtk_target_list_ref(GtkTargetList \*list)$/;"	f
gtk_target_list_remove	stubs/gtkstub.c	/^void gtk_target_list_remove(GtkTargetList \*list, GdkAtom target)$/;"	f
gtk_target_list_unref	stubs/gtkstub.c	/^void gtk_target_list_unref(GtkTargetList \*list)$/;"	f
gtk_tearoff_menu_item_get_type	stubs/gtkstub.c	/^GtkType gtk_tearoff_menu_item_get_type(void)$/;"	f
gtk_tearoff_menu_item_new	stubs/gtkstub.c	/^GtkWidget\* gtk_tearoff_menu_item_new(void)$/;"	f
gtk_text_backward_delete	stubs/gtkstub.c	/^gint gtk_text_backward_delete(GtkText \*text, guint nchars)$/;"	f
gtk_text_forward_delete	stubs/gtkstub.c	/^gint gtk_text_forward_delete(GtkText \*text, guint nchars)$/;"	f
gtk_text_freeze	stubs/gtkstub.c	/^void gtk_text_freeze(GtkText \*text)$/;"	f
gtk_text_get_length	stubs/gtkstub.c	/^guint gtk_text_get_length(GtkText \*text)$/;"	f
gtk_text_get_point	stubs/gtkstub.c	/^guint gtk_text_get_point(GtkText \*text)$/;"	f
gtk_text_get_type	stubs/gtkstub.c	/^GtkType gtk_text_get_type(void)$/;"	f
gtk_text_insert	stubs/gtkstub.c	/^void gtk_text_insert(GtkText \*text, GdkFont \*font, GdkColor \*fore, GdkColor \*back, const char \*chars, gint length)$/;"	f
gtk_text_new	stubs/gtkstub.c	/^GtkWidget\* gtk_text_new(GtkAdjustment \*hadj, GtkAdjustment \*vadj)$/;"	f
gtk_text_set_adjustments	stubs/gtkstub.c	/^void gtk_text_set_adjustments(GtkText \*text, GtkAdjustment \*hadj, GtkAdjustment \*vadj)$/;"	f
gtk_text_set_editable	stubs/gtkstub.c	/^void gtk_text_set_editable(GtkText \*text, gboolean editable)$/;"	f
gtk_text_set_line_wrap	stubs/gtkstub.c	/^void gtk_text_set_line_wrap(GtkText \*text, gint line_wrap)$/;"	f
gtk_text_set_point	stubs/gtkstub.c	/^void gtk_text_set_point(GtkText \*text, guint index)$/;"	f
gtk_text_set_word_wrap	stubs/gtkstub.c	/^void gtk_text_set_word_wrap(GtkText \*text, gint word_wrap)$/;"	f
gtk_text_thaw	stubs/gtkstub.c	/^void gtk_text_thaw(GtkText \*text)$/;"	f
gtk_theme_engine_get	stubs/gtkstub.c	/^GtkThemeEngine \*gtk_theme_engine_get(const gchar \*name)$/;"	f
gtk_theme_engine_ref	stubs/gtkstub.c	/^void gtk_theme_engine_ref(GtkThemeEngine \*engine)$/;"	f
gtk_theme_engine_unref	stubs/gtkstub.c	/^void gtk_theme_engine_unref(GtkThemeEngine \*engine)$/;"	f
gtk_timeout_add	stubs/gtkstub.c	/^guint gtk_timeout_add(guint32 interval, GtkFunction function, gpointer data)$/;"	f
gtk_timeout_add_full	stubs/gtkstub.c	/^guint gtk_timeout_add_full(guint32 interval, GtkFunction function, GtkCallbackMarshal marshal, gpointer data, GtkDestroyNotify destroy)$/;"	f
gtk_timeout_remove	stubs/gtkstub.c	/^void gtk_timeout_remove(guint timeout_handler_id)$/;"	f
gtk_tips_query_get_type	stubs/gtkstub.c	/^GtkType gtk_tips_query_get_type(void)$/;"	f
gtk_tips_query_new	stubs/gtkstub.c	/^GtkWidget\* gtk_tips_query_new(void)$/;"	f
gtk_tips_query_set_caller	stubs/gtkstub.c	/^void gtk_tips_query_set_caller(GtkTipsQuery \*tips_query, GtkWidget \*caller)$/;"	f
gtk_tips_query_set_labels	stubs/gtkstub.c	/^void gtk_tips_query_set_labels(GtkTipsQuery \*tips_query, const gchar \*label_inactive, const gchar \*label_no_tip)$/;"	f
gtk_tips_query_start_query	stubs/gtkstub.c	/^void gtk_tips_query_start_query(GtkTipsQuery \*tips_query)$/;"	f
gtk_tips_query_stop_query	stubs/gtkstub.c	/^void gtk_tips_query_stop_query(GtkTipsQuery \*tips_query)$/;"	f
gtk_toggle_button_get_active	stubs/gtkstub.c	/^gboolean gtk_toggle_button_get_active(GtkToggleButton \*toggle_button)$/;"	f
gtk_toggle_button_get_type	stubs/gtkstub.c	/^GtkType gtk_toggle_button_get_type(void)$/;"	f
gtk_toggle_button_new	stubs/gtkstub.c	/^GtkWidget\* gtk_toggle_button_new(void)$/;"	f
gtk_toggle_button_new_with_label	stubs/gtkstub.c	/^GtkWidget\* gtk_toggle_button_new_with_label(const gchar \*label)$/;"	f
gtk_toggle_button_set_active	stubs/gtkstub.c	/^void gtk_toggle_button_set_active(GtkToggleButton \*toggle_button, gboolean is_active)$/;"	f
gtk_toggle_button_set_mode	stubs/gtkstub.c	/^void gtk_toggle_button_set_mode(GtkToggleButton \*toggle_button, gboolean draw_indicator)$/;"	f
gtk_toggle_button_set_state	stubs/gtkstub.c	2589;"	d
gtk_toggle_button_toggled	stubs/gtkstub.c	/^void gtk_toggle_button_toggled(GtkToggleButton \*toggle_button)$/;"	f
gtk_toolbar_append_element	stubs/gtkstub.c	/^GtkWidget\* gtk_toolbar_append_element(GtkToolbar \*toolbar, GtkToolbarChildType type, GtkWidget \*widget, const char \*text, const char \*tooltip_text, const c/;"	f
gtk_toolbar_append_item	stubs/gtkstub.c	/^GtkWidget\* gtk_toolbar_append_item(GtkToolbar \*toolbar, const char \*text, const char \*tooltip_text, const char \*tooltip_private_text, GtkWidget \*icon, Gtk/;"	f
gtk_toolbar_append_space	stubs/gtkstub.c	/^void gtk_toolbar_append_space(GtkToolbar \*toolbar)$/;"	f
gtk_toolbar_append_widget	stubs/gtkstub.c	/^void gtk_toolbar_append_widget(GtkToolbar \*toolbar, GtkWidget \*widget, const char \*tooltip_text, const char \*tooltip_private_text)$/;"	f
gtk_toolbar_get_button_relief	stubs/gtkstub.c	/^GtkReliefStyle gtk_toolbar_get_button_relief(GtkToolbar \*toolbar)$/;"	f
gtk_toolbar_get_type	stubs/gtkstub.c	/^GtkType gtk_toolbar_get_type(void)$/;"	f
gtk_toolbar_insert_element	stubs/gtkstub.c	/^GtkWidget\* gtk_toolbar_insert_element(GtkToolbar \*toolbar, GtkToolbarChildType type, GtkWidget \*widget, const char \*text, const char \*tooltip_text, const c/;"	f
gtk_toolbar_insert_item	stubs/gtkstub.c	/^GtkWidget\* gtk_toolbar_insert_item(GtkToolbar \*toolbar, const char \*text, const char \*tooltip_text, const char \*tooltip_private_text, GtkWidget \*icon, Gtk/;"	f
gtk_toolbar_insert_space	stubs/gtkstub.c	/^void gtk_toolbar_insert_space(GtkToolbar \*toolbar, gint position)$/;"	f
gtk_toolbar_insert_widget	stubs/gtkstub.c	/^void gtk_toolbar_insert_widget(GtkToolbar \*toolbar, GtkWidget \*widget, const char \*tooltip_text, const char \*tooltip_private_text, gint position)$/;"	f
gtk_toolbar_new	stubs/gtkstub.c	/^GtkWidget\* gtk_toolbar_new(GtkOrientation orientation, GtkToolbarStyle style)$/;"	f
gtk_toolbar_prepend_element	stubs/gtkstub.c	/^GtkWidget\* gtk_toolbar_prepend_element(GtkToolbar \*toolbar, GtkToolbarChildType type, GtkWidget \*widget, const char \*text, const char \*tooltip_text, const /;"	f
gtk_toolbar_prepend_item	stubs/gtkstub.c	/^GtkWidget\* gtk_toolbar_prepend_item(GtkToolbar \*toolbar, const char \*text, const char \*tooltip_text, const char \*tooltip_private_text, GtkWidget \*icon, Gt/;"	f
gtk_toolbar_prepend_space	stubs/gtkstub.c	/^void gtk_toolbar_prepend_space(GtkToolbar \*toolbar)$/;"	f
gtk_toolbar_prepend_widget	stubs/gtkstub.c	/^void gtk_toolbar_prepend_widget(GtkToolbar \*toolbar, GtkWidget \*widget, const char \*tooltip_text, const char \*tooltip_private_text)$/;"	f
gtk_toolbar_set_button_relief	stubs/gtkstub.c	/^void gtk_toolbar_set_button_relief(GtkToolbar \*toolbar, GtkReliefStyle relief)$/;"	f
gtk_toolbar_set_orientation	stubs/gtkstub.c	/^void gtk_toolbar_set_orientation(GtkToolbar \*toolbar, GtkOrientation orientation)$/;"	f
gtk_toolbar_set_space_size	stubs/gtkstub.c	/^void gtk_toolbar_set_space_size(GtkToolbar \*toolbar, gint space_size)$/;"	f
gtk_toolbar_set_space_style	stubs/gtkstub.c	/^void gtk_toolbar_set_space_style(GtkToolbar \*toolbar, GtkToolbarSpaceStyle space_style)$/;"	f
gtk_toolbar_set_style	stubs/gtkstub.c	/^void gtk_toolbar_set_style(GtkToolbar \*toolbar, GtkToolbarStyle style)$/;"	f
gtk_toolbar_set_tooltips	stubs/gtkstub.c	/^void gtk_toolbar_set_tooltips(GtkToolbar \*toolbar, gint enable)$/;"	f
gtk_tooltips_data_get	stubs/gtkstub.c	/^GtkTooltipsData\* gtk_tooltips_data_get(GtkWidget \*widget)$/;"	f
gtk_tooltips_disable	stubs/gtkstub.c	/^void gtk_tooltips_disable(GtkTooltips \*tooltips)$/;"	f
gtk_tooltips_enable	stubs/gtkstub.c	/^void gtk_tooltips_enable(GtkTooltips \*tooltips)$/;"	f
gtk_tooltips_force_window	stubs/gtkstub.c	/^void gtk_tooltips_force_window(GtkTooltips \*tooltips)$/;"	f
gtk_tooltips_get_type	stubs/gtkstub.c	/^GtkType gtk_tooltips_get_type(void)$/;"	f
gtk_tooltips_new	stubs/gtkstub.c	/^GtkTooltips\* gtk_tooltips_new(void)$/;"	f
gtk_tooltips_set_colors	stubs/gtkstub.c	/^void gtk_tooltips_set_colors(GtkTooltips \*tooltips, GdkColor \*background, GdkColor \*foreground)$/;"	f
gtk_tooltips_set_delay	stubs/gtkstub.c	/^void gtk_tooltips_set_delay(GtkTooltips \*tooltips, guint delay)$/;"	f
gtk_tooltips_set_tip	stubs/gtkstub.c	/^void gtk_tooltips_set_tip(GtkTooltips \*tooltips, GtkWidget \*widget, const gchar \*tip_text, const gchar \*tip_private)$/;"	f
gtk_trace_referencing	stubs/gtkstub.c	/^void gtk_trace_referencing(GtkObject \*object, const gchar \*func, guint dummy, guint line, gboolean do_ref)$/;"	f
gtk_tree_append	stubs/gtkstub.c	/^void gtk_tree_append(GtkTree \*tree, GtkWidget \*tree_item)$/;"	f
gtk_tree_child_position	stubs/gtkstub.c	/^gint gtk_tree_child_position(GtkTree \*tree, GtkWidget \*child)$/;"	f
gtk_tree_clear_items	stubs/gtkstub.c	/^void gtk_tree_clear_items(GtkTree \*tree, gint start, gint end)$/;"	f
gtk_tree_get_type	stubs/gtkstub.c	/^GtkType gtk_tree_get_type(void)$/;"	f
gtk_tree_insert	stubs/gtkstub.c	/^void gtk_tree_insert(GtkTree \*tree, GtkWidget \*tree_item, gint position)$/;"	f
gtk_tree_item_collapse	stubs/gtkstub.c	/^void gtk_tree_item_collapse(GtkTreeItem \*tree_item)$/;"	f
gtk_tree_item_deselect	stubs/gtkstub.c	/^void gtk_tree_item_deselect(GtkTreeItem \*tree_item)$/;"	f
gtk_tree_item_expand	stubs/gtkstub.c	/^void gtk_tree_item_expand(GtkTreeItem \*tree_item)$/;"	f
gtk_tree_item_get_type	stubs/gtkstub.c	/^GtkType gtk_tree_item_get_type(void)$/;"	f
gtk_tree_item_new	stubs/gtkstub.c	/^GtkWidget\* gtk_tree_item_new(void)$/;"	f
gtk_tree_item_new_with_label	stubs/gtkstub.c	/^GtkWidget\* gtk_tree_item_new_with_label(const gchar \*label)$/;"	f
gtk_tree_item_remove_subtree	stubs/gtkstub.c	/^void gtk_tree_item_remove_subtree(GtkTreeItem \*tree_item)$/;"	f
gtk_tree_item_select	stubs/gtkstub.c	/^void gtk_tree_item_select(GtkTreeItem \*tree_item)$/;"	f
gtk_tree_item_set_subtree	stubs/gtkstub.c	/^void gtk_tree_item_set_subtree(GtkTreeItem \*tree_item, GtkWidget \*subtree)$/;"	f
gtk_tree_new	stubs/gtkstub.c	/^GtkWidget\* gtk_tree_new(void)$/;"	f
gtk_tree_prepend	stubs/gtkstub.c	/^void gtk_tree_prepend(GtkTree \*tree, GtkWidget \*tree_item)$/;"	f
gtk_tree_remove_item	stubs/gtkstub.c	/^void gtk_tree_remove_item(GtkTree \*tree, GtkWidget \*child)$/;"	f
gtk_tree_remove_items	stubs/gtkstub.c	/^void gtk_tree_remove_items(GtkTree \*tree, GList \*items)$/;"	f
gtk_tree_select_child	stubs/gtkstub.c	/^void gtk_tree_select_child(GtkTree \*tree, GtkWidget \*tree_item)$/;"	f
gtk_tree_select_item	stubs/gtkstub.c	/^void gtk_tree_select_item(GtkTree \*tree, gint item)$/;"	f
gtk_tree_set_selection_mode	stubs/gtkstub.c	/^void gtk_tree_set_selection_mode(GtkTree \*tree, GtkSelectionMode mode)$/;"	f
gtk_tree_set_view_lines	stubs/gtkstub.c	/^void gtk_tree_set_view_lines(GtkTree \*tree, guint flag)$/;"	f
gtk_tree_set_view_mode	stubs/gtkstub.c	/^void gtk_tree_set_view_mode(GtkTree \*tree, GtkTreeViewMode mode)$/;"	f
gtk_tree_unselect_child	stubs/gtkstub.c	/^void gtk_tree_unselect_child(GtkTree \*tree, GtkWidget \*tree_item)$/;"	f
gtk_tree_unselect_item	stubs/gtkstub.c	/^void gtk_tree_unselect_item(GtkTree \*tree, gint item)$/;"	f
gtk_true	stubs/gtkstub.c	/^gint gtk_true(void)$/;"	f
gtk_type_check_class_cast	stubs/gtkstub.c	/^GtkTypeClass\* gtk_type_check_class_cast(GtkTypeClass \*klass, GtkType cast_type)$/;"	f
gtk_type_check_object_cast	stubs/gtkstub.c	/^GtkTypeObject\* gtk_type_check_object_cast(GtkTypeObject \*type_object, GtkType cast_type)$/;"	f
gtk_type_children_types	stubs/gtkstub.c	/^GList\* gtk_type_children_types(GtkType type)$/;"	f
gtk_type_class	stubs/gtkstub.c	/^gpointer gtk_type_class(GtkType type)$/;"	f
gtk_type_describe_heritage	stubs/gtkstub.c	/^void gtk_type_describe_heritage(GtkType type)$/;"	f
gtk_type_describe_tree	stubs/gtkstub.c	/^void gtk_type_describe_tree(GtkType type, gboolean show_size)$/;"	f
gtk_type_enum_find_value	stubs/gtkstub.c	/^GtkEnumValue\* gtk_type_enum_find_value(GtkType enum_type, const gchar \*value_name)$/;"	f
gtk_type_enum_get_values	stubs/gtkstub.c	/^GtkEnumValue\* gtk_type_enum_get_values(GtkType enum_type)$/;"	f
gtk_type_flags_find_value	stubs/gtkstub.c	/^GtkFlagValue\* gtk_type_flags_find_value(GtkType flag_type, const gchar \*value_name)$/;"	f
gtk_type_flags_get_values	stubs/gtkstub.c	/^GtkFlagValue\* gtk_type_flags_get_values(GtkType flags_type)$/;"	f
gtk_type_free	stubs/gtkstub.c	/^void gtk_type_free(GtkType type, gpointer mem)$/;"	f
gtk_type_from_name	stubs/gtkstub.c	/^GtkType gtk_type_from_name(const gchar \*name)$/;"	f
gtk_type_get_varargs_type	stubs/gtkstub.c	/^GtkType gtk_type_get_varargs_type(GtkType foreign_type)$/;"	f
gtk_type_init	stubs/gtkstub.c	/^void gtk_type_init(void)$/;"	f
gtk_type_is_a	stubs/gtkstub.c	/^gboolean gtk_type_is_a(GtkType type, GtkType is_a_type)$/;"	f
gtk_type_name	stubs/gtkstub.c	/^gchar\* gtk_type_name(guint type)$/;"	f
gtk_type_new	stubs/gtkstub.c	/^gpointer gtk_type_new(GtkType type)$/;"	f
gtk_type_parent	stubs/gtkstub.c	/^GtkType gtk_type_parent(GtkType type)$/;"	f
gtk_type_parent_class	stubs/gtkstub.c	/^gpointer gtk_type_parent_class(GtkType type)$/;"	f
gtk_type_query	stubs/gtkstub.c	/^GtkTypeQuery\* gtk_type_query(GtkType type)$/;"	f
gtk_type_register_enum	stubs/gtkstub.c	/^GtkType gtk_type_register_enum(const gchar \*type_name, GtkEnumValue \*values)$/;"	f
gtk_type_register_flags	stubs/gtkstub.c	/^GtkType gtk_type_register_flags(const gchar \*type_name, GtkFlagValue \*values)$/;"	f
gtk_type_set_chunk_alloc	stubs/gtkstub.c	/^void gtk_type_set_chunk_alloc(GtkType type, guint n_chunks)$/;"	f
gtk_type_set_varargs_type	stubs/gtkstub.c	/^void gtk_type_set_varargs_type(GtkType foreign_type, GtkType varargs_type)$/;"	f
gtk_type_unique	stubs/gtkstub.c	/^GtkType gtk_type_unique(GtkType parent_type, const GtkTypeInfo \*type_info)$/;"	f
gtk_vbox_get_type	stubs/gtkstub.c	/^GtkType gtk_vbox_get_type(void)$/;"	f
gtk_vbox_new	stubs/gtkstub.c	/^GtkWidget\* gtk_vbox_new(gboolean homogeneous, gint spacing)$/;"	f
gtk_vbutton_box_get_layout_default	stubs/gtkstub.c	/^GtkButtonBoxStyle gtk_vbutton_box_get_layout_default(void)$/;"	f
gtk_vbutton_box_get_spacing_default	stubs/gtkstub.c	/^gint gtk_vbutton_box_get_spacing_default(void)$/;"	f
gtk_vbutton_box_get_type	stubs/gtkstub.c	/^guint gtk_vbutton_box_get_type(void)$/;"	f
gtk_vbutton_box_new	stubs/gtkstub.c	/^GtkWidget \*gtk_vbutton_box_new(void)$/;"	f
gtk_vbutton_box_set_layout_default	stubs/gtkstub.c	/^void gtk_vbutton_box_set_layout_default(GtkButtonBoxStyle layout)$/;"	f
gtk_vbutton_box_set_spacing_default	stubs/gtkstub.c	/^void gtk_vbutton_box_set_spacing_default(gint spacing)$/;"	f
gtk_viewport_get_hadjustment	stubs/gtkstub.c	/^GtkAdjustment\* gtk_viewport_get_hadjustment(GtkViewport \*viewport)$/;"	f
gtk_viewport_get_type	stubs/gtkstub.c	/^GtkType gtk_viewport_get_type(void)$/;"	f
gtk_viewport_get_vadjustment	stubs/gtkstub.c	/^GtkAdjustment\* gtk_viewport_get_vadjustment(GtkViewport \*viewport)$/;"	f
gtk_viewport_new	stubs/gtkstub.c	/^GtkWidget\* gtk_viewport_new(GtkAdjustment \*hadjustment, GtkAdjustment \*vadjustment)$/;"	f
gtk_viewport_set_hadjustment	stubs/gtkstub.c	/^void gtk_viewport_set_hadjustment(GtkViewport \*viewport, GtkAdjustment \*adjustment)$/;"	f
gtk_viewport_set_shadow_type	stubs/gtkstub.c	/^void gtk_viewport_set_shadow_type(GtkViewport \*viewport, GtkShadowType type)$/;"	f
gtk_viewport_set_vadjustment	stubs/gtkstub.c	/^void gtk_viewport_set_vadjustment(GtkViewport \*viewport, GtkAdjustment \*adjustment)$/;"	f
gtk_vpaned_get_type	stubs/gtkstub.c	/^guint gtk_vpaned_get_type(void)$/;"	f
gtk_vpaned_new	stubs/gtkstub.c	/^GtkWidget\* gtk_vpaned_new(void)$/;"	f
gtk_vruler_get_type	stubs/gtkstub.c	/^guint gtk_vruler_get_type(void)$/;"	f
gtk_vruler_new	stubs/gtkstub.c	/^GtkWidget\* gtk_vruler_new(void)$/;"	f
gtk_vscale_get_type	stubs/gtkstub.c	/^GtkType gtk_vscale_get_type(void)$/;"	f
gtk_vscale_new	stubs/gtkstub.c	/^GtkWidget\* gtk_vscale_new(GtkAdjustment \*adjustment)$/;"	f
gtk_vscrollbar_get_type	stubs/gtkstub.c	/^GtkType gtk_vscrollbar_get_type(void)$/;"	f
gtk_vscrollbar_new	stubs/gtkstub.c	/^GtkWidget\* gtk_vscrollbar_new(GtkAdjustment \*adjustment)$/;"	f
gtk_vseparator_get_type	stubs/gtkstub.c	/^GtkType gtk_vseparator_get_type(void)$/;"	f
gtk_vseparator_new	stubs/gtkstub.c	/^GtkWidget\* gtk_vseparator_new(void)$/;"	f
gtk_widget_accelerator_signal	stubs/gtkstub.c	/^guint gtk_widget_accelerator_signal(GtkWidget \*widget, GtkAccelGroup \*accel_group, guint accel_key, guint accel_mods)$/;"	f
gtk_widget_accelerators_locked	stubs/gtkstub.c	/^gboolean gtk_widget_accelerators_locked(GtkWidget \*widget)$/;"	f
gtk_widget_activate	stubs/gtkstub.c	/^gboolean gtk_widget_activate(GtkWidget \*widget)$/;"	f
gtk_widget_add_accelerator	stubs/gtkstub.c	/^void gtk_widget_add_accelerator(GtkWidget \*widget, const gchar \*accel_signal, GtkAccelGroup \*accel_group, guint accel_key, guint accel_mods, GtkAccelFlags ac/;"	f
gtk_widget_add_events	stubs/gtkstub.c	/^void gtk_widget_add_events(GtkWidget \*widget, gint events)$/;"	f
gtk_widget_class_path	stubs/gtkstub.c	/^void gtk_widget_class_path(GtkWidget \*widget, guint \*path_length, gchar \*\*path, gchar \*\*path_reversed)$/;"	f
gtk_widget_destroy	stubs/gtkstub.c	/^void gtk_widget_destroy(GtkWidget \*widget)$/;"	f
gtk_widget_destroyed	stubs/gtkstub.c	/^void gtk_widget_destroyed(GtkWidget \*widget, GtkWidget \*\*widget_pointer)$/;"	f
gtk_widget_draw	stubs/gtkstub.c	/^void gtk_widget_draw(GtkWidget \*widget, GdkRectangle \*area)$/;"	f
gtk_widget_draw_default	stubs/gtkstub.c	/^void gtk_widget_draw_default(GtkWidget \*widget)$/;"	f
gtk_widget_draw_focus	stubs/gtkstub.c	/^void gtk_widget_draw_focus(GtkWidget \*widget)$/;"	f
gtk_widget_ensure_style	stubs/gtkstub.c	/^void gtk_widget_ensure_style(GtkWidget \*widget)$/;"	f
gtk_widget_event	stubs/gtkstub.c	/^gint gtk_widget_event(GtkWidget \*widget, GdkEvent \*event)$/;"	f
gtk_widget_get	stubs/gtkstub.c	/^void gtk_widget_get(GtkWidget \*widget, GtkArg \*arg)$/;"	f
gtk_widget_get_ancestor	stubs/gtkstub.c	/^GtkWidget\* gtk_widget_get_ancestor(GtkWidget \*widget, GtkType widget_type)$/;"	f
gtk_widget_get_child_requisition	stubs/gtkstub.c	/^void gtk_widget_get_child_requisition(GtkWidget \*widget, GtkRequisition \*requisition)$/;"	f
gtk_widget_get_colormap	stubs/gtkstub.c	/^GdkColormap\* gtk_widget_get_colormap(GtkWidget \*widget)$/;"	f
gtk_widget_get_composite_name	stubs/gtkstub.c	/^gchar\* gtk_widget_get_composite_name(GtkWidget \*widget)$/;"	f
gtk_widget_get_default_colormap	stubs/gtkstub.c	/^GdkColormap\* gtk_widget_get_default_colormap(void)$/;"	f
gtk_widget_get_default_style	stubs/gtkstub.c	/^GtkStyle\* gtk_widget_get_default_style(void)$/;"	f
gtk_widget_get_default_visual	stubs/gtkstub.c	/^GdkVisual\* gtk_widget_get_default_visual(void)$/;"	f
gtk_widget_get_events	stubs/gtkstub.c	/^gint gtk_widget_get_events(GtkWidget \*widget)$/;"	f
gtk_widget_get_extension_events	stubs/gtkstub.c	/^GdkExtensionMode gtk_widget_get_extension_events(GtkWidget \*widget)$/;"	f
gtk_widget_get_name	stubs/gtkstub.c	/^gchar\* gtk_widget_get_name(GtkWidget \*widget)$/;"	f
gtk_widget_get_parent_window	stubs/gtkstub.c	/^GdkWindow \*gtk_widget_get_parent_window(GtkWidget \*widget)$/;"	f
gtk_widget_get_pointer	stubs/gtkstub.c	/^void gtk_widget_get_pointer(GtkWidget \*widget, gint \*x, gint \*y)$/;"	f
gtk_widget_get_style	stubs/gtkstub.c	/^GtkStyle\* gtk_widget_get_style(GtkWidget \*widget)$/;"	f
gtk_widget_get_toplevel	stubs/gtkstub.c	/^GtkWidget\* gtk_widget_get_toplevel(GtkWidget \*widget)$/;"	f
gtk_widget_get_type	stubs/gtkstub.c	/^GtkType gtk_widget_get_type(void)$/;"	f
gtk_widget_get_visual	stubs/gtkstub.c	/^GdkVisual\* gtk_widget_get_visual(GtkWidget \*widget)$/;"	f
gtk_widget_getv	stubs/gtkstub.c	/^void gtk_widget_getv(GtkWidget \*widget, guint nargs, GtkArg \*args)$/;"	f
gtk_widget_grab_default	stubs/gtkstub.c	/^void gtk_widget_grab_default(GtkWidget \*widget)$/;"	f
gtk_widget_grab_focus	stubs/gtkstub.c	/^void gtk_widget_grab_focus(GtkWidget \*widget)$/;"	f
gtk_widget_hide	stubs/gtkstub.c	/^void gtk_widget_hide(GtkWidget \*widget)$/;"	f
gtk_widget_hide_all	stubs/gtkstub.c	/^void gtk_widget_hide_all(GtkWidget \*widget)$/;"	f
gtk_widget_hide_on_delete	stubs/gtkstub.c	/^gint gtk_widget_hide_on_delete(GtkWidget \*widget)$/;"	f
gtk_widget_intersect	stubs/gtkstub.c	/^gint gtk_widget_intersect(GtkWidget \*widget, GdkRectangle \*area, GdkRectangle \*intersection)$/;"	f
gtk_widget_is_ancestor	stubs/gtkstub.c	/^gboolean gtk_widget_is_ancestor(GtkWidget \*widget, GtkWidget \*ancestor)$/;"	f
gtk_widget_lock_accelerators	stubs/gtkstub.c	/^void gtk_widget_lock_accelerators(GtkWidget \*widget)$/;"	f
gtk_widget_map	stubs/gtkstub.c	/^void gtk_widget_map(GtkWidget \*widget)$/;"	f
gtk_widget_modify_style	stubs/gtkstub.c	/^void gtk_widget_modify_style(GtkWidget \*widget, GtkRcStyle \*style)$/;"	f
gtk_widget_new	stubs/gtkstub.c	/^GtkWidget\* gtk_widget_new(GtkType type, const gchar \*first_arg_name, \.\.\.)$/;"	f
gtk_widget_newv	stubs/gtkstub.c	/^GtkWidget\* gtk_widget_newv(GtkType type, guint nargs, GtkArg \*args)$/;"	f
gtk_widget_path	stubs/gtkstub.c	/^void gtk_widget_path(GtkWidget \*widget, guint \*path_length, gchar \*\*path, gchar \*\*path_reversed)$/;"	f
gtk_widget_pop_colormap	stubs/gtkstub.c	/^void gtk_widget_pop_colormap(void)$/;"	f
gtk_widget_pop_composite_child	stubs/gtkstub.c	/^void gtk_widget_pop_composite_child(void)$/;"	f
gtk_widget_pop_style	stubs/gtkstub.c	/^void gtk_widget_pop_style(void)$/;"	f
gtk_widget_pop_visual	stubs/gtkstub.c	/^void gtk_widget_pop_visual(void)$/;"	f
gtk_widget_popup	stubs/gtkstub.c	/^void gtk_widget_popup(GtkWidget \*widget, gint x, gint y)$/;"	f
gtk_widget_push_colormap	stubs/gtkstub.c	/^void gtk_widget_push_colormap(GdkColormap \*cmap)$/;"	f
gtk_widget_push_composite_child	stubs/gtkstub.c	/^void gtk_widget_push_composite_child(void)$/;"	f
gtk_widget_push_style	stubs/gtkstub.c	/^void gtk_widget_push_style(GtkStyle \*style)$/;"	f
gtk_widget_push_visual	stubs/gtkstub.c	/^void gtk_widget_push_visual(GdkVisual \*visual)$/;"	f
gtk_widget_queue_clear	stubs/gtkstub.c	/^void gtk_widget_queue_clear(GtkWidget \*widget)$/;"	f
gtk_widget_queue_clear_area	stubs/gtkstub.c	/^void gtk_widget_queue_clear_area(GtkWidget \*widget, gint x, gint y, gint width, gint height)$/;"	f
gtk_widget_queue_draw	stubs/gtkstub.c	/^void gtk_widget_queue_draw(GtkWidget \*widget)$/;"	f
gtk_widget_queue_draw_area	stubs/gtkstub.c	/^void gtk_widget_queue_draw_area(GtkWidget \*widget, gint x, gint y, gint width, gint height)$/;"	f
gtk_widget_queue_resize	stubs/gtkstub.c	/^void gtk_widget_queue_resize(GtkWidget \*widget)$/;"	f
gtk_widget_realize	stubs/gtkstub.c	/^void gtk_widget_realize(GtkWidget \*widget)$/;"	f
gtk_widget_ref	stubs/gtkstub.c	/^void gtk_widget_ref(GtkWidget \*widget)$/;"	f
gtk_widget_remove_accelerator	stubs/gtkstub.c	/^void gtk_widget_remove_accelerator(GtkWidget \*widget, GtkAccelGroup \*accel_group, guint accel_key, guint accel_mods)$/;"	f
gtk_widget_remove_accelerators	stubs/gtkstub.c	/^void gtk_widget_remove_accelerators(GtkWidget \*widget, const gchar \*accel_signal, gboolean visible_only)$/;"	f
gtk_widget_reparent	stubs/gtkstub.c	/^void gtk_widget_reparent(GtkWidget \*widget, GtkWidget \*new_parent)$/;"	f
gtk_widget_reset_rc_styles	stubs/gtkstub.c	/^void gtk_widget_reset_rc_styles(GtkWidget \*widget)$/;"	f
gtk_widget_reset_shapes	stubs/gtkstub.c	/^void gtk_widget_reset_shapes(GtkWidget \*widget)$/;"	f
gtk_widget_restore_default_style	stubs/gtkstub.c	/^void gtk_widget_restore_default_style(GtkWidget \*widget)$/;"	f
gtk_widget_set	stubs/gtkstub.c	/^void gtk_widget_set(GtkWidget \*widget, const gchar \*first_arg_name, \.\.\.)$/;"	f
gtk_widget_set_app_paintable	stubs/gtkstub.c	/^void gtk_widget_set_app_paintable(GtkWidget \*widget, gboolean app_paintable)$/;"	f
gtk_widget_set_colormap	stubs/gtkstub.c	/^void gtk_widget_set_colormap(GtkWidget \*widget, GdkColormap \*colormap)$/;"	f
gtk_widget_set_composite_name	stubs/gtkstub.c	/^void gtk_widget_set_composite_name(GtkWidget \*widget, const gchar \*name)$/;"	f
gtk_widget_set_default_colormap	stubs/gtkstub.c	/^void gtk_widget_set_default_colormap(GdkColormap \*colormap)$/;"	f
gtk_widget_set_default_style	stubs/gtkstub.c	/^void gtk_widget_set_default_style(GtkStyle \*style)$/;"	f
gtk_widget_set_default_visual	stubs/gtkstub.c	/^void gtk_widget_set_default_visual(GdkVisual \*visual)$/;"	f
gtk_widget_set_events	stubs/gtkstub.c	/^void gtk_widget_set_events(GtkWidget \*widget, gint events)$/;"	f
gtk_widget_set_extension_events	stubs/gtkstub.c	/^void gtk_widget_set_extension_events(GtkWidget \*widget, GdkExtensionMode mode)$/;"	f
gtk_widget_set_name	stubs/gtkstub.c	/^void gtk_widget_set_name(GtkWidget \*widget, const gchar \*name)$/;"	f
gtk_widget_set_parent	stubs/gtkstub.c	/^void gtk_widget_set_parent(GtkWidget \*widget, GtkWidget \*parent)$/;"	f
gtk_widget_set_parent_window	stubs/gtkstub.c	/^void gtk_widget_set_parent_window(GtkWidget \*widget, GdkWindow \*parent_window)$/;"	f
gtk_widget_set_rc_style	stubs/gtkstub.c	/^void gtk_widget_set_rc_style(GtkWidget \*widget)$/;"	f
gtk_widget_set_scroll_adjustments	stubs/gtkstub.c	/^gboolean gtk_widget_set_scroll_adjustments(GtkWidget \*widget, GtkAdjustment \*hadjustment, GtkAdjustment \*vadjustment)$/;"	f
gtk_widget_set_sensitive	stubs/gtkstub.c	/^void gtk_widget_set_sensitive(GtkWidget \*widget, gboolean sensitive)$/;"	f
gtk_widget_set_state	stubs/gtkstub.c	/^void gtk_widget_set_state(GtkWidget \*widget, GtkStateType state)$/;"	f
gtk_widget_set_style	stubs/gtkstub.c	/^void gtk_widget_set_style(GtkWidget \*widget, GtkStyle \*style)$/;"	f
gtk_widget_set_uposition	stubs/gtkstub.c	/^void gtk_widget_set_uposition(GtkWidget \*widget, gint x, gint y)$/;"	f
gtk_widget_set_usize	stubs/gtkstub.c	/^void gtk_widget_set_usize(GtkWidget \*widget, gint width, gint height)$/;"	f
gtk_widget_set_visual	stubs/gtkstub.c	/^void gtk_widget_set_visual(GtkWidget \*widget, GdkVisual \*visual)$/;"	f
gtk_widget_setv	stubs/gtkstub.c	/^void gtk_widget_setv(GtkWidget \*widget, guint nargs, GtkArg \*args)$/;"	f
gtk_widget_shape_combine_mask	stubs/gtkstub.c	/^void gtk_widget_shape_combine_mask(GtkWidget \*widget, GdkBitmap \*shape_mask, gint offset_x, gint offset_y)$/;"	f
gtk_widget_show	stubs/gtkstub.c	/^void gtk_widget_show(GtkWidget \*widget)$/;"	f
gtk_widget_show_all	stubs/gtkstub.c	/^void gtk_widget_show_all(GtkWidget \*widget)$/;"	f
gtk_widget_show_now	stubs/gtkstub.c	/^void gtk_widget_show_now(GtkWidget \*widget)$/;"	f
gtk_widget_size_allocate	stubs/gtkstub.c	/^void gtk_widget_size_allocate(GtkWidget \*widget, GtkAllocation \*allocation)$/;"	f
gtk_widget_size_request	stubs/gtkstub.c	/^void gtk_widget_size_request(GtkWidget \*widget, GtkRequisition \*requisition)$/;"	f
gtk_widget_unlock_accelerators	stubs/gtkstub.c	/^void gtk_widget_unlock_accelerators(GtkWidget \*widget)$/;"	f
gtk_widget_unmap	stubs/gtkstub.c	/^void gtk_widget_unmap(GtkWidget \*widget)$/;"	f
gtk_widget_unparent	stubs/gtkstub.c	/^void gtk_widget_unparent(GtkWidget \*widget)$/;"	f
gtk_widget_unrealize	stubs/gtkstub.c	/^void gtk_widget_unrealize(GtkWidget \*widget)$/;"	f
gtk_widget_unref	stubs/gtkstub.c	/^void gtk_widget_unref(GtkWidget \*widget)$/;"	f
gtk_window_activate_default	stubs/gtkstub.c	/^gint gtk_window_activate_default(GtkWindow \*window)$/;"	f
gtk_window_activate_focus	stubs/gtkstub.c	/^gint gtk_window_activate_focus(GtkWindow \*window)$/;"	f
gtk_window_add_accel_group	stubs/gtkstub.c	/^void gtk_window_add_accel_group(GtkWindow \*window, GtkAccelGroup \*accel_group)$/;"	f
gtk_window_get_type	stubs/gtkstub.c	/^GtkType gtk_window_get_type(void)$/;"	f
gtk_window_new	stubs/gtkstub.c	/^GtkWidget\* gtk_window_new(GtkWindowType type)$/;"	f
gtk_window_position	stubs/gtkstub.c	2586;"	d
gtk_window_remove_accel_group	stubs/gtkstub.c	/^void gtk_window_remove_accel_group(GtkWindow \*window, GtkAccelGroup \*accel_group)$/;"	f
gtk_window_set_default_size	stubs/gtkstub.c	/^void gtk_window_set_default_size(GtkWindow \*window, gint width, gint height)$/;"	f
gtk_window_set_geometry_hints	stubs/gtkstub.c	/^void gtk_window_set_geometry_hints(GtkWindow \*window, GtkWidget \*geometry_widget, GdkGeometry \*geometry, GdkWindowHints geom_mask)$/;"	f
gtk_window_set_modal	stubs/gtkstub.c	/^void gtk_window_set_modal(GtkWindow \*window, gboolean modal)$/;"	f
gtk_window_set_policy	stubs/gtkstub.c	/^void gtk_window_set_policy(GtkWindow \*window, gint allow_shrink, gint allow_grow, gint auto_shrink)$/;"	f
gtk_window_set_position	stubs/gtkstub.c	/^void gtk_window_set_position(GtkWindow \*window, GtkWindowPosition position)$/;"	f
gtk_window_set_title	stubs/gtkstub.c	/^void gtk_window_set_title(GtkWindow \*window, const gchar \*title)$/;"	f
gtk_window_set_transient_for	stubs/gtkstub.c	/^void gtk_window_set_transient_for(GtkWindow \*window, GtkWindow \*parent)$/;"	f
gtk_window_set_wmclass	stubs/gtkstub.c	/^void gtk_window_set_wmclass(GtkWindow \*window, const gchar \*wmclass_name, const gchar \*wmclass_class)$/;"	f
guchar	stubs/glibstub.c	/^typedef unsigned char	guchar;$/;"	t
guint	stubs/glibstub.c	/^typedef unsigned int	guint;$/;"	t
guint	stubs/gtkstub.c	11414;"	struct:GtkThemeEngine
guint16	stubs/glibstub.c	/^typedef unsigned short guint16;	\/\* 8-bit unsigned integer (system dependent) \*\/$/;"	t
guint32	stubs/glibstub.c	/^typedef unsigned long guint32;	\/\* 8-bit unsigned integer (system dependent) \*\/$/;"	t
guint64	stubs/glibstub.c	/^typedef unsigned long long guint64; \/\* 64-bit unsigned integer (system dep\.) \*\/$/;"	t
guint8	stubs/glibstub.c	/^typedef unsigned char guint8;	\/\* 8-bit unsigned integer (system dependent) \*\/$/;"	t
gulong	stubs/glibstub.c	/^typedef unsigned long	gulong;$/;"	t
gushort	stubs/glibstub.c	/^typedef unsigned short	gushort;$/;"	t
gutter_size	stubs/gtkstub.c	8493;"	struct:GtkPaned
hadj	stubs/gtkstub.c	11279;"	struct:GtkText
hadjustment	stubs/gtkstub.c	1619;"	struct:GtkCList
hadjustment	stubs/gtkstub.c	6161;"	struct:GtkLayout
hadjustment	stubs/gtkstub.c	13175;"	struct:GtkViewport
handle	stubs/gtkstub.c	8493;"	struct:GtkPaned
handle_position	stubs/gtkstub.c	5189;"	struct:GtkHandleBox
handle_size	stubs/gtkstub.c	8493;"	struct:GtkPaned
handle_xpos	stubs/gtkstub.c	8493;"	struct:GtkPaned
handle_ypos	stubs/gtkstub.c	8493;"	struct:GtkPaned
handling_resize	stubs/gtkstub.c	14411;"	struct:GtkWindow
has_cursor	stubs/gdkstub.c	6302;"	struct:GdkDeviceInfo
has_selection	stubs/gtkstub.c	3824;"	struct:GtkEditable
hash_next	stubs/gtkstub.c	776;"	struct:GtkBindingEntry
have_grab	stubs/gtkstub.c	7391;"	struct:GtkMenuShell
have_size	stubs/gtkstub.c	10343;"	struct:GtkSocket
have_visible_child	stubs/gtkstub.c	7555;"	struct:GtkNotebook
have_xgrab	stubs/gtkstub.c	7391;"	struct:GtkMenuShell
hbox	stubs/gtkstub.c	2500;"	struct:GtkCombo
header_style	stubs/gtkstub.c	1158;"	struct:GtkCalendar
height	stubs/gdkstub.c	6143;"	struct:GdkWindowAttr
height	stubs/gdkstub.c	6178;"	struct:GdkImage
height	stubs/gdkstub.c	6223;"	struct:GdkRectangle
height	stubs/gdkstub.c	6457;"	struct:GdkEventConfigure
height	stubs/gtkstub.c	3448;"	struct:GtkCurve
height	stubs/gtkstub.c	6161;"	struct:GtkLayout
height	stubs/gtkstub.c	8248;"	struct:GtkOptionMenu
height	stubs/gtkstub.c	13582;"	struct:GtkRequisition
height	stubs/gtkstub.c	13596;"	struct:GtkAllocation
height	stubs/gtkstub.c	13801;"	struct:GtkWidgetAuxInfo
height	stubs/xftstub.c	115;"	struct:XGlyphInfo
height	stubs/xftstub.c	436;"	struct:XftFont
height	stubs/xlibstub.c	356;"	struct:Screen
height	stubs/xlibstub.c	408;"	struct:XWindowAttributes
height	stubs/xlibstub.c	442;"	struct:XImage
height	stubs/xlibstub.c	451;"	struct:XWindowChanges
height	stubs/xlibstub.c	475;"	struct:XRectangle
height	stubs/xlibstub.c	482;"	struct:XArc
height	stubs/xlibstub.c	657;"	struct:XExposeEvent
height	stubs/xlibstub.c	671;"	struct:XGraphicsExposeEvent
height	stubs/xlibstub.c	706;"	struct:XCreateWindowEvent
height	stubs/xlibstub.c	776;"	struct:XConfigureEvent
height	stubs/xlibstub.c	797;"	struct:XResizeRequestEvent
height	stubs/xlibstub.c	813;"	struct:XConfigureRequestEvent
height	stubs/xlibstub.c	1286;"	struct:XSizeHints
height	stubs/xpmstub.c	41;"	struct:XpmImage
height	stubs/xpmstub.c	118;"	struct:XpmAttributes
height_inc	stubs/gdkstub.c	6164;"	struct:GdkGeometry
height_inc	stubs/xlibstub.c	1286;"	struct:XSizeHints
height_inc	stubs/xlibstub.c	1322;"	struct:XIconSize
help_button	stubs/gtkstub.c	2403;"	struct:GtkColorSelectionDialog
help_button	stubs/gtkstub.c	4597;"	struct:GtkFileSelection
hide	stubs/gtkstub.c	7297;"	struct:GtkMenuItemClass
hide_on_activate	stubs/gtkstub.c	7297;"	struct:GtkMenuItemClass
highlight_col	stubs/gtkstub.c	1158;"	struct:GtkCalendar
highlight_row	stubs/gtkstub.c	1158;"	struct:GtkCalendar
hints_cmt	stubs/xpmstub.c	52;"	struct:XpmInfo
hints_cmt	stubs/xpmstub.c	118;"	struct:XpmAttributes
history_list	stubs/gtkstub.c	4597;"	struct:GtkFileSelection
history_menu	stubs/gtkstub.c	4597;"	struct:GtkFileSelection
history_pulldown	stubs/gtkstub.c	4597;"	struct:GtkFileSelection
hoffset	stubs/gtkstub.c	1619;"	struct:GtkCList
homogeneous	stubs/gtkstub.c	922;"	struct:GtkBox
homogeneous	stubs/gtkstub.c	7555;"	struct:GtkNotebook
homogeneous	stubs/gtkstub.c	11005;"	struct:GtkTable
hook_destroy	stubs/glibstub.c	1179;"	struct:GHookList
hook_free	stubs/glibstub.c	1179;"	struct:GHookList
hook_id	stubs/glibstub.c	1192;"	struct:GHook
hook_memchunk	stubs/glibstub.c	1179;"	struct:GHookList
hook_size	stubs/glibstub.c	1179;"	struct:GHookList
hooks	stubs/glibstub.c	1179;"	struct:GHookList
horizontal	stubs/gtkstub.c	1714;"	struct:GtkCellText
horizontal	stubs/gtkstub.c	1729;"	struct:GtkCellPixmap
horizontal	stubs/gtkstub.c	1746;"	struct:GtkCellPixText
horizontal	stubs/gtkstub.c	1760;"	struct:GtkCellWidget
horizontal	stubs/gtkstub.c	1790;"	struct:GtkCell
howmany	stubs/unixstub.c	4509;"	d
hscrollbar	stubs/gtkstub.c	9842;"	struct:GtkScrolledWindow
hscrollbar_policy	stubs/gtkstub.c	9842;"	struct:GtkScrolledWindow
hscrollbar_visible	stubs/gtkstub.c	9842;"	struct:GtkScrolledWindow
htimer	stubs/gtkstub.c	1619;"	struct:GtkCList
htimer	stubs/gtkstub.c	6281;"	struct:GtkList
i387	stubs/unixstub.c	/^  struct user_fpregs_struct	i387;$/;"	t
i_pad_x	stubs/gtkstub.c	8366;"	struct:GtkPackerChild
i_pad_y	stubs/gtkstub.c	8366;"	struct:GtkPackerChild
ic	stubs/gtkstub.c	3824;"	struct:GtkEditable
ic_attr	stubs/gtkstub.c	3824;"	struct:GtkEditable
icon	stubs/gtkstub.c	11631;"	struct:GtkToolbarChild
icon_mask	stubs/xlibstub.c	1299;"	struct:XWMHints
icon_pixmap	stubs/xlibstub.c	1299;"	struct:XWMHints
icon_window	stubs/xlibstub.c	1299;"	struct:XWMHints
icon_x	stubs/xlibstub.c	1299;"	struct:XWMHints
icon_y	stubs/xlibstub.c	1299;"	struct:XWMHints
id	stubs/xftstub.c	34;"	struct:XRenderPictFormat
id_t	stubs/unixstub.c	/^typedef __id_t id_t;$/;"	t
identifier_2_string	stubs/glibstub.c	2255;"	struct:GScannerConfig
idtype_t	stubs/unixstub.c	/^} idtype_t;$/;"	t
idtype_t	stubs/unixstub.c	/^} idtype_t;$/;"	v
idtype_t	stubs/unixstub.c	/^} idtype_t;$/;"	v
idtype_t	stubs/unixstub.c	/^} idtype_t;$/;"	v
ignore_enter	stubs/gtkstub.c	7391;"	struct:GtkMenuShell
ignore_leave	stubs/gtkstub.c	7391;"	struct:GtkMenuShell
image	stubs/gtkstub.c	5560;"	struct:GtkImage
in	stubs/gdkstub.c	6446;"	struct:GdkEventFocus
in_block	stubs/gtkstub.c	8942;"	struct:GtkProgressBar
in_button	stubs/gtkstub.c	1028;"	struct:GtkButton
in_child	stubs/gtkstub.c	7555;"	struct:GtkNotebook
in_child	stubs/gtkstub.c	9291;"	struct:GtkRange
in_child	stubs/gtkstub.c	10436;"	struct:GtkSpinButton
in_drag	stubs/gtkstub.c	5189;"	struct:GtkHandleBox
in_drag	stubs/gtkstub.c	8493;"	struct:GtkPaned
in_emission	stubs/gtkstub.c	776;"	struct:GtkBindingEntry
in_propagation	stubs/gtkstub.c	5799;"	struct:GtkItemFactoryItem
inb_p	stubs/unixstub.c	/^static __inline unsigned char inb_p (unsigned short port)$/;"	f
indent_value	stubs/gtkstub.c	11935;"	struct:GtkTree
index	stubs/gtkstub.c	11172;"	struct:GtkPropertyMark
indicator_size	stubs/gtkstub.c	1277;"	struct:GtkCheckButtonClass
indicator_spacing	stubs/gtkstub.c	1277;"	struct:GtkCheckButtonClass
info	stubs/gtkstub.c	8741;"	struct:GtkPreviewClass
info	stubs/gtkstub.c	9907;"	struct:GtkTargetEntry
info	stubs/gtkstub.c	9925;"	struct:GtkTargetPair
info_clist	stubs/gtkstub.c	4847;"	struct:GtkFontSelection
info_vbox	stubs/gtkstub.c	4847;"	struct:GtkFontSelection
initial_state	stubs/xlibstub.c	1299;"	struct:XWMHints
inl	stubs/unixstub.c	/^static __inline unsigned int inl (unsigned short port)$/;"	f
inl_p	stubs/unixstub.c	/^static __inline unsigned int inl_p (unsigned short port)$/;"	f
ino_t	stubs/unixstub.c	/^typedef __ino_t ino_t;$/;"	t
ino_t	stubs/unixstub.c	/^typedef __ino64_t ino_t;$/;"	t
input	stubs/xlibstub.c	1299;"	struct:XWMHints
input_fd	stubs/glibstub.c	2298;"	struct:GScanner
input_name	stubs/glibstub.c	2298;"	struct:GScanner
insb	stubs/unixstub.c	/^static __inline void insb (unsigned short port, void \*addr, unsigned long count)$/;"	f
insert_pos	stubs/gtkstub.c	1522;"	struct:GtkCListDestInfo
insl	stubs/unixstub.c	/^static __inline void insl (unsigned short port, void \*addr, unsigned long count)$/;"	f
instance	stubs/gtkstub.c	7297;"	struct:GtkMenuItemClass
insw	stubs/unixstub.c	/^static __inline void insw (unsigned short port, void \*addr, unsigned long count)$/;"	f
int	stubs/xlibstub.c	268;"	struct:XExtData
int_2_float	stubs/glibstub.c	2255;"	struct:GScannerConfig
internal_allocation	stubs/gtkstub.c	1619;"	struct:GtkCList
intptr_t	stubs/unixstub.c	/^typedef __intptr_t intptr_t;$/;"	t
inw	stubs/unixstub.c	/^static __inline unsigned short inw (unsigned short port)$/;"	f
inw_p	stubs/unixstub.c	/^static __inline unsigned short inw_p (unsigned short port)$/;"	f
ioperm	stubs/unixstub.c	/^int ioperm (unsigned long __from, unsigned long __num, int __turn_on)$/;"	f
ipoff	stubs/unixstub.c	/^  unsigned long ipoff;$/;"	v
is_hint	stubs/gdkstub.c	6387;"	struct:GdkEventMotion
is_hint	stubs/xlibstub.c	585;"	struct:XMotionEvent
is_leaf	stubs/gtkstub.c	3021;"	struct:GtkCTreeRow
is_setup	stubs/glibstub.c	1179;"	struct:GHookList
is_source	stubs/gdkstub.c	6327;"	struct:GdkDragContext
isalnum	stubs/ansistub.c	/^int isalnum(int ch)$/;"	f
isalpha	stubs/ansistub.c	/^int isalpha(int ch)$/;"	f
isatty	stubs/unixstub.c	/^int isatty(int fd)$/;"	f
isclr	stubs/unixstub.c	4512;"	d
iscntrl	stubs/ansistub.c	/^int iscntrl(int ch)$/;"	f
isdigit	stubs/ansistub.c	/^int isdigit(int ch)$/;"	f
isgraph	stubs/ansistub.c	/^int isgraph(int ch)$/;"	f
islower	stubs/ansistub.c	/^int islower(int ch)$/;"	f
isprint	stubs/ansistub.c	/^int isprint(int ch)$/;"	f
ispunct	stubs/ansistub.c	/^int ispunct(int ch)$/;"	f
isset	stubs/unixstub.c	4515;"	d
isspace	stubs/ansistub.c	/^int isspace(int ch)$/;"	f
isupper	stubs/ansistub.c	/^int isupper(int ch)$/;"	f
isxdigit	stubs/ansistub.c	/^int isxdigit(int ch)$/;"	f
item	stubs/gtkstub.c	6450;"	struct:GtkListItem
item	stubs/gtkstub.c	7278;"	struct:GtkMenuItem
item	stubs/gtkstub.c	12067;"	struct:GtkTreeItem
item_ht	stubs/gtkstub.c	5759;"	struct:GtkItemFactoryClass
item_type	stubs/gtkstub.c	5785;"	struct:GtkItemFactoryEntry
items	stubs/glibstub.c	2430;"	struct:GCompletion
items	stubs/gtkstub.c	5746;"	struct:GtkItemFactory
itimerval	stubs/unixstub.c	/^struct itimerval$/;"	s
join_style	stubs/gdkstub.c	6201;"	struct:GdkGCValues
join_style	stubs/xlibstub.c	312;"	struct:XGCValues
jtype	stubs/gtkstub.c	6064;"	struct:GtkLabel
julian	stubs/glibstub.c	2541;"	struct:GDate
julian_days	stubs/glibstub.c	2541;"	struct:GDate
justification	stubs/gtkstub.c	1679;"	struct:GtkCListColumn
key	stubs/gdkstub.c	6539;"	union:GdkEvent
key	stubs/glibstub.c	601;"	struct:GDebugKey
key	stubs/xlibstub.c	494;"	struct:XKeyboardControl
key	stubs/xlibstub.c	1258;"	struct:XIMHotKeyTriggers
key_click_percent	stubs/xlibstub.c	494;"	struct:XKeyboardControl
key_click_percent	stubs/xlibstub.c	504;"	struct:XKeyboardState
key_t	stubs/unixstub.c	/^typedef __key_t key_t;$/;"	t
key_vector	stubs/xlibstub.c	645;"	struct:XKeymapEvent
keyboard	stubs/gtkstub.c	7297;"	struct:GtkMenuItemClass
keycode	stubs/xlibstub.c	539;"	struct:XKeyEvent
keys	stubs/gdkstub.c	6302;"	struct:GdkDeviceInfo
keys	stubs/gtkstub.c	10565;"	struct:GtkStatusbar
keys_list	stubs/gtkstub.c	5627;"	struct:GtkInputDialog
keys_listbox	stubs/gtkstub.c	5627;"	struct:GtkInputDialog
keysym	stubs/xlibstub.c	1252;"	struct:XIMHotKeyTrigger
keyval	stubs/gdkstub.c	6288;"	struct:GdkDeviceKey
keyval	stubs/gdkstub.c	6419;"	struct:GdkEventKey
keyval	stubs/gtkstub.c	776;"	struct:GtkBindingEntry
killid	stubs/xlibstub.c	1362;"	struct:XStandardColormap
klass	stubs/gtkstub.c	7910;"	struct:GtkObject
klass	stubs/gtkstub.c	10674;"	struct:GtkStyle
klass	stubs/gtkstub.c	12683;"	struct:GtkTypeObject
label	stubs/gtkstub.c	206;"	struct:GtkAccelLabel
label	stubs/gtkstub.c	5055;"	struct:GtkFrame
label	stubs/gtkstub.c	6064;"	struct:GtkLabel
label	stubs/gtkstub.c	10565;"	struct:GtkStatusbar
label	stubs/gtkstub.c	11631;"	struct:GtkToolbarChild
label_height	stubs/gtkstub.c	5055;"	struct:GtkFrame
label_style	stubs/gtkstub.c	1158;"	struct:GtkCalendar
label_wc	stubs/gtkstub.c	6064;"	struct:GtkLabel
label_width	stubs/gtkstub.c	5055;"	struct:GtkFrame
label_xalign	stubs/gtkstub.c	5055;"	struct:GtkFrame
label_yalign	stubs/gtkstub.c	5055;"	struct:GtkFrame
labs	stubs/ansistub.c	/^long int labs(long int num)$/;"	f
last	stubs/gtkstub.c	3448;"	struct:GtkCurve
last_allocation	stubs/gtkstub.c	8493;"	struct:GtkPaned
last_focus_child	stubs/gtkstub.c	6281;"	struct:GtkList
latin1_to_char	stubs/gtkstub.c	221;"	struct:GtkAccelLabelClass
layout_style	stubs/gtkstub.c	625;"	struct:GtkButtonBox
lbearing	stubs/xlibstub.c	998;"	struct:XCharStruct
lchown	stubs/unixstub.c	/^int lchown(const char \*file, uid_t owner, gid_t group)$/;"	f
lconv	stubs/ansistub.c	/^struct lconv$/;"	s
ldexp	stubs/ansistub.c	/^double ldexp(double num, int exp)$/;"	f
ldiv	stubs/ansistub.c	/^ldiv_t ldiv(long int num, long int divisor)$/;"	f
ldiv_t	stubs/ansistub.c	/^} ldiv_t;$/;"	t
led	stubs/xlibstub.c	494;"	struct:XKeyboardControl
led_mask	stubs/xlibstub.c	504;"	struct:XKeyboardState
led_mode	stubs/xlibstub.c	494;"	struct:XKeyboardControl
left_attach	stubs/gtkstub.c	11031;"	struct:GtkTableChild
len	stubs/glibstub.c	572;"	struct:GString
len	stubs/glibstub.c	578;"	struct:GArray
len	stubs/glibstub.c	584;"	struct:GByteArray
len	stubs/glibstub.c	590;"	struct:GPtrArray
len	stubs/glibstub.c	595;"	struct:GTuples
length	stubs/gdkstub.c	6419;"	struct:GdkEventKey
length	stubs/gtkstub.c	13617;"	struct:GtkSelectionData
length	stubs/xlibstub.c	415;"	struct:XHostAddress
length	stubs/xlibstub.c	1159;"	struct:XIMText
length	stubs/xlibstub.c	1184;"	struct:XIMStringConversionText
level	stubs/gtkstub.c	3021;"	struct:GtkCTreeRow
level	stubs/gtkstub.c	11935;"	struct:GtkTree
light	stubs/gtkstub.c	10674;"	struct:GtkStyle
light_gc	stubs/gtkstub.c	10674;"	struct:GtkStyle
line	stubs/glibstub.c	2298;"	struct:GScanner
line_arrow_bitmap	stubs/gtkstub.c	11279;"	struct:GtkText
line_spacing	stubs/gdkstub.c	6573;"	struct:GdkICAttr
line_style	stubs/gdkstub.c	6201;"	struct:GdkGCValues
line_style	stubs/gtkstub.c	2986;"	struct:GtkCTree
line_style	stubs/xlibstub.c	312;"	struct:XGCValues
line_width	stubs/gdkstub.c	6201;"	struct:GdkGCValues
line_width	stubs/xlibstub.c	312;"	struct:XGCValues
line_wrap_bitmap	stubs/gtkstub.c	11279;"	struct:GtkText
lines	stubs/xpmstub.c	23;"	struct:XpmExtension
lines_gc	stubs/gtkstub.c	2986;"	struct:GtkCTree
link	stubs/unixstub.c	/^int link(const char \*from, const chr \*to)$/;"	f
list	stubs/gtkstub.c	2500;"	struct:GtkCombo
list	stubs/gtkstub.c	3028;"	struct:GtkCTreeNode
list	stubs/gtkstub.c	9916;"	struct:GtkTargetList
list_change_id	stubs/gtkstub.c	2500;"	struct:GtkCombo
localeconv	stubs/ansistub.c	/^struct lconv \*localeconv(void)$/;"	f
localtime	stubs/ansistub.c	/^struct tm \*localtime(const time_t \*tptr)$/;"	f
lock_count	stubs/gtkstub.c	37;"	struct:GtkAccelGroup
log	stubs/ansistub.c	/^double log(double num)$/;"	f
log10	stubs/ansistub.c	/^double log10(double num)$/;"	f
longjmp	stubs/ansistub.c	/^void longjmp(jmp_buf jmpenv, int value)$/;"	f
lookup	stubs/gtkstub.c	8723;"	struct:GtkPreviewInfo
lower	stubs/gtkstub.c	281;"	struct:GtkAdjustment
lower	stubs/gtkstub.c	9649;"	struct:GtkRuler
lseek	stubs/unixstub.c	/^off_t lseek(int fd, off_t offset, int whence)$/;"	f
lseek64	stubs/unixstub.c	/^off64_t lseek64(int fd, off64_t offset, int whence)$/;"	f
lstat	stubs/unixstub.c	/^__inline__ int lstat (__const char \*__path, struct stat \*__statbuf)$/;"	f
lstat	stubs/unixstub.c	5496;"	d
lstat64	stubs/unixstub.c	/^__inline__ int lstat64 (__const char \*__path, struct stat64 \*__statbuf)$/;"	f
lut	stubs/gdkstub.c	5537;"	struct:GdkRgbCmap
m_color	stubs/xpmstub.c	32;"	struct:XpmColor
magic	stubs/unixstub.c	/^  unsigned long		magic;$/;"	v
main	stubs/ansistub.c	/^int main(void) or (int argc, char \*argv\[\])$/;"	f
main_vbox	stubs/gtkstub.c	2403;"	struct:GtkColorSelectionDialog
main_vbox	stubs/gtkstub.c	4597;"	struct:GtkFileSelection
main_vbox	stubs/gtkstub.c	4847;"	struct:GtkFontSelection
main_vbox	stubs/gtkstub.c	4876;"	struct:GtkFontSelectionDialog
major	stubs/unixstub.c	5846;"	d
major	stubs/unixstub.c	5849;"	d
major	stubs/unixstub.c	5852;"	d
major_code	stubs/xlibstub.c	671;"	struct:XGraphicsExposeEvent
major_code	stubs/xlibstub.c	682;"	struct:XNoExposeEvent
major_opcode	stubs/xlibstub.c	276;"	struct:XExtCodes
makedev	stubs/unixstub.c	5855;"	d
makedev	stubs/unixstub.c	5859;"	d
makedev	stubs/unixstub.c	5863;"	d
makedev	stubs/unixstub.c	5868;"	d
makedev	stubs/unixstub.c	5873;"	d
makedev	stubs/unixstub.c	5878;"	d
malloc	stubs/ansistub.c	/^void \*malloc(size_t amount)$/;"	f
map_entries	stubs/xlibstub.c	328;"	struct:Visual
map_installed	stubs/xlibstub.c	408;"	struct:XWindowAttributes
map_state	stubs/xlibstub.c	408;"	struct:XWindowAttributes
marked_date	stubs/gtkstub.c	1158;"	struct:GtkCalendar
marked_date_color	stubs/gtkstub.c	1158;"	struct:GtkCalendar
mask	stubs/gtkstub.c	1729;"	struct:GtkCellPixmap
mask	stubs/gtkstub.c	1746;"	struct:GtkCellPixText
mask	stubs/gtkstub.c	5560;"	struct:GtkImage
mask	stubs/gtkstub.c	8595;"	struct:GtkPixmap
mask_closed	stubs/gtkstub.c	3021;"	struct:GtkCTreeRow
mask_opened	stubs/gtkstub.c	3021;"	struct:GtkCTreeRow
mask_pixel	stubs/xpmstub.c	118;"	struct:XpmAttributes
match_type	stubs/gtkstub.c	716;"	struct:GtkPatternSpec
max_advance_width	stubs/xftstub.c	436;"	struct:XftFont
max_aspect	stubs/gdkstub.c	6164;"	struct:GdkGeometry
max_bounds	stubs/xlibstub.c	1024;"	struct:XFontStruct
max_buffer_size	stubs/unixstub.c	2436;"	struct:snd_pcm_loopback_callbacks_t
max_byte1	stubs/xlibstub.c	1024;"	struct:XFontStruct
max_char_or_byte2	stubs/xlibstub.c	1024;"	struct:XFontStruct
max_colors	stubs/gdkstub.c	6281;"	struct:GdkColorContext
max_height	stubs/gdkstub.c	6164;"	struct:GdkGeometry
max_height	stubs/xlibstub.c	1286;"	struct:XSizeHints
max_height	stubs/xlibstub.c	1322;"	struct:XIconSize
max_ink_extent	stubs/xlibstub.c	1063;"	struct:XFontSetExtents
max_keypermod	stubs/xlibstub.c	516;"	struct:XModifierKeymap
max_logical_extent	stubs/xlibstub.c	1063;"	struct:XFontSetExtents
max_maps	stubs/xlibstub.c	356;"	struct:Screen
max_parse_errors	stubs/glibstub.c	2298;"	struct:GScanner
max_position	stubs/gtkstub.c	8493;"	struct:GtkPaned
max_size	stubs/gtkstub.c	9649;"	struct:GtkRuler
max_width	stubs/gdkstub.c	6164;"	struct:GdkGeometry
max_width	stubs/gtkstub.c	1679;"	struct:GtkCListColumn
max_width	stubs/gtkstub.c	6064;"	struct:GtkLabel
max_width	stubs/xlibstub.c	1286;"	struct:XSizeHints
max_width	stubs/xlibstub.c	1322;"	struct:XIconSize
max_x	stubs/gtkstub.c	3448;"	struct:GtkCurve
max_y	stubs/gtkstub.c	3448;"	struct:GtkCurve
maxerror	stubs/unixstub.c	/^  long maxerror;	\/\* maximum error (usec) \*\/$/;"	v
mbstowcs	stubs/ansistub.c	/^mbstowcs(wchar_t \*pwcs, const char \*m_byte, size_t length)$/;"	f
mcontext_t	stubs/unixstub.c	/^  } mcontext_t;$/;"	v
mcontext_t	stubs/unixstub.c	/^  } mcontext_t;$/;"	v
mcontext_t	stubs/unixstub.c	/^  } mcontext_t;$/;"	v
mcontext_t	stubs/unixstub.c	/^  } mcontext_t;$/;"	v
mcontext_t	stubs/unixstub.c	/^  } mcontext_t;$/;"	v
mem	stubs/gdkstub.c	6178;"	struct:GdkImage
memchr	stubs/ansistub.c	/^void \*memchr(const void \*string, int ch, size_t count)$/;"	f
memcmp	stubs/ansistub.c	/^int memcmp(const void \*area1, const void \*area2, size_t width)$/;"	f
memcpy	stubs/ansistub.c	/^void \*memcpy(void \*to, const void \*from, size_t width)$/;"	f
memmove	stubs/ansistub.c	/^void \*memmove(void \*to, const void \*from, size_t width)$/;"	f
memset	stubs/ansistub.c	/^void \*memset(void \*buffer, int ch, size_t count)$/;"	f
menu	stubs/gtkstub.c	7093;"	struct:GtkMenu
menu	stubs/gtkstub.c	7555;"	struct:GtkNotebook
menu	stubs/gtkstub.c	8248;"	struct:GtkOptionMenu
menu_flag	stubs/gtkstub.c	7391;"	struct:GtkMenuShell
menu_item	stubs/gtkstub.c	1330;"	struct:GtkCheckMenuItem
menu_item	stubs/gtkstub.c	8248;"	struct:GtkOptionMenu
menu_item	stubs/gtkstub.c	11123;"	struct:GtkTearoffMenuItem
menu_label	stubs/gtkstub.c	7582;"	struct:GtkNotebookPage
menu_shell	stubs/gtkstub.c	6920;"	struct:GtkMenuBar
menu_shell	stubs/gtkstub.c	7093;"	struct:GtkMenu
message_id	stubs/gtkstub.c	10586;"	struct:GtkStatusbarMsg
message_label	stubs/gtkstub.c	4847;"	struct:GtkFontSelection
message_type	stubs/gdkstub.c	6507;"	struct:GdkEventClient
message_type	stubs/xlibstub.c	913;"	struct:XClientMessageEvent
messages	stubs/gtkstub.c	10565;"	struct:GtkStatusbar
messages_mem_chunk	stubs/gtkstub.c	10577;"	struct:GtkStatusbarClass
metric	stubs/gtkstub.c	4847;"	struct:GtkFontSelection
metric	stubs/gtkstub.c	9649;"	struct:GtkRuler
metric_name	stubs/gtkstub.c	9672;"	struct:GtkRulerMetric
mheight	stubs/xlibstub.c	356;"	struct:Screen
mid	stubs/gtkstub.c	10674;"	struct:GtkStyle
mid_gc	stubs/gtkstub.c	10674;"	struct:GtkStyle
min_aspect	stubs/gdkstub.c	6164;"	struct:GdkGeometry
min_bounds	stubs/xlibstub.c	1024;"	struct:XFontStruct
min_byte1	stubs/xlibstub.c	1024;"	struct:XFontStruct
min_char_or_byte2	stubs/xlibstub.c	1024;"	struct:XFontStruct
min_height	stubs/gdkstub.c	6164;"	struct:GdkGeometry
min_height	stubs/xlibstub.c	1286;"	struct:XSizeHints
min_height	stubs/xlibstub.c	1322;"	struct:XIconSize
min_maps	stubs/xlibstub.c	356;"	struct:Screen
min_position	stubs/gtkstub.c	8493;"	struct:GtkPaned
min_slider_size	stubs/gtkstub.c	9320;"	struct:GtkRangeClass
min_width	stubs/gdkstub.c	6164;"	struct:GdkGeometry
min_width	stubs/gtkstub.c	1679;"	struct:GtkCListColumn
min_width	stubs/xlibstub.c	1286;"	struct:XSizeHints
min_width	stubs/xlibstub.c	1322;"	struct:XIconSize
min_x	stubs/gtkstub.c	3448;"	struct:GtkCurve
min_y	stubs/gtkstub.c	3448;"	struct:GtkCurve
minor	stubs/unixstub.c	5867;"	d
minor	stubs/unixstub.c	5872;"	d
minor	stubs/unixstub.c	5877;"	d
minor_code	stubs/xlibstub.c	671;"	struct:XGraphicsExposeEvent
minor_code	stubs/xlibstub.c	682;"	struct:XNoExposeEvent
minor_code	stubs/xlibstub.c	937;"	struct:XErrorEvent
minus_pix_widget	stubs/gtkstub.c	12067;"	struct:GtkTreeItem
misc	stubs/gtkstub.c	503;"	struct:GtkArrow
misc	stubs/gtkstub.c	5560;"	struct:GtkImage
misc	stubs/gtkstub.c	6064;"	struct:GtkLabel
misc	stubs/gtkstub.c	8595;"	struct:GtkPixmap
mknod	stubs/unixstub.c	/^__inline__ int mknod (__const char \*__path, __mode_t __mode, __dev_t __dev)$/;"	f
mktime	stubs/ansistub.c	/^time_t mktime(struct tm \*local)$/;"	f
mmap	stubs/unixstub.c	3945;"	d
mod_name_alt	stubs/gtkstub.c	221;"	struct:GtkAccelLabelClass
mod_name_control	stubs/gtkstub.c	221;"	struct:GtkAccelLabelClass
mod_name_shift	stubs/gtkstub.c	221;"	struct:GtkAccelLabelClass
mod_separator	stubs/gtkstub.c	221;"	struct:GtkAccelLabelClass
modal	stubs/gtkstub.c	14411;"	struct:GtkWindow
mode	stubs/gdkstub.c	6281;"	struct:GdkColorContext
mode	stubs/gdkstub.c	6302;"	struct:GdkDeviceInfo
mode	stubs/gdkstub.c	6437;"	struct:GdkEventCrossing
mode	stubs/xlibstub.c	609;"	struct:XCrossingEvent
mode	stubs/xlibstub.c	629;"	struct:XFocusChangeEvent
mode_optionmenu	stubs/gtkstub.c	5627;"	struct:GtkInputDialog
mode_t	stubs/unixstub.c	/^typedef __mode_t mode_t;$/;"	t
mode_t	stubs/unixstub.c	/^typedef __mode_t mode_t;$/;"	t
mode_t	stubs/unixstub.c	/^typedef __mode_t mode_t;$/;"	v
modes	stubs/unixstub.c	/^  unsigned int modes;	\/\* mode selector \*\/$/;"	t
modf	stubs/ansistub.c	/^double modf(double num, \*double whole)$/;"	f
modified	stubs/gtkstub.c	5799;"	struct:GtkItemFactoryItem
modifier	stubs/xlibstub.c	1252;"	struct:XIMHotKeyTrigger
modifier_mask	stubs/gtkstub.c	37;"	struct:GtkAccelGroup
modifier_mask	stubs/xlibstub.c	1252;"	struct:XIMHotKeyTrigger
modifiermap	stubs/xlibstub.c	516;"	struct:XModifierKeymap
modifiers	stubs/gdkstub.c	6288;"	struct:GdkDeviceKey
modifiers	stubs/gtkstub.c	776;"	struct:GtkBindingEntry
month	stubs/glibstub.c	2541;"	struct:GDate
month	stubs/gtkstub.c	1158;"	struct:GtkCalendar
motion	stubs/gdkstub.c	6539;"	union:GdkEvent
msg_handler	stubs/glibstub.c	2298;"	struct:GScanner
msgbuf	stubs/unixstub.c	/^struct msgbuf$/;"	s
mtpos	stubs/unixstub.c	/^struct mtpos$/;"	s
mwidth	stubs/xlibstub.c	356;"	struct:Screen
mxcsr	stubs/unixstub.c	/^  long mxcsr;$/;"	v
n_args	stubs/gtkstub.c	786;"	struct:GtkBindingSignal
n_args	stubs/gtkstub.c	7957;"	struct:GtkObjectClass
n_child_args	stubs/gtkstub.c	2663;"	struct:GtkContainerClass
n_properties	stubs/xlibstub.c	1024;"	struct:XFontStruct
nalloc_pixels	stubs/xpmstub.c	118;"	struct:XpmAttributes
name	stubs/gdkstub.c	6302;"	struct:GdkDeviceInfo
name	stubs/gtkstub.c	397;"	struct:GtkArgInfo
name	stubs/gtkstub.c	9448;"	struct:GtkRcStyle
name	stubs/gtkstub.c	12753;"	struct:GtkArg
name	stubs/gtkstub.c	13688;"	struct:GtkWidget
name	stubs/unixstub.c	1871;"	struct:snd_mixer_weight_entry_t
name	stubs/xlibstub.c	1004;"	struct:XFontProp
name	stubs/xpmstub.c	17;"	struct:XpmColorSymbol
name	stubs/xpmstub.c	23;"	struct:XpmExtension
nchars	stubs/xlibstub.c	1032;"	struct:XTextItem
nchars	stubs/xlibstub.c	1046;"	struct:XTextItem16
nchars	stubs/xlibstub.c	1071;"	struct:XmbTextItem
nchars	stubs/xlibstub.c	1079;"	struct:XwcTextItem
ncolors	stubs/xpmstub.c	41;"	struct:XpmImage
ncolors	stubs/xpmstub.c	118;"	struct:XpmAttributes
ncols	stubs/gtkstub.c	11005;"	struct:GtkTable
ndepth	stubs/xftstub.c	80;"	struct:XRenderInfo
ndepths	stubs/xftstub.c	68;"	struct:XRenderScreen
ndepths	stubs/xlibstub.c	356;"	struct:Screen
need_expand	stubs/gtkstub.c	11045;"	struct:GtkTableRowCol
need_map	stubs/gtkstub.c	10343;"	struct:GtkSocket
need_resize	stubs/gtkstub.c	2639;"	struct:GtkContainer
need_shrink	stubs/gtkstub.c	11045;"	struct:GtkTableRowCol
need_timer	stubs/gtkstub.c	7555;"	struct:GtkNotebook
need_timer	stubs/gtkstub.c	9291;"	struct:GtkRange
need_timer	stubs/gtkstub.c	10436;"	struct:GtkSpinButton
need_to_free_colormap	stubs/gdkstub.c	6281;"	struct:GdkColorContext
new	stubs/xlibstub.c	897;"	struct:XColormapEvent
next	stubs/glibstub.c	560;"	struct:GList
next	stubs/glibstub.c	566;"	struct:GSList
next	stubs/glibstub.c	997;"	struct:GNode
next	stubs/glibstub.c	1192;"	struct:GHook
next	stubs/gtkstub.c	786;"	struct:GtkBindingSignal
next	stubs/xftstub.c	395;"	struct:XftValueList
next	stubs/xlibstub.c	268;"	struct:XExtData
next_line	stubs/glibstub.c	2298;"	struct:GScanner
next_position	stubs/glibstub.c	2298;"	struct:GScanner
next_token	stubs/glibstub.c	2298;"	struct:GScanner
next_value	stubs/glibstub.c	2298;"	struct:GScanner
nextensions	stubs/xpmstub.c	52;"	struct:XpmInfo
nextensions	stubs/xpmstub.c	118;"	struct:XpmAttributes
nfont	stubs/xftstub.c	415;"	struct:XftFontSet
nformat	stubs/xftstub.c	80;"	struct:XRenderInfo
nice	stubs/unixstub.c	/^int nice(int inc)$/;"	f
nitems	stubs/xlibstub.c	1307;"	struct:XTextProperty
nlines	stubs/xpmstub.c	23;"	struct:XpmExtension
nlink_t	stubs/unixstub.c	/^typedef __nlink_t nlink_t;$/;"	t
no_expose	stubs/gdkstub.c	6539;"	union:GdkEvent
nobject	stubs/xftstub.c	452;"	struct:XftObjectSet
non_gr_exp_gc	stubs/gtkstub.c	9649;"	struct:GtkRuler
notebook	stubs/gtkstub.c	4847;"	struct:GtkFontSelection
nothing	stubs/gtkstub.c	11414;"	struct:GtkThemeEngine
npixels	stubs/xpmstub.c	118;"	struct:XpmAttributes
nrows	stubs/gtkstub.c	11005;"	struct:GtkTable
nscreen	stubs/xftstub.c	80;"	struct:XRenderInfo
nsignals	stubs/gtkstub.c	7957;"	struct:GtkObjectClass
num	stubs/xftstub.c	408;"	struct:XftPattern
num_allocated	stubs/gdkstub.c	6281;"	struct:GdkColorContext
num_axes	stubs/gdkstub.c	6302;"	struct:GdkDeviceInfo
num_children	stubs/gtkstub.c	11651;"	struct:GtkToolbar
num_colors	stubs/gdkstub.c	6281;"	struct:GdkColorContext
num_ctlpoints	stubs/gtkstub.c	3448;"	struct:GtkCurve
num_font	stubs/xlibstub.c	1107;"	struct:XOMFontInfo
num_hot_key	stubs/xlibstub.c	1258;"	struct:XIMHotKeyTriggers
num_keys	stubs/gdkstub.c	6302;"	struct:GdkDeviceInfo
num_marked_dates	stubs/gtkstub.c	1158;"	struct:GtkCalendar
num_orientation	stubs/xlibstub.c	1100;"	struct:XOMOrientation
num_palette	stubs/gdkstub.c	6281;"	struct:GdkColorContext
num_points	stubs/gtkstub.c	3448;"	struct:GtkCurve
number	stubs/xlibstub.c	268;"	struct:XExtData
numbers_2_int	stubs/glibstub.c	2255;"	struct:GScannerConfig
numeric	stubs/gtkstub.c	10436;"	struct:GtkSpinButton
numsymbols	stubs/xpmstub.c	118;"	struct:XpmAttributes
nvisual	stubs/xftstub.c	80;"	struct:XRenderInfo
nvisuals	stubs/xftstub.c	61;"	struct:XRenderDepth
nvisuals	stubs/xlibstub.c	335;"	struct:Depth
obdata	stubs/xlibstub.c	442;"	struct:XImage
obey_child	stubs/gtkstub.c	563;"	struct:GtkAspectFrame
object	stubs/gtkstub.c	49;"	struct:GtkAccelEntry
object	stubs/gtkstub.c	3524;"	struct:GtkData
object	stubs/gtkstub.c	5746;"	struct:GtkItemFactory
object	stubs/gtkstub.c	13688;"	struct:GtkWidget
object	stubs/xftstub.c	401;"	struct:XftPatternElt
object_class	stubs/gtkstub.c	5759;"	struct:GtkItemFactoryClass
object_data	stubs/gtkstub.c	7910;"	struct:GtkObject
object_init_func	stubs/gtkstub.c	12888;"	struct:GtkTypeInfo
object_size	stubs/gtkstub.c	12888;"	struct:GtkTypeInfo
object_size	stubs/gtkstub.c	12898;"	struct:GtkTypeQuery
objects	stubs/xftstub.c	452;"	struct:XftObjectSet
off64_t	stubs/unixstub.c	/^typedef __off64_t off64_t;$/;"	t
off_t	stubs/ansistub.c	/^typedef OPAQUE	off_t;$/;"	t
off_t	stubs/unixstub.c	/^typedef __off_t off_t;$/;"	t
off_t	stubs/unixstub.c	/^typedef __off64_t off_t;$/;"	t
off_t	stubs/unixstub.c	/^typedef __off_t off_t;$/;"	t
off_t	stubs/unixstub.c	/^typedef __off64_t off_t;$/;"	t
off_t	stubs/unixstub.c	/^typedef __off_t off_t;$/;"	t
off_t	stubs/unixstub.c	/^typedef __off64_t off_t;$/;"	t
offscreen_pixmap	stubs/gtkstub.c	9029;"	struct:GtkProgress
offset	stubs/gtkstub.c	11172;"	struct:GtkPropertyMark
offset	stubs/unixstub.c	/^  long offset;	\/\* time offset (usec) \*\/$/;"	v
offset_x	stubs/gtkstub.c	13810;"	struct:GtkWidgetShapeInfo
offset_y	stubs/gtkstub.c	13810;"	struct:GtkWidgetShapeInfo
ok_button	stubs/gtkstub.c	2403;"	struct:GtkColorSelectionDialog
ok_button	stubs/gtkstub.c	4597;"	struct:GtkFileSelection
ok_button	stubs/gtkstub.c	4876;"	struct:GtkFontSelectionDialog
ok_if_empty	stubs/gtkstub.c	2500;"	struct:GtkCombo
old_active_menu_item	stubs/gtkstub.c	7093;"	struct:GtkMenu
old_lower	stubs/gtkstub.c	9291;"	struct:GtkRange
old_page_size	stubs/gtkstub.c	9291;"	struct:GtkRange
old_upper	stubs/gtkstub.c	9291;"	struct:GtkRange
old_value	stubs/gtkstub.c	9291;"	struct:GtkRange
old_values	stubs/gtkstub.c	2380;"	struct:GtkColorSelection
oldmask	stubs/unixstub.c	/^    unsigned long oldmask;$/;"	v
oldmask	stubs/unixstub.c	/^    unsigned long oldmask;$/;"	v
oldmask	stubs/unixstub.c	/^    unsigned long oldmask;$/;"	v
oldmask	stubs/unixstub.c	/^    unsigned long oldmask;$/;"	v
oldmask	stubs/unixstub.c	/^    unsigned long oldmask;$/;"	v
opacity_label	stubs/gtkstub.c	2380;"	struct:GtkColorSelection
open	stubs/unixstub.c	/^int open(const char \*filename, int oflag, \.\.\.)$/;"	f
open64	stubs/unixstub.c	/^int open64(const char \*filename, int oflag, \.\.\.)$/;"	f
operation	stubs/xlibstub.c	1209;"	struct:XIMStringConversionCallbackStruct
optarg	stubs/unixstub.c	/^char \*optarg;$/;"	v
opterr	stubs/unixstub.c	/^int opterr;$/;"	v
optind	stubs/unixstub.c	/^int optind;$/;"	v
option	stubs/unixstub.c	/^struct option$/;"	s
options	stubs/gtkstub.c	8366;"	struct:GtkPackerChild
optopt	stubs/unixstub.c	/^int optopt;$/;"	v
orientation	stubs/gtkstub.c	8942;"	struct:GtkProgressBar
orientation	stubs/gtkstub.c	11651;"	struct:GtkToolbar
orientation	stubs/xlibstub.c	1100;"	struct:XOMOrientation
orig_eax	stubs/unixstub.c	/^  long orig_eax;$/;"	v
osockaddr	stubs/unixstub.c	/^struct osockaddr$/;"	s
outb	stubs/unixstub.c	/^static __inline void outb (unsigned char value, unsigned short port)$/;"	f
outb_p	stubs/unixstub.c	/^static __inline void outb_p (unsigned char value, unsigned short port)$/;"	f
outl	stubs/unixstub.c	/^static __inline void outl (unsigned int value, unsigned short port)$/;"	f
outl_p	stubs/unixstub.c	/^static __inline void outl_p (unsigned int value, unsigned short port)$/;"	f
outsb	stubs/unixstub.c	/^static __inline void outsb (unsigned short port, const void \*addr, unsigned long count)$/;"	f
outsl	stubs/unixstub.c	/^static __inline void outsl (unsigned short port, const void \*addr, unsigned long count)$/;"	f
outsw	stubs/unixstub.c	/^static __inline void outsw (unsigned short port, const void \*addr, unsigned long count)$/;"	f
outw	stubs/unixstub.c	/^static __inline void outw (unsigned short value, unsigned short port)$/;"	f
outw_p	stubs/unixstub.c	/^static __inline void outw_p (unsigned short value, unsigned short port)$/;"	f
override_redirect	stubs/gdkstub.c	6143;"	struct:GdkWindowAttr
override_redirect	stubs/xlibstub.c	383;"	struct:XSetWindowAttributes
override_redirect	stubs/xlibstub.c	408;"	struct:XWindowAttributes
override_redirect	stubs/xlibstub.c	706;"	struct:XCreateWindowEvent
override_redirect	stubs/xlibstub.c	738;"	struct:XMapEvent
override_redirect	stubs/xlibstub.c	761;"	struct:XReparentEvent
override_redirect	stubs/xlibstub.c	776;"	struct:XConfigureEvent
owner	stubs/xlibstub.c	872;"	struct:XSelectionRequestEvent
pack	stubs/gtkstub.c	940;"	struct:GtkBoxChild
pack	stubs/gtkstub.c	7582;"	struct:GtkNotebookPage
pad	stubs/xlibstub.c	459;"	struct:XColor
pad	stubs/xlibstub.c	987;"	union:XEvent
pad1	stubs/gtkstub.c	2663;"	struct:GtkContainerClass
pad1	stubs/gtkstub.c	13791;"	struct:GtkWidgetClass
pad2	stubs/gtkstub.c	2663;"	struct:GtkContainerClass
pad2	stubs/gtkstub.c	13791;"	struct:GtkWidgetClass
pad3	stubs/gtkstub.c	13791;"	struct:GtkWidgetClass
pad4	stubs/gtkstub.c	13791;"	struct:GtkWidgetClass
pad_x	stubs/gtkstub.c	8366;"	struct:GtkPackerChild
pad_y	stubs/gtkstub.c	8366;"	struct:GtkPackerChild
padding	stubs/gtkstub.c	940;"	struct:GtkBoxChild
padding	stubs/unixstub.c	/^  long padding\[56\];$/;"	v
page_increment	stubs/gtkstub.c	281;"	struct:GtkAdjustment
page_size	stubs/gtkstub.c	281;"	struct:GtkAdjustment
palette	stubs/gdkstub.c	6281;"	struct:GdkColorContext
paned	stubs/gtkstub.c	5347;"	struct:GtkHPaned
paned	stubs/gtkstub.c	13239;"	struct:GtkVPaned
panel	stubs/gtkstub.c	7555;"	struct:GtkNotebook
panel	stubs/gtkstub.c	10436;"	struct:GtkSpinButton
parent	stubs/glibstub.c	997;"	struct:GNode
parent	stubs/gtkstub.c	3021;"	struct:GtkCTreeRow
parent	stubs/gtkstub.c	8383;"	struct:GtkPacker
parent	stubs/gtkstub.c	13688;"	struct:GtkWidget
parent	stubs/gtkstub.c	13791;"	struct:GtkWidgetClass
parent	stubs/xlibstub.c	706;"	struct:XCreateWindowEvent
parent	stubs/xlibstub.c	748;"	struct:XMapRequestEvent
parent	stubs/xlibstub.c	761;"	struct:XReparentEvent
parent	stubs/xlibstub.c	813;"	struct:XConfigureRequestEvent
parent	stubs/xlibstub.c	835;"	struct:XCirculateRequestEvent
parent_class	stubs/gtkstub.c	221;"	struct:GtkAccelLabelClass
parent_class	stubs/gtkstub.c	290;"	struct:GtkAdjustmentClass
parent_class	stubs/gtkstub.c	360;"	struct:GtkAlignmentClass
parent_class	stubs/gtkstub.c	510;"	struct:GtkArrowClass
parent_class	stubs/gtkstub.c	570;"	struct:GtkAspectFrameClass
parent_class	stubs/gtkstub.c	632;"	struct:GtkButtonBoxClass
parent_class	stubs/gtkstub.c	883;"	struct:GtkBinClass
parent_class	stubs/gtkstub.c	929;"	struct:GtkBoxClass
parent_class	stubs/gtkstub.c	1041;"	struct:GtkButtonClass
parent_class	stubs/gtkstub.c	1175;"	struct:GtkCalendarClass
parent_class	stubs/gtkstub.c	1277;"	struct:GtkCheckButtonClass
parent_class	stubs/gtkstub.c	1340;"	struct:GtkCheckMenuItemClass
parent_class	stubs/gtkstub.c	1657;"	struct:GtkCListClass
parent_class	stubs/gtkstub.c	2389;"	struct:GtkColorSelectionClass
parent_class	stubs/gtkstub.c	2410;"	struct:GtkColorSelectionDialogClass
parent_class	stubs/gtkstub.c	2507;"	struct:GtkComboClass
parent_class	stubs/gtkstub.c	2663;"	struct:GtkContainerClass
parent_class	stubs/gtkstub.c	3000;"	struct:GtkCTreeClass
parent_class	stubs/gtkstub.c	3457;"	struct:GtkCurveClass
parent_class	stubs/gtkstub.c	3533;"	struct:GtkDataClass
parent_class	stubs/gtkstub.c	3584;"	struct:GtkDialogClass
parent_class	stubs/gtkstub.c	3768;"	struct:GtkDrawingAreaClass
parent_class	stubs/gtkstub.c	3861;"	struct:GtkEditableClass
parent_class	stubs/gtkstub.c	3988;"	struct:GtkEntryClass
parent_class	stubs/gtkstub.c	4409;"	struct:GtkEventBoxClass
parent_class	stubs/gtkstub.c	4604;"	struct:GtkFileSelectionClass
parent_class	stubs/gtkstub.c	4674;"	struct:GtkFixedClass
parent_class	stubs/gtkstub.c	4855;"	struct:GtkFontSelectionClass
parent_class	stubs/gtkstub.c	4883;"	struct:GtkFontSelectionDialogClass
parent_class	stubs/gtkstub.c	5062;"	struct:GtkFrameClass
parent_class	stubs/gtkstub.c	5125;"	struct:GtkGammaCurveClass
parent_class	stubs/gtkstub.c	5199;"	struct:GtkHandleBoxClass
parent_class	stubs/gtkstub.c	5251;"	struct:GtkHButtonBoxClass
parent_class	stubs/gtkstub.c	5318;"	struct:GtkHBoxClass
parent_class	stubs/gtkstub.c	5354;"	struct:GtkHPanedClass
parent_class	stubs/gtkstub.c	5391;"	struct:GtkHRulerClass
parent_class	stubs/gtkstub.c	5435;"	struct:GtkHScaleClass
parent_class	stubs/gtkstub.c	5478;"	struct:GtkHScrollbarClass
parent_class	stubs/gtkstub.c	5521;"	struct:GtkHSeparatorClass
parent_class	stubs/gtkstub.c	5567;"	struct:GtkImageClass
parent_class	stubs/gtkstub.c	5637;"	struct:GtkInputDialogClass
parent_class	stubs/gtkstub.c	5680;"	struct:GtkInvisibleClass
parent_class	stubs/gtkstub.c	6008;"	struct:GtkItemClass
parent_class	stubs/gtkstub.c	6071;"	struct:GtkLabelClass
parent_class	stubs/gtkstub.c	6170;"	struct:GtkLayoutClass
parent_class	stubs/gtkstub.c	6292;"	struct:GtkListClass
parent_class	stubs/gtkstub.c	6468;"	struct:GtkListItemClass
parent_class	stubs/gtkstub.c	6927;"	struct:GtkMenuBarClass
parent_class	stubs/gtkstub.c	7100;"	struct:GtkMenuClass
parent_class	stubs/gtkstub.c	7297;"	struct:GtkMenuItemClass
parent_class	stubs/gtkstub.c	7407;"	struct:GtkMenuShellClass
parent_class	stubs/gtkstub.c	7485;"	struct:GtkMiscClass
parent_class	stubs/gtkstub.c	7564;"	struct:GtkNotebookClass
parent_class	stubs/gtkstub.c	8255;"	struct:GtkOptionMenuClass
parent_class	stubs/gtkstub.c	8390;"	struct:GtkPackerClass
parent_class	stubs/gtkstub.c	8500;"	struct:GtkPanedClass
parent_class	stubs/gtkstub.c	8602;"	struct:GtkPixmapClass
parent_class	stubs/gtkstub.c	8658;"	struct:GtkPlugClass
parent_class	stubs/gtkstub.c	8741;"	struct:GtkPreviewClass
parent_class	stubs/gtkstub.c	8949;"	struct:GtkProgressBarClass
parent_class	stubs/gtkstub.c	9040;"	struct:GtkProgressClass
parent_class	stubs/gtkstub.c	9145;"	struct:GtkRadioButtonClass
parent_class	stubs/gtkstub.c	9215;"	struct:GtkRadioMenuItemClass
parent_class	stubs/gtkstub.c	9320;"	struct:GtkRangeClass
parent_class	stubs/gtkstub.c	9659;"	struct:GtkRulerClass
parent_class	stubs/gtkstub.c	9738;"	struct:GtkScaleClass
parent_class	stubs/gtkstub.c	9802;"	struct:GtkScrollbarClass
parent_class	stubs/gtkstub.c	9851;"	struct:GtkScrolledWindowClass
parent_class	stubs/gtkstub.c	10068;"	struct:GtkSeparatorClass
parent_class	stubs/gtkstub.c	10350;"	struct:GtkSocketClass
parent_class	stubs/gtkstub.c	10443;"	struct:GtkSpinButtonClass
parent_class	stubs/gtkstub.c	10577;"	struct:GtkStatusbarClass
parent_class	stubs/gtkstub.c	11012;"	struct:GtkTableClass
parent_class	stubs/gtkstub.c	11130;"	struct:GtkTearoffMenuItemClass
parent_class	stubs/gtkstub.c	11288;"	struct:GtkTextClass
parent_class	stubs/gtkstub.c	11549;"	struct:GtkToggleButtonClass
parent_class	stubs/gtkstub.c	11661;"	struct:GtkToolbarClass
parent_class	stubs/gtkstub.c	11835;"	struct:GtkTooltipsClass
parent_class	stubs/gtkstub.c	11946;"	struct:GtkTreeClass
parent_class	stubs/gtkstub.c	12077;"	struct:GtkTreeItemClass
parent_class	stubs/gtkstub.c	13066;"	struct:GtkVButtonBoxClass
parent_class	stubs/gtkstub.c	13133;"	struct:GtkVBoxClass
parent_class	stubs/gtkstub.c	13184;"	struct:GtkViewportClass
parent_class	stubs/gtkstub.c	13246;"	struct:GtkVPanedClass
parent_class	stubs/gtkstub.c	13284;"	struct:GtkVRulerClass
parent_class	stubs/gtkstub.c	13327;"	struct:GtkVScaleClass
parent_class	stubs/gtkstub.c	13370;"	struct:GtkVScrollbarClass
parent_class	stubs/gtkstub.c	13413;"	struct:GtkVSeparatorClass
parent_class	stubs/gtkstub.c	13791;"	struct:GtkWidgetClass
parent_class	stubs/gtkstub.c	14420;"	struct:GtkWindowClass
parent_menu_item	stubs/gtkstub.c	7093;"	struct:GtkMenu
parent_menu_shell	stubs/gtkstub.c	7391;"	struct:GtkMenuShell
parent_widget	stubs/gtkstub.c	10565;"	struct:GtkStatusbar
parse_errors	stubs/glibstub.c	2298;"	struct:GScanner
path	stubs/gtkstub.c	5746;"	struct:GtkItemFactory
path	stubs/gtkstub.c	5785;"	struct:GtkItemFactoryEntry
path	stubs/gtkstub.c	5799;"	struct:GtkItemFactoryItem
path	stubs/gtkstub.c	6976;"	struct:GtkMenuEntry
path	stubs/gtkstub.c	6984;"	struct:GtkMenuPath
path	stubs/gtkstub.c	6995;"	struct:GtkMenuFactory
pathconf	stubs/unixstub.c	/^long int pathconf(char \*path, int pcname)$/;"	f
pattern	stubs/gtkstub.c	716;"	struct:GtkPatternSpec
pattern	stubs/gtkstub.c	6064;"	struct:GtkLabel
pattern	stubs/xftstub.c	436;"	struct:XftFont
pattern_length	stubs/gtkstub.c	716;"	struct:GtkPatternSpec
pattern_reversed	stubs/gtkstub.c	716;"	struct:GtkPatternSpec
pause	stubs/unixstub.c	/^int pause(void)$/;"	f
pdata	stubs/glibstub.c	590;"	struct:GPtrArray
per_char	stubs/xlibstub.c	1024;"	struct:XFontStruct
perror	stubs/ansistub.c	/^void perror(const char \*string)$/;"	f
pid_t	stubs/unixstub.c	/^typedef __pid_t pid_t;$/;"	t
pid_t	stubs/unixstub.c	/^typedef __pid_t pid_t;$/;"	t
pipe	stubs/unixstub.c	/^int pipe(int filedes\[2\])$/;"	f
pixel	stubs/gdkstub.c	6096;"	struct:GdkColor
pixel	stubs/xftstub.c	445;"	struct:XftColor
pixel	stubs/xlibstub.c	459;"	struct:XColor
pixel	stubs/xpmstub.c	17;"	struct:XpmColorSymbol
pixels	stubs/xpmstub.c	118;"	struct:XpmAttributes
pixels_button	stubs/gtkstub.c	4847;"	struct:GtkFontSelection
pixels_cmt	stubs/xpmstub.c	52;"	struct:XpmInfo
pixels_cmt	stubs/xpmstub.c	118;"	struct:XpmAttributes
pixels_per_unit	stubs/gtkstub.c	9672;"	struct:GtkRulerMetric
pixmap	stubs/gtkstub.c	1729;"	struct:GtkCellPixmap
pixmap	stubs/gtkstub.c	1746;"	struct:GtkCellPixText
pixmap	stubs/gtkstub.c	3448;"	struct:GtkCurve
pixmap	stubs/gtkstub.c	8595;"	struct:GtkPixmap
pixmap_closed	stubs/gtkstub.c	3021;"	struct:GtkCTreeRow
pixmap_format	stubs/xlibstub.c	1057;"	union:XEDataObject
pixmap_insensitive	stubs/gtkstub.c	8595;"	struct:GtkPixmap
pixmap_opened	stubs/gtkstub.c	3021;"	struct:GtkCTreeRow
pixmaps	stubs/gtkstub.c	12067;"	struct:GtkTreeItem
pixmaps_box	stubs/gtkstub.c	12067;"	struct:GtkTreeItem
place	stubs/xlibstub.c	824;"	struct:XCirculateEvent
place	stubs/xlibstub.c	835;"	struct:XCirculateRequestEvent
plane_mask	stubs/xlibstub.c	312;"	struct:XGCValues
plug_window	stubs/gtkstub.c	10343;"	struct:GtkSocket
plus_pix_widget	stubs/gtkstub.c	12067;"	struct:GtkTreeItem
point	stubs/gtkstub.c	3448;"	struct:GtkCurve
point	stubs/gtkstub.c	11414;"	struct:GtkThemeEngine
points_button	stubs/gtkstub.c	4847;"	struct:GtkFontSelection
policy	stubs/gtkstub.c	2380;"	struct:GtkColorSelection
policy	stubs/gtkstub.c	9291;"	struct:GtkRange
poly_edge	stubs/xftstub.c	97;"	struct:XRenderPictureAttributes
poly_mode	stubs/xftstub.c	97;"	struct:XRenderPictureAttributes
popup	stubs/gtkstub.c	2500;"	struct:GtkCombo
popwin	stubs/gtkstub.c	2500;"	struct:GtkCombo
position	stubs/glibstub.c	2298;"	struct:GScanner
position	stubs/gtkstub.c	9649;"	struct:GtkRuler
position	stubs/gtkstub.c	14411;"	struct:GtkWindow
position	stubs/xlibstub.c	1209;"	struct:XIMStringConversionCallbackStruct
position	stubs/xlibstub.c	1231;"	struct:XIMPreeditCaretCallbackStruct
position_func	stubs/gtkstub.c	7093;"	struct:GtkMenu
position_func_data	stubs/gtkstub.c	7093;"	struct:GtkMenu
position_set	stubs/gtkstub.c	8493;"	struct:GtkPaned
posix_fadvise	stubs/unixstub.c	/^int posix_fadvise(int fd, off_t offset, size_t len, int advise)$/;"	f
posix_fadvise64	stubs/unixstub.c	/^int posix_fadvise64(int fd, off_t offset, size_t len, int advise)$/;"	f
posix_fallocate	stubs/unixstub.c	/^int posix_fallocate(int fd, off_t offset, size_t len)$/;"	f
posix_fallocate64	stubs/unixstub.c	/^int posix_fallocate64(int fd, off64_t offset, size_t len)$/;"	f
pow	stubs/ansistub.c	/^double pow(double base, double exp)$/;"	f
powerof2	stubs/unixstub.c	4518;"	d
pread	stubs/unixstub.c	/^ssize_t pread(int fd, void \*buf, size_t nbytes, off_t offset)$/;"	f
pread64	stubs/unixstub.c	/^ssize_t pread64(int fd, void \*buf, size_t nbytes, off64_t offset)$/;"	f
precision	stubs/unixstub.c	/^  long precision;	\/\* clock precision (usec) (read only) \*\/$/;"	v
preedit_area	stubs/gdkstub.c	6573;"	struct:GdkICAttr
preedit_area_needed	stubs/gdkstub.c	6573;"	struct:GdkICAttr
preedit_background	stubs/gdkstub.c	6573;"	struct:GdkICAttr
preedit_colormap	stubs/gdkstub.c	6573;"	struct:GdkICAttr
preedit_fontset	stubs/gdkstub.c	6573;"	struct:GdkICAttr
preedit_foreground	stubs/gdkstub.c	6573;"	struct:GdkICAttr
preedit_pixmap	stubs/gdkstub.c	6573;"	struct:GdkICAttr
prefix	stubs/glibstub.c	2430;"	struct:GCompletion
pressure	stubs/gdkstub.c	6313;"	struct:GdkTimeCoord
pressure	stubs/gdkstub.c	6387;"	struct:GdkEventMotion
pressure	stubs/gdkstub.c	6406;"	struct:GdkEventButton
prev	stubs/glibstub.c	560;"	struct:GList
prev	stubs/glibstub.c	997;"	struct:GNode
prev	stubs/glibstub.c	1192;"	struct:GHook
preview_entry	stubs/gtkstub.c	4847;"	struct:GtkFontSelection
printf	stubs/ansistub.c	/^int printf(const char \*format, \.\.\.)$/;"	f
priority	stubs/gtkstub.c	759;"	struct:GtkBindingSet
prioritynames	stubs/unixstub.c	/^CODE prioritynames\[\] =$/;"	v
private_data	stubs/gtkstub.c	1158;"	struct:GtkCalendar
private_data	stubs/unixstub.c	1718;"	struct:snd_ctl_callbacks_t
private_data	stubs/unixstub.c	1865;"	struct:snd_mixer_callbacks_t
private_data	stubs/unixstub.c	2436;"	struct:snd_pcm_loopback_callbacks_t
private_data	stubs/xlibstub.c	268;"	struct:XExtData
private_flags	stubs/gtkstub.c	13688;"	struct:GtkWidget
profil	stubs/unixstub.c	/^int profil(unsigned short \*sample_buffer, size_t size, size_t offset, unsigned scale)$/;"	f
progress	stubs/gtkstub.c	8942;"	struct:GtkProgressBar
properties	stubs/xlibstub.c	1024;"	struct:XFontStruct
property	stubs/gdkstub.c	6481;"	struct:GdkEventSelection
property	stubs/gdkstub.c	6539;"	union:GdkEvent
property	stubs/gtkstub.c	11172;"	struct:GtkPropertyMark
property	stubs/xlibstub.c	872;"	struct:XSelectionRequestEvent
property	stubs/xlibstub.c	885;"	struct:XSelectionEvent
protocol	stubs/gdkstub.c	6327;"	struct:GdkDragContext
proximity	stubs/gdkstub.c	6539;"	union:GdkEvent
pshared	stubs/pthread.c	82;"	struct:pthread_rwlockattr_t
pshared	stubs/pthread.c	98;"	struct:pthread_barrierattr_t
pthread_atfork	stubs/pthread.c	/^int pthread_atfork(void (\*prepare)(void), void (\*parent)(void), void (\*child)(void))$/;"	f
pthread_atfork	stubs/unixstub.c	/^int pthread_atfork(void (\*prepare)(void), void (\*parent)(void), void (\*child)(void))$/;"	f
pthread_attr_destroy	stubs/pthread.c	/^int pthread_attr_destroy(pthread_attr_t \*attr)$/;"	f
pthread_attr_getdetachstate	stubs/pthread.c	/^int pthread_attr_getdetachstate(const pthread_attr_t \*attr, int \*detachstate)$/;"	f
pthread_attr_getguardsize	stubs/pthread.c	/^int pthread_attr_getguardsize(const pthread_attr_t \*attr, size_t \*guardsize)$/;"	f
pthread_attr_getinheritsched	stubs/pthread.c	/^int pthread_attr_getinheritsched(const pthread_attr_t \*attr, int \*inherit)$/;"	f
pthread_attr_getschedparam	stubs/pthread.c	/^int pthread_attr_getschedparam(const pthread_attr_t \*attr, struct sched_param \*param)$/;"	f
pthread_attr_getschedpolicy	stubs/pthread.c	/^int pthread_attr_getschedpolicy(const pthread_attr_t \*attr, int \*policy)$/;"	f
pthread_attr_getscope	stubs/pthread.c	/^int pthread_attr_getscope(const pthread_attr_t \*attr, int \*scope)$/;"	f
pthread_attr_getstack	stubs/pthread.c	/^int pthread_attr_getstack(const pthread_attr_t \*attr, void \*\*stackaddr, size_t \*stacksize)$/;"	f
pthread_attr_getstackaddr	stubs/pthread.c	/^int pthread_attr_getstackaddr(const pthread_attr_t \*attr, void \*\*stackaddr)$/;"	f
pthread_attr_getstacksize	stubs/pthread.c	/^int pthread_attr_getstacksize(const pthread_attr_t \*attr, size_t \*stacksize)$/;"	f
pthread_attr_init	stubs/pthread.c	/^int pthread_attr_init(pthread_attr_t \*attr)$/;"	f
pthread_attr_setdetachstate	stubs/pthread.c	/^int pthread_attr_setdetachstate(pthread_attr_t \*attr, int detachstate)$/;"	f
pthread_attr_setguardsize	stubs/pthread.c	/^int pthread_attr_setguardsize(pthread_attr_t \*attr, size_t guardsize)$/;"	f
pthread_attr_setinheritsched	stubs/pthread.c	/^int pthread_attr_setinheritsched(pthread_attr_t \*attr, int inherit)$/;"	f
pthread_attr_setschedparam	stubs/pthread.c	/^int pthread_attr_setschedparam(pthread_attr_t \*attr, const struct sched_param \*param)$/;"	f
pthread_attr_setschedpolicy	stubs/pthread.c	/^int pthread_attr_setschedpolicy(pthread_attr_t \*attr, int policy)$/;"	f
pthread_attr_setscope	stubs/pthread.c	/^int pthread_attr_setscope(pthread_attr_t \*attr, int scope)$/;"	f
pthread_attr_setstack	stubs/pthread.c	/^int pthread_attr_setstack(pthread_attr_t \*attr, void \*stackaddr, size_t stacksize)$/;"	f
pthread_attr_setstackaddr	stubs/pthread.c	/^int pthread_attr_setstackaddr(pthread_attr_t \*attr, void \*stackaddr)$/;"	f
pthread_attr_setstacksize	stubs/pthread.c	/^int pthread_attr_setstacksize(pthread_attr_t \*attr, size_t stacksize)$/;"	f
pthread_attr_t	stubs/pthread.c	/^} pthread_attr_t;$/;"	t
pthread_barrier_destroy	stubs/pthread.c	/^int pthread_barrier_destroy(pthread_barrier_t \*barrier)$/;"	f
pthread_barrier_init	stubs/pthread.c	/^int pthread_barrier_init(pthread_barrier_t \*barrier, const pthread_barrierattr_t \*attr, unsigned int count)$/;"	f
pthread_barrier_t	stubs/pthread.c	/^} pthread_barrier_t;$/;"	t
pthread_barrier_wait	stubs/pthread.c	/^int pthread_barrier_wait(pthread_barrier_t \*barrier)$/;"	f
pthread_barrierattr_destroy	stubs/pthread.c	/^int pthread_barrierattr_destroy(pthread_barrierattr_t \*attr)$/;"	f
pthread_barrierattr_getpshared	stubs/pthread.c	/^int pthread_barrierattr_getpshared(const pthread_barrierattr_t \*attr, int \*pshared)$/;"	f
pthread_barrierattr_init	stubs/pthread.c	/^int pthread_barrierattr_init(pthread_barrierattr_t \*attr)$/;"	f
pthread_barrierattr_setpshared	stubs/pthread.c	/^int pthread_barrierattr_setpshared(pthread_barrierattr_t \*attr, int pshared)$/;"	f
pthread_barrierattr_t	stubs/pthread.c	/^} pthread_barrierattr_t;$/;"	t
pthread_cancel	stubs/pthread.c	/^int pthread_cancel(pthread_t thread)$/;"	f
pthread_cleanup_pop	stubs/pthread.c	723;"	d
pthread_cleanup_pop_restore_np	stubs/pthread.c	733;"	d
pthread_cleanup_push	stubs/pthread.c	718;"	d
pthread_cleanup_push_defer_np	stubs/pthread.c	728;"	d
pthread_cond_broadcast	stubs/pthread.c	/^int pthread_cond_broadcast(pthread_cond_t \*cond)$/;"	f
pthread_cond_destroy	stubs/pthread.c	/^int pthread_cond_destroy(pthread_cond_t \*cond)$/;"	f
pthread_cond_init	stubs/pthread.c	/^int pthread_cond_init(pthread_cond_t \*cond, const pthread_condattr_t \*cond_attr)$/;"	f
pthread_cond_signal	stubs/pthread.c	/^int pthread_cond_signal(pthread_cond_t \*cond)$/;"	f
pthread_cond_t	stubs/pthread.c	/^} pthread_cond_t;$/;"	t
pthread_cond_timedwait	stubs/pthread.c	/^int pthread_cond_timedwait(pthread_cond_t \*cond, pthread_mutex_t \*mutex, const struct timespec \*abstime)$/;"	f
pthread_cond_wait	stubs/pthread.c	/^int pthread_cond_wait(pthread_cond_t \*cond, pthread_mutex_t \*mutex)$/;"	f
pthread_condattr_destroy	stubs/pthread.c	/^int pthread_condattr_destroy(pthread_condattr_t \*attr)$/;"	f
pthread_condattr_getpshared	stubs/pthread.c	/^int pthread_condattr_getpshared(const pthread_condattr_t \*attr, int \*pshared)$/;"	f
pthread_condattr_init	stubs/pthread.c	/^int pthread_condattr_init(pthread_condattr_t \*attr)$/;"	f
pthread_condattr_setpshared	stubs/pthread.c	/^int pthread_condattr_setpshared(pthread_condattr_t \*attr, int pshared)$/;"	f
pthread_condattr_t	stubs/pthread.c	/^} pthread_condattr_t;$/;"	t
pthread_create	stubs/pthread.c	/^int pthread_create(pthread_t \*thread, const pthread_attr_t \*attr, void \*(\*start_routine) (void \*), void \*arg)$/;"	f
pthread_detach	stubs/pthread.c	/^int pthread_detach(pthread_t th)$/;"	f
pthread_equal	stubs/pthread.c	/^int pthread_equal(pthread_t thread1, pthread_t thread2)$/;"	f
pthread_exit	stubs/pthread.c	/^void pthread_exit(void \*retval)$/;"	f
pthread_getattr_np	stubs/pthread.c	/^int pthread_getattr_np(pthread_t th, pthread_attr_t \*attr)$/;"	f
pthread_getconcurrency	stubs/pthread.c	/^int pthread_getconcurrency(void)$/;"	f
pthread_getcpuclockid	stubs/pthread.c	/^int pthread_getcpuclockid(pthread_t thread_id, clockid_t \*clock_id)$/;"	f
pthread_getschedparam	stubs/pthread.c	/^int pthread_getschedparam(pthread_t target_thread, int \*policy, struct sched_param \*param)$/;"	f
pthread_getspecific	stubs/pthread.c	/^void \*pthread_getspecific(pthread_key_t key)$/;"	f
pthread_join	stubs/pthread.c	/^int pthread_join(pthread_t th, void \*\*thread_return)$/;"	f
pthread_key_create	stubs/pthread.c	/^int pthread_key_create(pthread_key_t \*key, void (\*destr_function) (void \*))$/;"	f
pthread_key_delete	stubs/pthread.c	/^int pthread_key_delete(pthread_key_t key)$/;"	f
pthread_key_t	stubs/pthread.c	/^typedef unsigned int pthread_key_t;$/;"	t
pthread_kill	stubs/pthread.c	/^int pthread_kill(pthread_t thread, int signo)$/;"	f
pthread_kill_other_threads_np	stubs/pthread.c	/^void pthread_kill_other_threads_np(void)$/;"	f
pthread_mutex_destroy	stubs/pthread.c	/^int pthread_mutex_destroy(pthread_mutex_t \*mutex)$/;"	f
pthread_mutex_init	stubs/pthread.c	/^int pthread_mutex_init(pthread_mutex_t \*mutex, const pthread_mutexattr_t \*mutex_attr)$/;"	f
pthread_mutex_lock	stubs/pthread.c	/^int pthread_mutex_lock(pthread_mutex_t \*mutex)$/;"	f
pthread_mutex_t	stubs/pthread.c	/^} pthread_mutex_t;$/;"	t
pthread_mutex_timedlock	stubs/pthread.c	/^int pthread_mutex_timedlock(pthread_mutex_t \*mutex, const struct timespec \*abstime)$/;"	f
pthread_mutex_trylock	stubs/pthread.c	/^int pthread_mutex_trylock(pthread_mutex_t \*mutex)$/;"	f
pthread_mutex_unlock	stubs/pthread.c	/^int pthread_mutex_unlock(pthread_mutex_t \*mutex)$/;"	f
pthread_mutexattr_destroy	stubs/pthread.c	/^int pthread_mutexattr_destroy(pthread_mutexattr_t \*attr)$/;"	f
pthread_mutexattr_getpshared	stubs/pthread.c	/^int pthread_mutexattr_getpshared(const pthread_mutexattr_t \*attr, int \*pshared)$/;"	f
pthread_mutexattr_gettype	stubs/pthread.c	/^int pthread_mutexattr_gettype(const pthread_mutexattr_t \*attr, int \*kind)$/;"	f
pthread_mutexattr_init	stubs/pthread.c	/^int pthread_mutexattr_init(pthread_mutexattr_t \*attr)$/;"	f
pthread_mutexattr_setpshared	stubs/pthread.c	/^int pthread_mutexattr_setpshared(pthread_mutexattr_t \*attr, int pshared)$/;"	f
pthread_mutexattr_settype	stubs/pthread.c	/^int pthread_mutexattr_settype(pthread_mutexattr_t \*attr, int kind)$/;"	f
pthread_mutexattr_t	stubs/pthread.c	/^} pthread_mutexattr_t;$/;"	t
pthread_once	stubs/pthread.c	/^int pthread_once(pthread_once_t \*once_control, void (\*init_routine) (void))$/;"	f
pthread_once_t	stubs/pthread.c	/^typedef int pthread_once_t;$/;"	t
pthread_rwlock_destroy	stubs/pthread.c	/^int pthread_rwlock_destroy(pthread_rwlock_t \*rwlock)$/;"	f
pthread_rwlock_init	stubs/pthread.c	/^int pthread_rwlock_init(pthread_rwlock_t \*rwlock, const pthread_rwlockattr_t \*attr)$/;"	f
pthread_rwlock_rdlock	stubs/pthread.c	/^int pthread_rwlock_rdlock(pthread_rwlock_t \*rwlock)$/;"	f
pthread_rwlock_t	stubs/pthread.c	/^} pthread_rwlock_t;$/;"	t
pthread_rwlock_timedrdlock	stubs/pthread.c	/^int pthread_rwlock_timedrdlock(pthread_rwlock_t \*rwlock, const struct timespec \*abstime)$/;"	f
pthread_rwlock_timedwrlock	stubs/pthread.c	/^int pthread_rwlock_timedwrlock(pthread_rwlock_t \*rwlock, const struct timespec \*abstime)$/;"	f
pthread_rwlock_tryrdlock	stubs/pthread.c	/^int pthread_rwlock_tryrdlock(pthread_rwlock_t \*rwlock)$/;"	f
pthread_rwlock_trywrlock	stubs/pthread.c	/^int pthread_rwlock_trywrlock(pthread_rwlock_t \*rwlock)$/;"	f
pthread_rwlock_unlock	stubs/pthread.c	/^int pthread_rwlock_unlock(pthread_rwlock_t \*rwlock)$/;"	f
pthread_rwlock_wrlock	stubs/pthread.c	/^int pthread_rwlock_wrlock(pthread_rwlock_t \*rwlock)$/;"	f
pthread_rwlockattr_destroy	stubs/pthread.c	/^int pthread_rwlockattr_destroy(pthread_rwlockattr_t \*attr)$/;"	f
pthread_rwlockattr_getkind_np	stubs/pthread.c	/^int pthread_rwlockattr_getkind_np(const pthread_rwlockattr_t \*attr, int \*pref)$/;"	f
pthread_rwlockattr_getpshared	stubs/pthread.c	/^int pthread_rwlockattr_getpshared(const pthread_rwlockattr_t \*attr, int \*pshared)$/;"	f
pthread_rwlockattr_init	stubs/pthread.c	/^int pthread_rwlockattr_init(pthread_rwlockattr_t \*attr)$/;"	f
pthread_rwlockattr_setkind_np	stubs/pthread.c	/^int pthread_rwlockattr_setkind_np(pthread_rwlockattr_t \*attr, int pref)$/;"	f
pthread_rwlockattr_setpshared	stubs/pthread.c	/^int pthread_rwlockattr_setpshared(pthread_rwlockattr_t \*attr, int pshared)$/;"	f
pthread_rwlockattr_t	stubs/pthread.c	/^} pthread_rwlockattr_t;$/;"	t
pthread_self	stubs/pthread.c	/^pthread_t pthread_self(void)$/;"	f
pthread_setcancelstate	stubs/pthread.c	/^int pthread_setcancelstate(int state, int \*oldstate)$/;"	f
pthread_setcanceltype	stubs/pthread.c	/^int pthread_setcanceltype(int type, int \*oldtype)$/;"	f
pthread_setconcurrency	stubs/pthread.c	/^int pthread_setconcurrency(int level)$/;"	f
pthread_setschedparam	stubs/pthread.c	/^int pthread_setschedparam(pthread_t target_thread, int policy, const struct sched_param \*param)$/;"	f
pthread_setspecific	stubs/pthread.c	/^int pthread_setspecific(pthread_key_t key, const void \*pointer)$/;"	f
pthread_sigmask	stubs/pthread.c	/^int pthread_sigmask(int how, const sigset_t \*newmask, sigset_t \*oldmask)$/;"	f
pthread_spin_destroy	stubs/pthread.c	/^int pthread_spin_destroy(pthread_spinlock_t \*lock)$/;"	f
pthread_spin_init	stubs/pthread.c	/^int pthread_spin_init(pthread_spinlock_t \*lock, int pshared)$/;"	f
pthread_spin_lock	stubs/pthread.c	/^int pthread_spin_lock(pthread_spinlock_t \*lock)$/;"	f
pthread_spin_trylock	stubs/pthread.c	/^int pthread_spin_trylock(pthread_spinlock_t \*lock)$/;"	f
pthread_spin_unlock	stubs/pthread.c	/^int pthread_spin_unlock(pthread_spinlock_t \*lock)$/;"	f
pthread_spinlock_t	stubs/pthread.c	/^typedef volatile int pthread_spinlock_t;$/;"	t
pthread_t	stubs/pthread.c	/^typedef unsigned long int pthread_t;$/;"	t
pthread_testcancel	stubs/pthread.c	/^void pthread_testcancel(void)$/;"	f
pthread_yield	stubs/pthread.c	/^int pthread_yield(void)$/;"	f
putc	stubs/ansistub.c	/^int putc(int ch, FILE \*fp)$/;"	f
putchar	stubs/ansistub.c	/^int putchar(int ch)$/;"	f
puts	stubs/ansistub.c	/^int puts(const char \*string)$/;"	f
pwrite	stubs/unixstub.c	/^ssize_t pwrite(int fd, void \*buf, size_t nbytes, off_t offset)$/;"	f
pwrite64	stubs/unixstub.c	/^ssize_t pwrite64(int fd, void \*buf, size_t nbytes, off64_t offset)$/;"	f
qsort	stubs/ansistub.c	/^void qsort(void \*array, size_t nitems, size_t itemsize, int (\*compare)(const void \*itemi, const void \*itemj))$/;"	f
queue_id	stubs/gtkstub.c	206;"	struct:GtkAccelLabel
quot	stubs/ansistub.c	64;"	struct:div_t
quot	stubs/ansistub.c	71;"	struct:ldiv_t
raise	stubs/ansistub.c	/^int raise(int signo)$/;"	f
rand	stubs/ansistub.c	/^int rand(void)$/;"	f
range	stubs/gtkstub.c	9726;"	struct:GtkScale
range	stubs/gtkstub.c	9795;"	struct:GtkScrollbar
ratio	stubs/gtkstub.c	563;"	struct:GtkAspectFrame
rawarc	stubs/unixstub.c	/^struct rawarc {$/;"	s
rbearing	stubs/xlibstub.c	998;"	struct:XCharStruct
rc_style	stubs/gtkstub.c	10674;"	struct:GtkStyle
read	stubs/unixstub.c	/^ssize_t read(int fd, void \*buf, size_t nbytes)$/;"	f
readlink	stubs/unixstub.c	/^int readlink(const char \*path, char \*buf, size_t len)$/;"	f
realloc	stubs/ansistub.c	/^void \*realloc(void \*mem, size_t new_size)$/;"	f
reallocate_redraws	stubs/gtkstub.c	2639;"	struct:GtkContainer
red	stubs/gdkstub.c	6096;"	struct:GdkColor
red	stubs/xftstub.c	25;"	struct:XRenderDirectFormat
red	stubs/xftstub.c	105;"	struct:XRenderColor
red	stubs/xlibstub.c	459;"	struct:XColor
redMask	stubs/xftstub.c	25;"	struct:XRenderDirectFormat
red_closeness	stubs/xpmstub.c	118;"	struct:XpmAttributes
red_mask	stubs/gdkstub.c	6125;"	struct:GdkVisual
red_mask	stubs/xlibstub.c	328;"	struct:Visual
red_mask	stubs/xlibstub.c	442;"	struct:XImage
red_mask	stubs/xlibstub.c	1348;"	struct:XVisualInfo
red_max	stubs/xlibstub.c	1362;"	struct:XStandardColormap
red_mult	stubs/xlibstub.c	1362;"	struct:XStandardColormap
red_prec	stubs/gdkstub.c	6125;"	struct:GdkVisual
red_shift	stubs/gdkstub.c	6125;"	struct:GdkVisual
ref_count	stubs/glibstub.c	1192;"	struct:GHook
ref_count	stubs/gtkstub.c	37;"	struct:GtkAccelGroup
ref_count	stubs/gtkstub.c	7910;"	struct:GtkObject
ref_count	stubs/gtkstub.c	9916;"	struct:GtkTargetList
ref_count	stubs/gtkstub.c	10674;"	struct:GtkStyle
register_t	stubs/unixstub.c	/^typedef int register_t ;$/;"	t
regs	stubs/unixstub.c	/^  struct user_regs_struct	regs;$/;"	t
relief	stubs/gtkstub.c	1028;"	struct:GtkButton
relief	stubs/gtkstub.c	11651;"	struct:GtkToolbar
rem	stubs/ansistub.c	64;"	struct:div_t
rem	stubs/ansistub.c	71;"	struct:ldiv_t
remove	stubs/ansistub.c	/^int remove(const char \*filename)$/;"	f
rename	stubs/ansistub.c	/^int rename(const char \*oldname, const char \*newname)$/;"	f
repeat	stubs/xftstub.c	97;"	struct:XRenderPictureAttributes
request	stubs/xlibstub.c	926;"	struct:XMappingEvent
request_code	stubs/xlibstub.c	937;"	struct:XErrorEvent
request_height	stubs/gtkstub.c	10343;"	struct:GtkSocket
request_width	stubs/gtkstub.c	10343;"	struct:GtkSocket
requested_font_name	stubs/gtkstub.c	4847;"	struct:GtkFontSelection
requestor	stubs/gdkstub.c	6481;"	struct:GdkEventSelection
requestor	stubs/xlibstub.c	872;"	struct:XSelectionRequestEvent
requestor	stubs/xlibstub.c	885;"	struct:XSelectionEvent
requisition	stubs/gtkstub.c	7582;"	struct:GtkNotebookPage
requisition	stubs/gtkstub.c	11045;"	struct:GtkTableRowCol
requisition	stubs/gtkstub.c	13688;"	struct:GtkWidget
res_class	stubs/xlibstub.c	1328;"	struct:XClassHint
res_name	stubs/xlibstub.c	1328;"	struct:XClassHint
reserved	stubs/unixstub.c	1718;"	struct:snd_ctl_callbacks_t
reserved	stubs/unixstub.c	1865;"	struct:snd_mixer_callbacks_t
reserved	stubs/unixstub.c	2436;"	struct:snd_pcm_loopback_callbacks_t
reserved	stubs/unixstub.c	/^  int				reserved;$/;"	v
reserved	stubs/unixstub.c	/^  long reserved;$/;"	v
reserved_1	stubs/gtkstub.c	12888;"	struct:GtkTypeInfo
reserved_2	stubs/gtkstub.c	12888;"	struct:GtkTypeInfo
reset_button	stubs/gtkstub.c	2403;"	struct:GtkColorSelectionDialog
resize_count	stubs/gtkstub.c	14411;"	struct:GtkWindow
resize_mode	stubs/gtkstub.c	2639;"	struct:GtkContainer
resize_widgets	stubs/gtkstub.c	2639;"	struct:GtkContainer
resizeable	stubs/gtkstub.c	1679;"	struct:GtkCListColumn
resourceid	stubs/xlibstub.c	937;"	struct:XErrorEvent
revoke	stubs/unixstub.c	/^int revoke(const char \*filename)$/;"	f
rewind	stubs/ansistub.c	/^void rewind(FILE \*fp)$/;"	f
rgb_fname	stubs/xpmstub.c	118;"	struct:XpmAttributes
right_attach	stubs/gtkstub.c	11031;"	struct:GtkTableChild
right_justify	stubs/gtkstub.c	7278;"	struct:GtkMenuItem
rmdir	stubs/unixstub.c	/^int rmdir(const char \*dirname)$/;"	f
root	stubs/xlibstub.c	356;"	struct:Screen
root	stubs/xlibstub.c	408;"	struct:XWindowAttributes
root	stubs/xlibstub.c	539;"	struct:XKeyEvent
root	stubs/xlibstub.c	562;"	struct:XButtonEvent
root	stubs/xlibstub.c	585;"	struct:XMotionEvent
root	stubs/xlibstub.c	609;"	struct:XCrossingEvent
root_depth	stubs/xlibstub.c	356;"	struct:Screen
root_input_mask	stubs/xlibstub.c	356;"	struct:Screen
root_tree	stubs/gtkstub.c	11935;"	struct:GtkTree
root_visual	stubs/xlibstub.c	356;"	struct:Screen
roundup	stubs/unixstub.c	4521;"	d
row	stubs/gtkstub.c	1514;"	struct:GtkCListCellInfo
row	stubs/gtkstub.c	3021;"	struct:GtkCTreeRow
row	stubs/gtkstub.c	11809;"	struct:GtkTooltipsData
row_center_offset	stubs/gtkstub.c	1619;"	struct:GtkCList
row_height	stubs/gtkstub.c	1619;"	struct:GtkCList
row_list	stubs/gtkstub.c	1619;"	struct:GtkCList
row_list_end	stubs/gtkstub.c	1619;"	struct:GtkCList
row_mem_chunk	stubs/gtkstub.c	1619;"	struct:GtkCList
row_spacing	stubs/gtkstub.c	11005;"	struct:GtkTable
rows	stubs/gtkstub.c	1619;"	struct:GtkCList
rows	stubs/gtkstub.c	11005;"	struct:GtkTable
rowstride	stubs/gtkstub.c	8711;"	struct:GtkPreview
ruler	stubs/gtkstub.c	5384;"	struct:GtkHRuler
ruler	stubs/gtkstub.c	13277;"	struct:GtkVRuler
ruler_scale	stubs/gtkstub.c	9672;"	struct:GtkRulerMetric
same_app	stubs/gtkstub.c	8651;"	struct:GtkPlug
same_app	stubs/gtkstub.c	10343;"	struct:GtkSocket
same_screen	stubs/xlibstub.c	539;"	struct:XKeyEvent
same_screen	stubs/xlibstub.c	562;"	struct:XButtonEvent
same_screen	stubs/xlibstub.c	585;"	struct:XMotionEvent
same_screen	stubs/xlibstub.c	609;"	struct:XCrossingEvent
sample_area	stubs/gtkstub.c	2380;"	struct:GtkColorSelection
sample_area_eb	stubs/gtkstub.c	2380;"	struct:GtkColorSelection
sample_buf	stubs/gtkstub.c	2380;"	struct:GtkColorSelection
sample_gc	stubs/gtkstub.c	2380;"	struct:GtkColorSelection
save_button	stubs/gtkstub.c	5627;"	struct:GtkInputDialog
save_under	stubs/xlibstub.c	383;"	struct:XSetWindowAttributes
save_under	stubs/xlibstub.c	408;"	struct:XWindowAttributes
save_unders	stubs/xlibstub.c	356;"	struct:Screen
saved_state	stubs/gtkstub.c	13688;"	struct:GtkWidget
sbrk	stubs/unixstub.c	/^int sbrk(int \*delta)$/;"	f
scale	stubs/gtkstub.c	5428;"	struct:GtkHScale
scale	stubs/gtkstub.c	13320;"	struct:GtkVScale
scales	stubs/gtkstub.c	2380;"	struct:GtkColorSelection
scan_binary	stubs/glibstub.c	2255;"	struct:GScannerConfig
scan_comment_multi	stubs/glibstub.c	2255;"	struct:GScannerConfig
scan_float	stubs/glibstub.c	2255;"	struct:GScannerConfig
scan_hex	stubs/glibstub.c	2255;"	struct:GScannerConfig
scan_hex_dollar	stubs/glibstub.c	2255;"	struct:GScannerConfig
scan_identifier	stubs/glibstub.c	2255;"	struct:GScannerConfig
scan_identifier_1char	stubs/glibstub.c	2255;"	struct:GScannerConfig
scan_identifier_NULL	stubs/glibstub.c	2255;"	struct:GScannerConfig
scan_octal	stubs/glibstub.c	2255;"	struct:GScannerConfig
scan_string_dq	stubs/glibstub.c	2255;"	struct:GScannerConfig
scan_string_sq	stubs/glibstub.c	2255;"	struct:GScannerConfig
scan_symbols	stubs/glibstub.c	2255;"	struct:GScannerConfig
scanf	stubs/ansistub.c	/^int scanf(const char \*format , \.\.\.)$/;"	f
scanline_pad	stubs/xlibstub.c	283;"	struct:XPixmapFormatValues
scanline_pad	stubs/xlibstub.c	364;"	struct:ScreenFormat
scope_0_fallback	stubs/glibstub.c	2255;"	struct:GScannerConfig
scope_id	stubs/glibstub.c	2298;"	struct:GScanner
screen	stubs/xftstub.c	80;"	struct:XRenderInfo
screen	stubs/xlibstub.c	408;"	struct:XWindowAttributes
screen	stubs/xlibstub.c	1057;"	union:XEDataObject
screen	stubs/xlibstub.c	1348;"	struct:XVisualInfo
scroll_offset	stubs/gtkstub.c	3981;"	struct:GtkEntry
scroll_type	stubs/gtkstub.c	9291;"	struct:GtkRange
scroll_x	stubs/gtkstub.c	6161;"	struct:GtkLayout
scroll_y	stubs/gtkstub.c	6161;"	struct:GtkLayout
scrollable	stubs/gtkstub.c	7555;"	struct:GtkNotebook
scrollbar	stubs/gtkstub.c	5471;"	struct:GtkHScrollbar
scrollbar	stubs/gtkstub.c	13363;"	struct:GtkVScrollbar
scrollbar_spacing	stubs/gtkstub.c	9851;"	struct:GtkScrolledWindowClass
selectable	stubs/gtkstub.c	1699;"	struct:GtkCListRow
selected_day	stubs/gtkstub.c	1158;"	struct:GtkCalendar
selected_size	stubs/gtkstub.c	4847;"	struct:GtkFontSelection
selection	stubs/gdkstub.c	6481;"	struct:GdkEventSelection
selection	stubs/gdkstub.c	6539;"	union:GdkEvent
selection	stubs/gtkstub.c	1619;"	struct:GtkCList
selection	stubs/gtkstub.c	6281;"	struct:GtkList
selection	stubs/gtkstub.c	11935;"	struct:GtkTree
selection	stubs/gtkstub.c	13617;"	struct:GtkSelectionData
selection	stubs/xlibstub.c	858;"	struct:XSelectionClearEvent
selection	stubs/xlibstub.c	872;"	struct:XSelectionRequestEvent
selection	stubs/xlibstub.c	885;"	struct:XSelectionEvent
selection_end	stubs/gtkstub.c	1619;"	struct:GtkCList
selection_end_pos	stubs/gtkstub.c	3824;"	struct:GtkEditable
selection_entry	stubs/gtkstub.c	4597;"	struct:GtkFileSelection
selection_mode	stubs/gtkstub.c	1619;"	struct:GtkCList
selection_mode	stubs/gtkstub.c	6281;"	struct:GtkList
selection_mode	stubs/gtkstub.c	11935;"	struct:GtkTree
selection_start_pos	stubs/gtkstub.c	3824;"	struct:GtkEditable
selection_text	stubs/gtkstub.c	4597;"	struct:GtkFileSelection
sem_flg	stubs/unixstub.c	/^  short sem_flg;		\/\* operation flag \*\/$/;"	v
sem_num	stubs/unixstub.c	/^  unsigned short sem_num;	\/\* semaphore number \*\/$/;"	t
sem_op	stubs/unixstub.c	/^  short sem_op;		\/\* semaphore operation \*\/$/;"	v
send_event	stubs/gdkstub.c	6341;"	struct:GdkEventAny
send_event	stubs/gdkstub.c	6351;"	struct:GdkEventExpose
send_event	stubs/gdkstub.c	6359;"	struct:GdkEventNoExpose
send_event	stubs/gdkstub.c	6368;"	struct:GdkEventVisibility
send_event	stubs/gdkstub.c	6387;"	struct:GdkEventMotion
send_event	stubs/gdkstub.c	6406;"	struct:GdkEventButton
send_event	stubs/gdkstub.c	6419;"	struct:GdkEventKey
send_event	stubs/gdkstub.c	6437;"	struct:GdkEventCrossing
send_event	stubs/gdkstub.c	6446;"	struct:GdkEventFocus
send_event	stubs/gdkstub.c	6457;"	struct:GdkEventConfigure
send_event	stubs/gdkstub.c	6468;"	struct:GdkEventProperty
send_event	stubs/gdkstub.c	6481;"	struct:GdkEventSelection
send_event	stubs/gdkstub.c	6492;"	struct:GdkEventProximity
send_event	stubs/gdkstub.c	6507;"	struct:GdkEventClient
send_event	stubs/gdkstub.c	6518;"	struct:GdkEventDND
send_event	stubs/xlibstub.c	539;"	struct:XKeyEvent
send_event	stubs/xlibstub.c	562;"	struct:XButtonEvent
send_event	stubs/xlibstub.c	585;"	struct:XMotionEvent
send_event	stubs/xlibstub.c	609;"	struct:XCrossingEvent
send_event	stubs/xlibstub.c	629;"	struct:XFocusChangeEvent
send_event	stubs/xlibstub.c	645;"	struct:XKeymapEvent
send_event	stubs/xlibstub.c	657;"	struct:XExposeEvent
send_event	stubs/xlibstub.c	671;"	struct:XGraphicsExposeEvent
send_event	stubs/xlibstub.c	682;"	struct:XNoExposeEvent
send_event	stubs/xlibstub.c	692;"	struct:XVisibilityEvent
send_event	stubs/xlibstub.c	706;"	struct:XCreateWindowEvent
send_event	stubs/xlibstub.c	716;"	struct:XDestroyWindowEvent
send_event	stubs/xlibstub.c	727;"	struct:XUnmapEvent
send_event	stubs/xlibstub.c	738;"	struct:XMapEvent
send_event	stubs/xlibstub.c	748;"	struct:XMapRequestEvent
send_event	stubs/xlibstub.c	761;"	struct:XReparentEvent
send_event	stubs/xlibstub.c	776;"	struct:XConfigureEvent
send_event	stubs/xlibstub.c	787;"	struct:XGravityEvent
send_event	stubs/xlibstub.c	797;"	struct:XResizeRequestEvent
send_event	stubs/xlibstub.c	813;"	struct:XConfigureRequestEvent
send_event	stubs/xlibstub.c	824;"	struct:XCirculateEvent
send_event	stubs/xlibstub.c	835;"	struct:XCirculateRequestEvent
send_event	stubs/xlibstub.c	847;"	struct:XPropertyEvent
send_event	stubs/xlibstub.c	858;"	struct:XSelectionClearEvent
send_event	stubs/xlibstub.c	872;"	struct:XSelectionRequestEvent
send_event	stubs/xlibstub.c	885;"	struct:XSelectionEvent
send_event	stubs/xlibstub.c	897;"	struct:XColormapEvent
send_event	stubs/xlibstub.c	913;"	struct:XClientMessageEvent
send_event	stubs/xlibstub.c	926;"	struct:XMappingEvent
send_event	stubs/xlibstub.c	946;"	struct:XAnyEvent
separator	stubs/gtkstub.c	5514;"	struct:GtkHSeparator
separator	stubs/gtkstub.c	13406;"	struct:GtkVSeparator
seq_context_id	stubs/gtkstub.c	10565;"	struct:GtkStatusbar
seq_id	stubs/glibstub.c	1179;"	struct:GHookList
seq_id	stubs/gtkstub.c	397;"	struct:GtkArgInfo
seq_id	stubs/gtkstub.c	716;"	struct:GtkPatternSpec
seq_message_id	stubs/gtkstub.c	10565;"	struct:GtkStatusbar
serial	stubs/xlibstub.c	539;"	struct:XKeyEvent
serial	stubs/xlibstub.c	562;"	struct:XButtonEvent
serial	stubs/xlibstub.c	585;"	struct:XMotionEvent
serial	stubs/xlibstub.c	609;"	struct:XCrossingEvent
serial	stubs/xlibstub.c	629;"	struct:XFocusChangeEvent
serial	stubs/xlibstub.c	645;"	struct:XKeymapEvent
serial	stubs/xlibstub.c	657;"	struct:XExposeEvent
serial	stubs/xlibstub.c	671;"	struct:XGraphicsExposeEvent
serial	stubs/xlibstub.c	682;"	struct:XNoExposeEvent
serial	stubs/xlibstub.c	692;"	struct:XVisibilityEvent
serial	stubs/xlibstub.c	706;"	struct:XCreateWindowEvent
serial	stubs/xlibstub.c	716;"	struct:XDestroyWindowEvent
serial	stubs/xlibstub.c	727;"	struct:XUnmapEvent
serial	stubs/xlibstub.c	738;"	struct:XMapEvent
serial	stubs/xlibstub.c	748;"	struct:XMapRequestEvent
serial	stubs/xlibstub.c	761;"	struct:XReparentEvent
serial	stubs/xlibstub.c	776;"	struct:XConfigureEvent
serial	stubs/xlibstub.c	787;"	struct:XGravityEvent
serial	stubs/xlibstub.c	797;"	struct:XResizeRequestEvent
serial	stubs/xlibstub.c	813;"	struct:XConfigureRequestEvent
serial	stubs/xlibstub.c	824;"	struct:XCirculateEvent
serial	stubs/xlibstub.c	835;"	struct:XCirculateRequestEvent
serial	stubs/xlibstub.c	847;"	struct:XPropertyEvent
serial	stubs/xlibstub.c	858;"	struct:XSelectionClearEvent
serial	stubs/xlibstub.c	872;"	struct:XSelectionRequestEvent
serial	stubs/xlibstub.c	885;"	struct:XSelectionEvent
serial	stubs/xlibstub.c	897;"	struct:XColormapEvent
serial	stubs/xlibstub.c	913;"	struct:XClientMessageEvent
serial	stubs/xlibstub.c	926;"	struct:XMappingEvent
serial	stubs/xlibstub.c	937;"	struct:XErrorEvent
serial	stubs/xlibstub.c	946;"	struct:XAnyEvent
set_name	stubs/gtkstub.c	759;"	struct:GtkBindingSet
set_next	stubs/gtkstub.c	776;"	struct:GtkBindingEntry
set_scroll_adjustments_signal	stubs/gtkstub.c	13791;"	struct:GtkWidgetClass
setbit	stubs/unixstub.c	4525;"	d
setbuf	stubs/ansistub.c	/^void setbuf(FILE \*fp, char buffer\[BUFSIZ\])$/;"	f
setdomainname	stubs/unixstub.c	/^int setdomainname(const char \*name, size_t namelen)$/;"	f
setegid	stubs/unixstub.c	/^int setegid(gid_t gid)$/;"	f
seteuid	stubs/unixstub.c	/^int seteuid(uid_t uid)$/;"	f
setgid	stubs/unixstub.c	/^int setgid(gid_t gid)$/;"	f
sethostid	stubs/unixstub.c	/^int sethostid(long id)$/;"	f
sethostname	stubs/unixstub.c	/^int sethostname(char \*name, size_t namelen)$/;"	f
setjmp	stubs/ansistub.c	/^int setjmp(jmp_buf jmpenv)$/;"	f
setlocale	stubs/ansistub.c	/^char \*setlocale(int type, const char \*locale)$/;"	f
setpgid	stubs/unixstub.c	/^int setpgid(pid_t pid, pid_t pgif)$/;"	f
setpgrp	stubs/unixstub.c	/^int setpgrp(void)$/;"	f
setregid	stubs/unixstub.c	/^int setregid(gid_t rgid, gid_t egid)$/;"	f
setreuid	stubs/unixstub.c	/^int setreuid(uid_t ruid, uid_t euid)$/;"	f
setrlimit	stubs/unixstub.c	5083;"	d
setsid	stubs/unixstub.c	/^pid_t setsid(void)$/;"	f
setuid	stubs/unixstub.c	/^int setuid(uid_t uid)$/;"	f
setusershell	stubs/unixstub.c	/^void setusershell(void)$/;"	f
setvbuf	stubs/ansistub.c	/^int setvbuf(FILE \*fp, char \*buffer, int mode, size_t width)$/;"	f
sfont	stubs/xftstub.c	415;"	struct:XftFontSet
shadow_type	stubs/gtkstub.c	503;"	struct:GtkArrow
shadow_type	stubs/gtkstub.c	1619;"	struct:GtkCList
shadow_type	stubs/gtkstub.c	5055;"	struct:GtkFrame
shadow_type	stubs/gtkstub.c	5189;"	struct:GtkHandleBox
shadow_type	stubs/gtkstub.c	6920;"	struct:GtkMenuBar
shadow_type	stubs/gtkstub.c	10436;"	struct:GtkSpinButton
shadow_type	stubs/gtkstub.c	13175;"	struct:GtkViewport
shape_mask	stubs/gtkstub.c	13810;"	struct:GtkWidgetShapeInfo
show_border	stubs/gtkstub.c	7555;"	struct:GtkNotebook
show_stub	stubs/gtkstub.c	2986;"	struct:GtkCTree
show_submenu_indicator	stubs/gtkstub.c	7278;"	struct:GtkMenuItem
show_tabs	stubs/gtkstub.c	7555;"	struct:GtkNotebook
show_text	stubs/gtkstub.c	9029;"	struct:GtkProgress
show_toggle_indicator	stubs/gtkstub.c	7278;"	struct:GtkMenuItem
shrink	stubs/gtkstub.c	11045;"	struct:GtkTableRowCol
shrink_on_detach	stubs/gtkstub.c	5189;"	struct:GtkHandleBox
sibling	stubs/gtkstub.c	3021;"	struct:GtkCTreeRow
sibling	stubs/xlibstub.c	451;"	struct:XWindowChanges
side	stubs/gtkstub.c	8366;"	struct:GtkPackerChild
signal	stubs/ansistub.c	/^void (\*signal (int signo, void (\*fn)(int signo)))(int signo)$/;"	f
signal	stubs/unixstub.c	/^  long			signal;$/;"	v
signal_id	stubs/gtkstub.c	49;"	struct:GtkAccelEntry
signal_name	stubs/gtkstub.c	786;"	struct:GtkBindingSignal
signal_quote1	stubs/gtkstub.c	221;"	struct:GtkAccelLabelClass
signal_quote2	stubs/gtkstub.c	221;"	struct:GtkAccelLabelClass
signals	stubs/gtkstub.c	776;"	struct:GtkBindingEntry
signals	stubs/gtkstub.c	7957;"	struct:GtkObjectClass
significand	stubs/unixstub.c	/^  unsigned short significand\[4\];$/;"	t
sigset_t	stubs/unixstub.c	/^typedef __sigset_t sigset_t;$/;"	t
sin	stubs/ansistub.c	/^double sin(double angle)$/;"	f
sinh	stubs/ansistub.c	/^double sinh(double angle)$/;"	f
size	stubs/gdkstub.c	6103;"	struct:GdkColormap
size	stubs/gtkstub.c	4847;"	struct:GtkFontSelection
size	stubs/xftstub.c	408;"	struct:XftPattern
size_clist	stubs/gtkstub.c	4847;"	struct:GtkFontSelection
size_entry	stubs/gtkstub.c	4847;"	struct:GtkFontSelection
size_t	stubs/ansistub.c	/^typedef OPAQUE	size_t;$/;"	t
skip_comment_multi	stubs/glibstub.c	2255;"	struct:GScannerConfig
skip_comment_single	stubs/glibstub.c	2255;"	struct:GScannerConfig
sleep	stubs/unixstub.c	/^unsigned int sleep(unsigned int seconds)$/;"	f
slider	stubs/gtkstub.c	9291;"	struct:GtkRange
slider	stubs/gtkstub.c	9320;"	struct:GtkRangeClass
slider_length	stubs/gtkstub.c	9738;"	struct:GtkScaleClass
slider_size	stubs/gtkstub.c	9649;"	struct:GtkRuler
slider_width	stubs/gtkstub.c	9320;"	struct:GtkRangeClass
snap_edge	stubs/gtkstub.c	5189;"	struct:GtkHandleBox
snap_to_ticks	stubs/gtkstub.c	10436;"	struct:GtkSpinButton
snd_BE_to_host_16	stubs/unixstub.c	3310;"	d
snd_BE_to_host_32	stubs/unixstub.c	3316;"	d
snd_LE_to_host_16	stubs/unixstub.c	3298;"	d
snd_LE_to_host_32	stubs/unixstub.c	3304;"	d
snd_card_get_longname	stubs/unixstub.c	/^int snd_card_get_longname(int card, char \*\*name)$/;"	f
snd_card_get_name	stubs/unixstub.c	/^int snd_card_get_name(int card, char \*\*name)$/;"	f
snd_card_load	stubs/unixstub.c	/^int snd_card_load(int card)$/;"	f
snd_card_name	stubs/unixstub.c	/^int snd_card_name(const char \*name)$/;"	f
snd_cards	stubs/unixstub.c	/^int snd_cards(void)$/;"	f
snd_cards_mask	stubs/unixstub.c	/^unsigned int snd_cards_mask(void)$/;"	f
snd_ctl_callbacks	stubs/unixstub.c	/^typedef struct snd_ctl_callbacks {$/;"	s
snd_ctl_callbacks_t	stubs/unixstub.c	/^} snd_ctl_callbacks_t;$/;"	t
snd_ctl_close	stubs/unixstub.c	/^int snd_ctl_close(snd_ctl_t \*handle)$/;"	f
snd_ctl_file_descriptor	stubs/unixstub.c	/^int snd_ctl_file_descriptor(snd_ctl_t \*handle)$/;"	f
snd_ctl_hw_info	stubs/unixstub.c	/^int snd_ctl_hw_info(snd_ctl_t \*handle, struct snd_ctl_hw_info \*info)$/;"	f
snd_ctl_hwdep_info	stubs/unixstub.c	/^int snd_ctl_hwdep_info(snd_ctl_t \*handle, int dev, snd_hwdep_info_t \* info)$/;"	f
snd_ctl_mixer_info	stubs/unixstub.c	/^int snd_ctl_mixer_info(snd_ctl_t \*handle, int dev, snd_mixer_info_t \* info)$/;"	f
snd_ctl_open	stubs/unixstub.c	/^int snd_ctl_open(snd_ctl_t \*\*handle, int card)$/;"	f
snd_ctl_pcm_channel_info	stubs/unixstub.c	/^int snd_ctl_pcm_channel_info(snd_ctl_t \*handle, int dev, int channel, int subdev, snd_pcm_channel_info_t \* info)$/;"	f
snd_ctl_pcm_channel_prefer_subdevice	stubs/unixstub.c	/^int snd_ctl_pcm_channel_prefer_subdevice(snd_ctl_t \*handle, int dev, int channel, int subdev)$/;"	f
snd_ctl_pcm_info	stubs/unixstub.c	/^int snd_ctl_pcm_info(snd_ctl_t \*handle, int dev, snd_pcm_info_t \* info)$/;"	f
snd_ctl_rawmidi_info	stubs/unixstub.c	/^int snd_ctl_rawmidi_info(snd_ctl_t \*handle, int dev, snd_rawmidi_info_t \* info)$/;"	f
snd_ctl_read	stubs/unixstub.c	/^int snd_ctl_read(snd_ctl_t \*handle, snd_ctl_callbacks_t \* callbacks)$/;"	f
snd_ctl_switch_list	stubs/unixstub.c	/^int snd_ctl_switch_list(snd_ctl_t \*handle, snd_switch_list_t \* list)$/;"	f
snd_ctl_switch_read	stubs/unixstub.c	/^int snd_ctl_switch_read(snd_ctl_t \*handle, snd_switch_t \* sw)$/;"	f
snd_ctl_switch_write	stubs/unixstub.c	/^int snd_ctl_switch_write(snd_ctl_t \*handle, snd_switch_t \* sw)$/;"	f
snd_ctl_t	stubs/unixstub.c	/^typedef struct snd_ctl snd_ctl_t;$/;"	t
snd_defaults_card	stubs/unixstub.c	/^int snd_defaults_card(void)$/;"	f
snd_defaults_mixer_card	stubs/unixstub.c	/^int snd_defaults_mixer_card(void)$/;"	f
snd_defaults_mixer_device	stubs/unixstub.c	/^int snd_defaults_mixer_device(void)$/;"	f
snd_defaults_pcm_card	stubs/unixstub.c	/^int snd_defaults_pcm_card(void)$/;"	f
snd_defaults_pcm_device	stubs/unixstub.c	/^int snd_defaults_pcm_device(void)$/;"	f
snd_defaults_rawmidi_card	stubs/unixstub.c	/^int snd_defaults_rawmidi_card(void)$/;"	f
snd_defaults_rawmidi_device	stubs/unixstub.c	/^int snd_defaults_rawmidi_device(void)$/;"	f
snd_host_to_BE_16	stubs/unixstub.c	3307;"	d
snd_host_to_BE_32	stubs/unixstub.c	3313;"	d
snd_host_to_LE_16	stubs/unixstub.c	3295;"	d
snd_host_to_LE_32	stubs/unixstub.c	3301;"	d
snd_hwdep_block_mode	stubs/unixstub.c	/^int snd_hwdep_block_mode(snd_hwdep_t \*handle, int enable)$/;"	f
snd_hwdep_close	stubs/unixstub.c	/^int snd_hwdep_close(snd_hwdep_t \*handle)$/;"	f
snd_hwdep_file_descriptor	stubs/unixstub.c	/^int snd_hwdep_file_descriptor(snd_hwdep_t \*handle)$/;"	f
snd_hwdep_info	stubs/unixstub.c	/^int snd_hwdep_info(snd_hwdep_t \*handle, snd_hwdep_info_t \* info)$/;"	f
snd_hwdep_ioctl	stubs/unixstub.c	/^int snd_hwdep_ioctl(snd_hwdep_t \*handle, int request, void \* arg)$/;"	f
snd_hwdep_open	stubs/unixstub.c	/^int snd_hwdep_open(snd_hwdep_t \*\*handle, int card, int device, int mode)$/;"	f
snd_hwdep_read	stubs/unixstub.c	/^ssize_t snd_hwdep_read(snd_hwdep_t \*handle, void \*buffer, size_t size)$/;"	f
snd_hwdep_t	stubs/unixstub.c	/^typedef struct snd_hwdep snd_hwdep_t;$/;"	t
snd_hwdep_write	stubs/unixstub.c	/^ssize_t snd_hwdep_write(snd_hwdep_t \*handle, const void \*buffer, size_t size)$/;"	f
snd_instr_iwffff_close	stubs/unixstub.c	/^int snd_instr_iwffff_close(snd_iwffff_handle_t \*handle)$/;"	f
snd_instr_iwffff_convert_from_stream	stubs/unixstub.c	/^int snd_instr_iwffff_convert_from_stream(snd_seq_instr_get_t \*data, long size, snd_instr_iwffff_t \*\*iwffff)$/;"	f
snd_instr_iwffff_convert_to_stream	stubs/unixstub.c	/^int snd_instr_iwffff_convert_to_stream(snd_instr_iwffff_t \*iwffff, const char \*name, snd_seq_instr_put_t \*\*data, long \*size)$/;"	f
snd_instr_iwffff_free	stubs/unixstub.c	/^int snd_instr_iwffff_free(snd_instr_iwffff_t \*iwffff)$/;"	f
snd_instr_iwffff_load	stubs/unixstub.c	/^int snd_instr_iwffff_load(snd_iwffff_handle_t \*handle, int bank, int prg, snd_instr_iwffff_t \*\*iwffff)$/;"	f
snd_instr_iwffff_open	stubs/unixstub.c	/^int snd_instr_iwffff_open(snd_iwffff_handle_t \*\*handle, const char \*name_fff, const char \*name_dta)$/;"	f
snd_instr_iwffff_open_rom	stubs/unixstub.c	/^int snd_instr_iwffff_open_rom(snd_iwffff_handle_t \*\*handle, int card, int bank, int file)$/;"	f
snd_instr_iwffff_open_rom_file	stubs/unixstub.c	/^int snd_instr_iwffff_open_rom_file(snd_iwffff_handle_t \*\*handle, const char \*name, int bank, int file)$/;"	f
snd_instr_iwffff_t	stubs/unixstub.c	/^typedef void snd_instr_iwffff_t;$/;"	t
snd_instr_simple_convert_from_stream	stubs/unixstub.c	/^int snd_instr_simple_convert_from_stream(snd_seq_instr_get_t \*data, long size, snd_instr_simple_t \*\*simple)$/;"	f
snd_instr_simple_convert_to_stream	stubs/unixstub.c	/^int snd_instr_simple_convert_to_stream(snd_instr_simple_t \*simple, const char \*name, snd_seq_instr_put_t \*\*put, long \*size)$/;"	f
snd_instr_simple_free	stubs/unixstub.c	/^int snd_instr_simple_free(snd_instr_simple_t \*simple)$/;"	f
snd_instr_simple_t	stubs/unixstub.c	/^typedef void snd_instr_simple_t;$/;"	t
snd_iwffff_handle_t	stubs/unixstub.c	/^typedef struct snd_iwffff_handle snd_iwffff_handle_t;$/;"	t
snd_mixer_callbacks	stubs/unixstub.c	/^typedef struct snd_mixer_callbacks {$/;"	s
snd_mixer_callbacks_t	stubs/unixstub.c	/^} snd_mixer_callbacks_t;$/;"	t
snd_mixer_channel_name	stubs/unixstub.c	/^const char \*snd_mixer_channel_name(int channel)$/;"	f
snd_mixer_close	stubs/unixstub.c	/^int snd_mixer_close(snd_mixer_t \*handle)$/;"	f
snd_mixer_element_build	stubs/unixstub.c	/^int snd_mixer_element_build(snd_mixer_t \*handle, snd_mixer_element_t \* element)$/;"	f
snd_mixer_element_free	stubs/unixstub.c	/^int snd_mixer_element_free(snd_mixer_element_t \* element)$/;"	f
snd_mixer_element_has_control	stubs/unixstub.c	/^int snd_mixer_element_has_control(snd_mixer_eid_t \*eid)$/;"	f
snd_mixer_element_has_info	stubs/unixstub.c	/^int snd_mixer_element_has_info(snd_mixer_eid_t \*eid)$/;"	f
snd_mixer_element_info	stubs/unixstub.c	/^int snd_mixer_element_info(snd_mixer_t \*handle, snd_mixer_element_info_t \* info)$/;"	f
snd_mixer_element_info_build	stubs/unixstub.c	/^int snd_mixer_element_info_build(snd_mixer_t \*handle, snd_mixer_element_info_t \* info)$/;"	f
snd_mixer_element_info_free	stubs/unixstub.c	/^int snd_mixer_element_info_free(snd_mixer_element_info_t \* info)$/;"	f
snd_mixer_element_read	stubs/unixstub.c	/^int snd_mixer_element_read(snd_mixer_t \*handle, snd_mixer_element_t \* element)$/;"	f
snd_mixer_element_write	stubs/unixstub.c	/^int snd_mixer_element_write(snd_mixer_t \*handle, snd_mixer_element_t \* element)$/;"	f
snd_mixer_elements	stubs/unixstub.c	/^int snd_mixer_elements(snd_mixer_t \*handle, snd_mixer_elements_t \* elements)$/;"	f
snd_mixer_file_descriptor	stubs/unixstub.c	/^int snd_mixer_file_descriptor(snd_mixer_t \*handle)$/;"	f
snd_mixer_get_bit	stubs/unixstub.c	/^int snd_mixer_get_bit(unsigned int \*bitmap, int bit)$/;"	f
snd_mixer_get_filter	stubs/unixstub.c	/^int snd_mixer_get_filter(snd_mixer_t \*handle, snd_mixer_filter_t \* filter)$/;"	f
snd_mixer_group_read	stubs/unixstub.c	/^int snd_mixer_group_read(snd_mixer_t \*handle, snd_mixer_group_t \* group)$/;"	f
snd_mixer_group_write	stubs/unixstub.c	/^int snd_mixer_group_write(snd_mixer_t \*handle, snd_mixer_group_t \* group)$/;"	f
snd_mixer_groups	stubs/unixstub.c	/^int snd_mixer_groups(snd_mixer_t \*handle, snd_mixer_groups_t \* groups)$/;"	f
snd_mixer_info	stubs/unixstub.c	/^int snd_mixer_info(snd_mixer_t \*handle, snd_mixer_info_t \* info)$/;"	f
snd_mixer_open	stubs/unixstub.c	/^int snd_mixer_open(snd_mixer_t \*\*handle, int card, int device)$/;"	f
snd_mixer_put_filter	stubs/unixstub.c	/^int snd_mixer_put_filter(snd_mixer_t \*handle, snd_mixer_filter_t \* filter)$/;"	f
snd_mixer_read	stubs/unixstub.c	/^int snd_mixer_read(snd_mixer_t \*handle, snd_mixer_callbacks_t \* callbacks)$/;"	f
snd_mixer_routes	stubs/unixstub.c	/^int snd_mixer_routes(snd_mixer_t \*handle, snd_mixer_routes_t \* routes)$/;"	f
snd_mixer_set_bit	stubs/unixstub.c	/^void snd_mixer_set_bit(unsigned int \*bitmap, int bit, int val)$/;"	f
snd_mixer_sort_eid_name_index	stubs/unixstub.c	/^void snd_mixer_sort_eid_name_index(snd_mixer_eid_t \*list, int count)$/;"	f
snd_mixer_sort_eid_table	stubs/unixstub.c	/^void snd_mixer_sort_eid_table(snd_mixer_eid_t \*list, int count, snd_mixer_weight_entry_t \*table)$/;"	f
snd_mixer_sort_gid_name_index	stubs/unixstub.c	/^void snd_mixer_sort_gid_name_index(snd_mixer_gid_t \*list, int count)$/;"	f
snd_mixer_sort_gid_table	stubs/unixstub.c	/^void snd_mixer_sort_gid_table(snd_mixer_gid_t \*list, int count, snd_mixer_weight_entry_t \*table)$/;"	f
snd_mixer_t	stubs/unixstub.c	/^typedef struct snd_mixer snd_mixer_t;$/;"	t
snd_mixer_weight_entry_t	stubs/unixstub.c	/^} snd_mixer_weight_entry_t;$/;"	t
snd_pcm_build_linear_format	stubs/unixstub.c	/^int snd_pcm_build_linear_format(int width, int unsignd, int big_endian)$/;"	f
snd_pcm_capture_flush	stubs/unixstub.c	/^int snd_pcm_capture_flush(snd_pcm_t \*handle)$/;"	f
snd_pcm_capture_go	stubs/unixstub.c	/^int snd_pcm_capture_go(snd_pcm_t \*handle)$/;"	f
snd_pcm_capture_prepare	stubs/unixstub.c	/^int snd_pcm_capture_prepare(snd_pcm_t \*handle)$/;"	f
snd_pcm_channel_flush	stubs/unixstub.c	/^int snd_pcm_channel_flush(snd_pcm_t \*handle, int channel)$/;"	f
snd_pcm_channel_go	stubs/unixstub.c	/^int snd_pcm_channel_go(snd_pcm_t \*handle, int channel)$/;"	f
snd_pcm_channel_info	stubs/unixstub.c	/^int snd_pcm_channel_info(snd_pcm_t \*handle, snd_pcm_channel_info_t \* info)$/;"	f
snd_pcm_channel_params	stubs/unixstub.c	/^int snd_pcm_channel_params(snd_pcm_t \*handle, snd_pcm_channel_params_t \* params)$/;"	f
snd_pcm_channel_prepare	stubs/unixstub.c	/^int snd_pcm_channel_prepare(snd_pcm_t \*handle, int channel)$/;"	f
snd_pcm_channel_setup	stubs/unixstub.c	/^int snd_pcm_channel_setup(snd_pcm_t \*handle, snd_pcm_channel_setup_t \* setup)$/;"	f
snd_pcm_channel_status	stubs/unixstub.c	/^int snd_pcm_channel_status(snd_pcm_t \*handle, snd_pcm_channel_status_t \* status)$/;"	f
snd_pcm_close	stubs/unixstub.c	/^int snd_pcm_close(snd_pcm_t \*handle)$/;"	f
snd_pcm_file_descriptor	stubs/unixstub.c	/^int snd_pcm_file_descriptor(snd_pcm_t \*handle, int channel)$/;"	f
snd_pcm_format_big_endian	stubs/unixstub.c	/^int snd_pcm_format_big_endian(int format)$/;"	f
snd_pcm_format_linear	stubs/unixstub.c	/^int snd_pcm_format_linear(int format)$/;"	f
snd_pcm_format_little_endian	stubs/unixstub.c	/^int snd_pcm_format_little_endian(int format)$/;"	f
snd_pcm_format_signed	stubs/unixstub.c	/^int snd_pcm_format_signed(int format)$/;"	f
snd_pcm_format_silence	stubs/unixstub.c	/^unsigned char snd_pcm_format_silence(int format)$/;"	f
snd_pcm_format_size	stubs/unixstub.c	/^ssize_t snd_pcm_format_size(int format, size_t samples)$/;"	f
snd_pcm_format_unsigned	stubs/unixstub.c	/^int snd_pcm_format_unsigned(int format)$/;"	f
snd_pcm_get_format_name	stubs/unixstub.c	/^const char \*snd_pcm_get_format_name(int format)$/;"	f
snd_pcm_info	stubs/unixstub.c	/^int snd_pcm_info(snd_pcm_t \*handle, snd_pcm_info_t \* info)$/;"	f
snd_pcm_loopback_block_mode	stubs/unixstub.c	/^int snd_pcm_loopback_block_mode(snd_pcm_loopback_t \*handle, int enable)$/;"	f
snd_pcm_loopback_callbacks	stubs/unixstub.c	/^typedef struct snd_pcm_loopback_callbacks {$/;"	s
snd_pcm_loopback_callbacks_t	stubs/unixstub.c	/^} snd_pcm_loopback_callbacks_t;$/;"	t
snd_pcm_loopback_close	stubs/unixstub.c	/^int snd_pcm_loopback_close(snd_pcm_loopback_t \*handle)$/;"	f
snd_pcm_loopback_file_descriptor	stubs/unixstub.c	/^int snd_pcm_loopback_file_descriptor(snd_pcm_loopback_t \*handle)$/;"	f
snd_pcm_loopback_format	stubs/unixstub.c	/^int snd_pcm_loopback_format(snd_pcm_loopback_t \*handle, snd_pcm_format_t \* format)$/;"	f
snd_pcm_loopback_open	stubs/unixstub.c	/^int snd_pcm_loopback_open(snd_pcm_loopback_t \*\*handle, int card, int device, int subdev, int mode)$/;"	f
snd_pcm_loopback_read	stubs/unixstub.c	/^ssize_t snd_pcm_loopback_read(snd_pcm_loopback_t \*handle, snd_pcm_loopback_callbacks_t \* callbacks)$/;"	f
snd_pcm_loopback_status	stubs/unixstub.c	/^int snd_pcm_loopback_status(snd_pcm_loopback_t \*handle, snd_pcm_loopback_status_t \* status)$/;"	f
snd_pcm_loopback_stream_mode	stubs/unixstub.c	/^int snd_pcm_loopback_stream_mode(snd_pcm_loopback_t \*handle, int mode)$/;"	f
snd_pcm_loopback_t	stubs/unixstub.c	/^typedef struct snd_pcm_loopback snd_pcm_loopback_t;$/;"	t
snd_pcm_mmap	stubs/unixstub.c	/^int snd_pcm_mmap(snd_pcm_t \*handle, int channel, snd_pcm_mmap_control_t \*\*control, void \*\*buffer)$/;"	f
snd_pcm_munmap	stubs/unixstub.c	/^int snd_pcm_munmap(snd_pcm_t \*handle, int channel)$/;"	f
snd_pcm_nonblock_mode	stubs/unixstub.c	/^int snd_pcm_nonblock_mode(snd_pcm_t \*handle, int nonblock)$/;"	f
snd_pcm_open	stubs/unixstub.c	/^int snd_pcm_open(snd_pcm_t \*\*handle, int card, int device, int mode)$/;"	f
snd_pcm_open_subdevice	stubs/unixstub.c	/^int snd_pcm_open_subdevice(snd_pcm_t \*\*handle, int card, int device, int subdevice, int mode)$/;"	f
snd_pcm_playback_drain	stubs/unixstub.c	/^int snd_pcm_playback_drain(snd_pcm_t \*handle)$/;"	f
snd_pcm_playback_flush	stubs/unixstub.c	/^int snd_pcm_playback_flush(snd_pcm_t \*handle)$/;"	f
snd_pcm_playback_go	stubs/unixstub.c	/^int snd_pcm_playback_go(snd_pcm_t \*handle)$/;"	f
snd_pcm_playback_pause	stubs/unixstub.c	/^int snd_pcm_playback_pause(snd_pcm_t \*handle, int enable)$/;"	f
snd_pcm_playback_prepare	stubs/unixstub.c	/^int snd_pcm_playback_prepare(snd_pcm_t \*handle)$/;"	f
snd_pcm_plugin_action_t	stubs/unixstub.c	/^} snd_pcm_plugin_action_t;$/;"	v
snd_pcm_plugin_append	stubs/unixstub.c	/^int snd_pcm_plugin_append(snd_pcm_t \*handle, int channel, snd_pcm_plugin_t \*plugin)$/;"	f
snd_pcm_plugin_build	stubs/unixstub.c	/^snd_pcm_plugin_t \*snd_pcm_plugin_build(const char \*name, int extra)$/;"	f
snd_pcm_plugin_build_adpcm	stubs/unixstub.c	/^int snd_pcm_plugin_build_adpcm(snd_pcm_format_t \*src_format, snd_pcm_format_t \*dst_format, snd_pcm_plugin_t \*\*r_plugin)$/;"	f
snd_pcm_plugin_build_alaw	stubs/unixstub.c	/^int snd_pcm_plugin_build_alaw(snd_pcm_format_t \*src_format, snd_pcm_format_t \*dst_format, snd_pcm_plugin_t \*\*r_plugin)$/;"	f
snd_pcm_plugin_build_block	stubs/unixstub.c	/^int snd_pcm_plugin_build_block(snd_pcm_t \*handle, int channel, snd_pcm_plugin_t \*\*r_plugin)$/;"	f
snd_pcm_plugin_build_interleave	stubs/unixstub.c	/^int snd_pcm_plugin_build_interleave(snd_pcm_format_t \*src_format, snd_pcm_format_t \*dst_format, snd_pcm_plugin_t \*\*r_plugin)$/;"	f
snd_pcm_plugin_build_linear	stubs/unixstub.c	/^int snd_pcm_plugin_build_linear(snd_pcm_format_t \*src_format, snd_pcm_format_t \*dst_format, snd_pcm_plugin_t \*\*r_plugin)$/;"	f
snd_pcm_plugin_build_mmap	stubs/unixstub.c	/^int snd_pcm_plugin_build_mmap(snd_pcm_t \*handle, int channel, snd_pcm_plugin_t \*\*r_plugin)$/;"	f
snd_pcm_plugin_build_mulaw	stubs/unixstub.c	/^int snd_pcm_plugin_build_mulaw(snd_pcm_format_t \*src_format, snd_pcm_format_t \*dst_format, snd_pcm_plugin_t \*\*r_plugin)$/;"	f
snd_pcm_plugin_build_rate	stubs/unixstub.c	/^int snd_pcm_plugin_build_rate(snd_pcm_format_t \*src_format, snd_pcm_format_t \*dst_format, snd_pcm_plugin_t \*\*r_plugin)$/;"	f
snd_pcm_plugin_build_stream	stubs/unixstub.c	/^int snd_pcm_plugin_build_stream(snd_pcm_t \*handle, int channel, snd_pcm_plugin_t \*\*r_plugin)$/;"	f
snd_pcm_plugin_build_voices	stubs/unixstub.c	/^int snd_pcm_plugin_build_voices(snd_pcm_format_t \*src_format, snd_pcm_format_t \*dst_format, snd_pcm_plugin_t \*\*r_plugin)$/;"	f
snd_pcm_plugin_build_volbal	stubs/unixstub.c	/^int snd_pcm_plugin_build_volbal(snd_pcm_format_t \*src_format, snd_pcm_format_t \*dst_format, int \*ttable, snd_pcm_plugin_t \*\*r_plugin)$/;"	f
snd_pcm_plugin_clear	stubs/unixstub.c	/^int snd_pcm_plugin_clear(snd_pcm_t \*handle, int channel)$/;"	f
snd_pcm_plugin_extra_data	stubs/unixstub.c	2245;"	d
snd_pcm_plugin_first	stubs/unixstub.c	/^snd_pcm_plugin_t \*snd_pcm_plugin_first(snd_pcm_t \*handle, int channel)$/;"	f
snd_pcm_plugin_flush	stubs/unixstub.c	/^int snd_pcm_plugin_flush(snd_pcm_t \*handle, int channel)$/;"	f
snd_pcm_plugin_free	stubs/unixstub.c	/^int snd_pcm_plugin_free(snd_pcm_plugin_t \*plugin)$/;"	f
snd_pcm_plugin_hardware_size	stubs/unixstub.c	/^ssize_t snd_pcm_plugin_hardware_size(snd_pcm_t \*handle, int channel, size_t trf_size)$/;"	f
snd_pcm_plugin_info	stubs/unixstub.c	/^int snd_pcm_plugin_info(snd_pcm_t \*handle, snd_pcm_channel_info_t \*info)$/;"	f
snd_pcm_plugin_insert	stubs/unixstub.c	/^int snd_pcm_plugin_insert(snd_pcm_t \*handle, int channel, snd_pcm_plugin_t \*plugin)$/;"	f
snd_pcm_plugin_last	stubs/unixstub.c	/^snd_pcm_plugin_t \*snd_pcm_plugin_last(snd_pcm_t \*handle, int channel)$/;"	f
snd_pcm_plugin_params	stubs/unixstub.c	/^int snd_pcm_plugin_params(snd_pcm_t \*handle, snd_pcm_channel_params_t \*params)$/;"	f
snd_pcm_plugin_playback_drain	stubs/unixstub.c	/^int snd_pcm_plugin_playback_drain(snd_pcm_t \*handle)$/;"	f
snd_pcm_plugin_pointer	stubs/unixstub.c	/^int snd_pcm_plugin_pointer(snd_pcm_t \*pcm, int channel, void \*\*ptr, size_t \*size)$/;"	f
snd_pcm_plugin_prepare	stubs/unixstub.c	/^int snd_pcm_plugin_prepare(snd_pcm_t \*handle, int channel)$/;"	f
snd_pcm_plugin_read	stubs/unixstub.c	/^ssize_t snd_pcm_plugin_read(snd_pcm_t \*handle, void \*bufer, size_t size)$/;"	f
snd_pcm_plugin_remove_first	stubs/unixstub.c	/^int snd_pcm_plugin_remove_first(snd_pcm_t \*handle, int channel)$/;"	f
snd_pcm_plugin_remove_to	stubs/unixstub.c	/^int snd_pcm_plugin_remove_to(snd_pcm_t \*handle, int channel, snd_pcm_plugin_t \*plugin)$/;"	f
snd_pcm_plugin_setup	stubs/unixstub.c	/^int snd_pcm_plugin_setup(snd_pcm_t \*handle, snd_pcm_channel_setup_t \*setup)$/;"	f
snd_pcm_plugin_status	stubs/unixstub.c	/^int snd_pcm_plugin_status(snd_pcm_t \*handle, snd_pcm_channel_status_t \*status)$/;"	f
snd_pcm_plugin_t	stubs/unixstub.c	/^typedef struct snd_stru_pcm_plugin snd_pcm_plugin_t;$/;"	t
snd_pcm_plugin_transfer_size	stubs/unixstub.c	/^ssize_t snd_pcm_plugin_transfer_size(snd_pcm_t \*handle, int channel, size_t drv_size)$/;"	f
snd_pcm_plugin_write	stubs/unixstub.c	/^ssize_t snd_pcm_plugin_write(snd_pcm_t \*handle, const void \*buffer, size_t size)$/;"	f
snd_pcm_read	stubs/unixstub.c	/^ssize_t snd_pcm_read(snd_pcm_t \*handle, void \*buffer, size_t size)$/;"	f
snd_pcm_readv	stubs/unixstub.c	/^ssize_t snd_pcm_readv(snd_pcm_t \*pcm, const struct iovec \*vector, int count)$/;"	f
snd_pcm_sync_go	stubs/unixstub.c	/^int snd_pcm_sync_go(snd_pcm_t \*handle, snd_pcm_sync_t \*sync)$/;"	f
snd_pcm_t	stubs/unixstub.c	/^typedef struct snd_pcm snd_pcm_t;$/;"	t
snd_pcm_transfer_size	stubs/unixstub.c	/^ssize_t snd_pcm_transfer_size(snd_pcm_t \*handle, int channel)$/;"	f
snd_pcm_write	stubs/unixstub.c	/^ssize_t snd_pcm_write(snd_pcm_t \*handle, const void \*buffer, size_t size)$/;"	f
snd_pcm_writev	stubs/unixstub.c	/^ssize_t snd_pcm_writev(snd_pcm_t \*pcm, const struct iovec \*vector, int count)$/;"	f
snd_rawmidi_block_mode	stubs/unixstub.c	/^int snd_rawmidi_block_mode(snd_rawmidi_t \*handle, int enable)$/;"	f
snd_rawmidi_channel_flush	stubs/unixstub.c	/^int snd_rawmidi_channel_flush(snd_rawmidi_t \*handle, int channel)$/;"	f
snd_rawmidi_channel_params	stubs/unixstub.c	/^int snd_rawmidi_channel_params(snd_rawmidi_t \*handle, snd_rawmidi_params_t \* params)$/;"	f
snd_rawmidi_channel_status	stubs/unixstub.c	/^int snd_rawmidi_channel_status(snd_rawmidi_t \*handle, snd_rawmidi_status_t \* status)$/;"	f
snd_rawmidi_close	stubs/unixstub.c	/^int snd_rawmidi_close(snd_rawmidi_t \*handle)$/;"	f
snd_rawmidi_file_descriptor	stubs/unixstub.c	/^int snd_rawmidi_file_descriptor(snd_rawmidi_t \*handle)$/;"	f
snd_rawmidi_info	stubs/unixstub.c	/^int snd_rawmidi_info(snd_rawmidi_t \*handle, snd_rawmidi_info_t \* info)$/;"	f
snd_rawmidi_input_flush	stubs/unixstub.c	/^int snd_rawmidi_input_flush(snd_rawmidi_t \*handle)$/;"	f
snd_rawmidi_open	stubs/unixstub.c	/^int snd_rawmidi_open(snd_rawmidi_t \*\*handle, int card, int device, int mode)$/;"	f
snd_rawmidi_output_drain	stubs/unixstub.c	/^int snd_rawmidi_output_drain(snd_rawmidi_t \*handle)$/;"	f
snd_rawmidi_output_flush	stubs/unixstub.c	/^int snd_rawmidi_output_flush(snd_rawmidi_t \*handle)$/;"	f
snd_rawmidi_read	stubs/unixstub.c	/^ssize_t snd_rawmidi_read(snd_rawmidi_t \*handle, void \*buffer, size_t size)$/;"	f
snd_rawmidi_t	stubs/unixstub.c	/^typedef struct snd_rawmidi snd_rawmidi_t;$/;"	t
snd_rawmidi_write	stubs/unixstub.c	/^ssize_t snd_rawmidi_write(snd_rawmidi_t \*handle, const void \*buffer, size_t size)$/;"	f
snd_seq_alloc_named_queue	stubs/unixstub.c	/^int snd_seq_alloc_named_queue(snd_seq_t \*seq, char \*name)$/;"	f
snd_seq_alloc_queue	stubs/unixstub.c	/^int snd_seq_alloc_queue(snd_seq_t \*handle)$/;"	f
snd_seq_block_mode	stubs/unixstub.c	/^int snd_seq_block_mode(snd_seq_t \*handle, int enable)$/;"	f
snd_seq_change_bit	stubs/unixstub.c	/^int snd_seq_change_bit(int nr, void \*array)$/;"	f
snd_seq_change_queue_tempo	stubs/unixstub.c	/^int snd_seq_change_queue_tempo(snd_seq_t \*seq, int q, int tempo, snd_seq_event_t \*ev)$/;"	f
snd_seq_change_queue_tempo	stubs/unixstub.c	3265;"	d
snd_seq_client_id	stubs/unixstub.c	/^int snd_seq_client_id(snd_seq_t \*handle)$/;"	f
snd_seq_close	stubs/unixstub.c	/^int snd_seq_close(snd_seq_t \*handle)$/;"	f
snd_seq_connect_from	stubs/unixstub.c	/^int snd_seq_connect_from(snd_seq_t \*seq, int my_port, int src_client, int src_port)$/;"	f
snd_seq_connect_to	stubs/unixstub.c	/^int snd_seq_connect_to(snd_seq_t \*seq, int my_port, int dest_client, int dest_port)$/;"	f
snd_seq_continue_queue	stubs/unixstub.c	/^int snd_seq_continue_queue(snd_seq_t \*seq, int q, snd_seq_event_t \*ev)$/;"	f
snd_seq_continue_queue	stubs/unixstub.c	3262;"	d
snd_seq_control_queue	stubs/unixstub.c	/^int snd_seq_control_queue(snd_seq_t \*seq, int q, int type, int value, snd_seq_event_t \*ev)$/;"	f
snd_seq_create_event	stubs/unixstub.c	/^snd_seq_event_t \*snd_seq_create_event(void)$/;"	f
snd_seq_create_port	stubs/unixstub.c	/^int snd_seq_create_port(snd_seq_t \*handle, snd_seq_port_info_t \*info)$/;"	f
snd_seq_create_simple_port	stubs/unixstub.c	/^int snd_seq_create_simple_port(snd_seq_t \*seq, char \*name, unsigned int caps, unsigned int type)$/;"	f
snd_seq_delete_port	stubs/unixstub.c	/^int snd_seq_delete_port(snd_seq_t \*handle, snd_seq_port_info_t \*info)$/;"	f
snd_seq_delete_simple_port	stubs/unixstub.c	/^int snd_seq_delete_simple_port(snd_seq_t \*seq, int port)$/;"	f
snd_seq_disconnect_from	stubs/unixstub.c	/^int snd_seq_disconnect_from(snd_seq_t \*seq, int my_port, int src_client, int src_port)$/;"	f
snd_seq_disconnect_to	stubs/unixstub.c	/^int snd_seq_disconnect_to(snd_seq_t \*seq, int my_port, int dest_client, int dest_port)$/;"	f
snd_seq_drain_input	stubs/unixstub.c	/^int snd_seq_drain_input(snd_seq_t \*handle)$/;"	f
snd_seq_drain_input_buffer	stubs/unixstub.c	/^int snd_seq_drain_input_buffer(snd_seq_t \*handle)$/;"	f
snd_seq_drain_output	stubs/unixstub.c	/^int snd_seq_drain_output(snd_seq_t \*handle)$/;"	f
snd_seq_drain_output_buffer	stubs/unixstub.c	/^int snd_seq_drain_output_buffer(snd_seq_t \*handle)$/;"	f
snd_seq_ev_clear	stubs/unixstub.c	/^void snd_seq_ev_clear(snd_seq_event_t \*ev)$/;"	f
snd_seq_ev_clear	stubs/unixstub.c	3220;"	d
snd_seq_ev_schedule_real	stubs/unixstub.c	/^void snd_seq_ev_schedule_real(snd_seq_event_t \*ev, int q, int relative, snd_seq_real_time_t \*time)$/;"	f
snd_seq_ev_schedule_tick	stubs/unixstub.c	/^void snd_seq_ev_schedule_tick(snd_seq_event_t \*ev, int q, int relative, snd_seq_tick_time_t tick)$/;"	f
snd_seq_ev_set_broadcast	stubs/unixstub.c	/^void snd_seq_ev_set_broadcast(snd_seq_event_t \*ev)$/;"	f
snd_seq_ev_set_broadcast	stubs/unixstub.c	3229;"	d
snd_seq_ev_set_chanpress	stubs/unixstub.c	3289;"	d
snd_seq_ev_set_controller	stubs/unixstub.c	3280;"	d
snd_seq_ev_set_dest	stubs/unixstub.c	/^void snd_seq_ev_set_dest(snd_seq_event_t \*ev, int client, int port)$/;"	f
snd_seq_ev_set_dest	stubs/unixstub.c	3223;"	d
snd_seq_ev_set_direct	stubs/unixstub.c	/^void snd_seq_ev_set_direct(snd_seq_event_t \*ev)$/;"	f
snd_seq_ev_set_fixed	stubs/unixstub.c	/^void snd_seq_ev_set_fixed(snd_seq_event_t \*ev)$/;"	f
snd_seq_ev_set_keypress	stubs/unixstub.c	3277;"	d
snd_seq_ev_set_note	stubs/unixstub.c	3268;"	d
snd_seq_ev_set_noteoff	stubs/unixstub.c	3274;"	d
snd_seq_ev_set_noteon	stubs/unixstub.c	3271;"	d
snd_seq_ev_set_pgmchange	stubs/unixstub.c	3283;"	d
snd_seq_ev_set_pitchbend	stubs/unixstub.c	3286;"	d
snd_seq_ev_set_priority	stubs/unixstub.c	/^void snd_seq_ev_set_priority(snd_seq_event_t \*ev, int high_prior)$/;"	f
snd_seq_ev_set_queue_continue	stubs/unixstub.c	/^int snd_seq_ev_set_queue_continue(snd_seq_event_t \*ev, int q)$/;"	f
snd_seq_ev_set_queue_continue	stubs/unixstub.c	3244;"	d
snd_seq_ev_set_queue_control	stubs/unixstub.c	/^int snd_seq_ev_set_queue_control(snd_seq_event_t \*ev, int type, int q, int value)$/;"	f
snd_seq_ev_set_queue_control	stubs/unixstub.c	3235;"	d
snd_seq_ev_set_queue_pos_real	stubs/unixstub.c	/^int snd_seq_ev_set_queue_pos_real(snd_seq_event_t \*ev, int q, snd_seq_real_time_t \*rtime)$/;"	f
snd_seq_ev_set_queue_pos_real	stubs/unixstub.c	3250;"	d
snd_seq_ev_set_queue_pos_tick	stubs/unixstub.c	/^int snd_seq_ev_set_queue_pos_tick(snd_seq_event_t \*ev, int q, snd_seq_tick_time_t tick)$/;"	f
snd_seq_ev_set_queue_pos_tick	stubs/unixstub.c	3253;"	d
snd_seq_ev_set_queue_start	stubs/unixstub.c	/^int snd_seq_ev_set_queue_start(snd_seq_event_t \*ev, int q)$/;"	f
snd_seq_ev_set_queue_start	stubs/unixstub.c	3238;"	d
snd_seq_ev_set_queue_stop	stubs/unixstub.c	/^int snd_seq_ev_set_queue_stop(snd_seq_event_t \*ev, int q)$/;"	f
snd_seq_ev_set_queue_stop	stubs/unixstub.c	3241;"	d
snd_seq_ev_set_queue_tempo	stubs/unixstub.c	/^int snd_seq_ev_set_queue_tempo(snd_seq_event_t \*ev, int q, int tempo)$/;"	f
snd_seq_ev_set_queue_tempo	stubs/unixstub.c	3247;"	d
snd_seq_ev_set_source	stubs/unixstub.c	/^void snd_seq_ev_set_source(snd_seq_event_t \*ev, int port)$/;"	f
snd_seq_ev_set_source	stubs/unixstub.c	3232;"	d
snd_seq_ev_set_subs	stubs/unixstub.c	/^void snd_seq_ev_set_subs(snd_seq_event_t \*ev)$/;"	f
snd_seq_ev_set_subs	stubs/unixstub.c	3226;"	d
snd_seq_ev_set_sysex	stubs/unixstub.c	3292;"	d
snd_seq_ev_set_variable	stubs/unixstub.c	/^void snd_seq_ev_set_variable(snd_seq_event_t \*ev, int len, void \*ptr)$/;"	f
snd_seq_ev_set_varusr	stubs/unixstub.c	/^void snd_seq_ev_set_varusr(snd_seq_event_t \*ev, int len, void \*ptr)$/;"	f
snd_seq_event_input	stubs/unixstub.c	/^int snd_seq_event_input(snd_seq_t \*handle, snd_seq_event_t \*\*ev)$/;"	f
snd_seq_event_input_pending	stubs/unixstub.c	/^int snd_seq_event_input_pending(snd_seq_t \*seq, int fetch_sequencer)$/;"	f
snd_seq_event_input_selective	stubs/unixstub.c	/^int snd_seq_event_input_selective(snd_seq_t \*seq, snd_seq_event_t \*\*ev, int type, int blocking)$/;"	f
snd_seq_event_length	stubs/unixstub.c	/^int snd_seq_event_length(snd_seq_event_t \*ev)$/;"	f
snd_seq_event_output	stubs/unixstub.c	/^int snd_seq_event_output(snd_seq_t \*handle, snd_seq_event_t \*ev)$/;"	f
snd_seq_event_output	stubs/unixstub.c	/^int snd_seq_event_output(snd_seq_t \*handle, snd_seq_event_t \*ev)$/;"	f
snd_seq_event_output_buffer	stubs/unixstub.c	/^int snd_seq_event_output_buffer(snd_seq_t \*handle, snd_seq_event_t \*ev)$/;"	f
snd_seq_event_output_direct	stubs/unixstub.c	/^int snd_seq_event_output_direct(snd_seq_t \*handle, snd_seq_event_t \*ev)$/;"	f
snd_seq_event_output_pending	stubs/unixstub.c	/^int snd_seq_event_output_pending(snd_seq_t \*seq)$/;"	f
snd_seq_extract_output	stubs/unixstub.c	/^int snd_seq_extract_output(snd_seq_t \*handle, snd_seq_event_t \*\*ev)$/;"	f
snd_seq_file_descriptor	stubs/unixstub.c	/^int snd_seq_file_descriptor(snd_seq_t \*handle)$/;"	f
snd_seq_flush_output	stubs/unixstub.c	/^int snd_seq_flush_output(snd_seq_t \*handle)$/;"	f
snd_seq_free_event	stubs/unixstub.c	/^int snd_seq_free_event(snd_seq_event_t \*ev)$/;"	f
snd_seq_free_queue	stubs/unixstub.c	/^int snd_seq_free_queue(snd_seq_t \*handle, int q)$/;"	f
snd_seq_get_any_client_info	stubs/unixstub.c	/^int snd_seq_get_any_client_info(snd_seq_t \*handle, int client, snd_seq_client_info_t \*info)$/;"	f
snd_seq_get_any_port_info	stubs/unixstub.c	/^int snd_seq_get_any_port_info(snd_seq_t \*handle, int client, int port, snd_seq_port_info_t \*info)$/;"	f
snd_seq_get_bit	stubs/unixstub.c	/^int snd_seq_get_bit(int nr, void \*array)$/;"	f
snd_seq_get_client_info	stubs/unixstub.c	/^int snd_seq_get_client_info(snd_seq_t \*handle, snd_seq_client_info_t \*info)$/;"	f
snd_seq_get_client_pool	stubs/unixstub.c	/^int snd_seq_get_client_pool(snd_seq_t \*handle, snd_seq_client_pool_t \* info)$/;"	f
snd_seq_get_named_queue	stubs/unixstub.c	/^int snd_seq_get_named_queue(snd_seq_t \*seq, char \*name)$/;"	f
snd_seq_get_port_info	stubs/unixstub.c	/^int snd_seq_get_port_info(snd_seq_t \*handle, int port, snd_seq_port_info_t \*info)$/;"	f
snd_seq_get_port_subscription	stubs/unixstub.c	/^int snd_seq_get_port_subscription(snd_seq_t \*handle, snd_seq_port_subscribe_t \*sub)$/;"	f
snd_seq_get_queue_client	stubs/unixstub.c	/^int snd_seq_get_queue_client(snd_seq_t \*handle, int q, snd_seq_queue_client_t \*queue)$/;"	f
snd_seq_get_queue_info	stubs/unixstub.c	/^int snd_seq_get_queue_info(snd_seq_t \*seq, int q, snd_seq_queue_info_t \*info)$/;"	f
snd_seq_get_queue_owner	stubs/unixstub.c	/^int snd_seq_get_queue_owner(snd_seq_t \*handle, int q, snd_seq_queue_owner_t \*owner)$/;"	f
snd_seq_get_queue_status	stubs/unixstub.c	/^int snd_seq_get_queue_status(snd_seq_t \*handle, int q, snd_seq_queue_status_t \*status)$/;"	f
snd_seq_get_queue_sync	stubs/unixstub.c	/^int snd_seq_get_queue_sync(snd_seq_t \*handle, int q, snd_seq_queue_sync_t \*sync)$/;"	f
snd_seq_get_queue_tempo	stubs/unixstub.c	/^int snd_seq_get_queue_tempo(snd_seq_t \*handle, int q, snd_seq_queue_tempo_t \*tempo)$/;"	f
snd_seq_get_queue_timer	stubs/unixstub.c	/^int snd_seq_get_queue_timer(snd_seq_t \*handle, int q, snd_seq_queue_timer_t \*timer)$/;"	f
snd_seq_input_buffer_size	stubs/unixstub.c	/^int snd_seq_input_buffer_size(snd_seq_t \*handle)$/;"	f
snd_seq_open	stubs/unixstub.c	/^int snd_seq_open(snd_seq_t \*\*handle, int mode)$/;"	f
snd_seq_output_buffer_size	stubs/unixstub.c	/^int snd_seq_output_buffer_size(snd_seq_t \*handle)$/;"	f
snd_seq_query_next_client	stubs/unixstub.c	/^int snd_seq_query_next_client(snd_seq_t \*handle, snd_seq_client_info_t \* info)$/;"	f
snd_seq_query_next_port	stubs/unixstub.c	/^int snd_seq_query_next_port(snd_seq_t \*handle, snd_seq_port_info_t \* info)$/;"	f
snd_seq_query_port_subscribers	stubs/unixstub.c	/^int snd_seq_query_port_subscribers(snd_seq_t \*seq, snd_seq_query_subs_t \* subs)$/;"	f
snd_seq_remove_events	stubs/unixstub.c	/^int snd_seq_remove_events(snd_seq_t \*handle, snd_seq_remove_events_t \*info)$/;"	f
snd_seq_reset_pool_input	stubs/unixstub.c	/^int snd_seq_reset_pool_input(snd_seq_t \*seq)$/;"	f
snd_seq_reset_pool_output	stubs/unixstub.c	/^int snd_seq_reset_pool_output(snd_seq_t \*seq)$/;"	f
snd_seq_resize_input_buffer	stubs/unixstub.c	/^int snd_seq_resize_input_buffer(snd_seq_t \*handle, int size)$/;"	f
snd_seq_resize_output_buffer	stubs/unixstub.c	/^int snd_seq_resize_output_buffer(snd_seq_t \*handle, int size)$/;"	f
snd_seq_set_bit	stubs/unixstub.c	/^void snd_seq_set_bit(int nr, void \*array)$/;"	f
snd_seq_set_client_event_filter	stubs/unixstub.c	/^int snd_seq_set_client_event_filter(snd_seq_t \*seq, int event_type)$/;"	f
snd_seq_set_client_filter	stubs/unixstub.c	/^int snd_seq_set_client_filter(snd_seq_t \*seq, unsigned int filter)$/;"	f
snd_seq_set_client_group	stubs/unixstub.c	/^int snd_seq_set_client_group(snd_seq_t \*seq, char \*name)$/;"	f
snd_seq_set_client_info	stubs/unixstub.c	/^int snd_seq_set_client_info(snd_seq_t \*handle, snd_seq_client_info_t \*info)$/;"	f
snd_seq_set_client_name	stubs/unixstub.c	/^int snd_seq_set_client_name(snd_seq_t \*seq, char \*name)$/;"	f
snd_seq_set_client_pool	stubs/unixstub.c	/^int snd_seq_set_client_pool(snd_seq_t \*handle, snd_seq_client_pool_t \* info)$/;"	f
snd_seq_set_client_pool_input	stubs/unixstub.c	/^int snd_seq_set_client_pool_input(snd_seq_t \*seq, int size)$/;"	f
snd_seq_set_client_pool_output	stubs/unixstub.c	/^int snd_seq_set_client_pool_output(snd_seq_t \*seq, int size)$/;"	f
snd_seq_set_client_pool_output_room	stubs/unixstub.c	/^int snd_seq_set_client_pool_output_room(snd_seq_t \*seq, int size)$/;"	f
snd_seq_set_port_info	stubs/unixstub.c	/^int snd_seq_set_port_info(snd_seq_t \*handle, int port, snd_seq_port_info_t \*info)$/;"	f
snd_seq_set_queue_client	stubs/unixstub.c	/^int snd_seq_set_queue_client(snd_seq_t \*handle, int q, snd_seq_queue_client_t \*queue)$/;"	f
snd_seq_set_queue_info	stubs/unixstub.c	/^int snd_seq_set_queue_info(snd_seq_t \*seq, int q, snd_seq_queue_info_t \*info)$/;"	f
snd_seq_set_queue_owner	stubs/unixstub.c	/^int snd_seq_set_queue_owner(snd_seq_t \*handle, int q, snd_seq_queue_owner_t \*owner)$/;"	f
snd_seq_set_queue_sync	stubs/unixstub.c	/^int snd_seq_set_queue_sync(snd_seq_t \*handle, int q, snd_seq_queue_sync_t \*sync)$/;"	f
snd_seq_set_queue_tempo	stubs/unixstub.c	/^int snd_seq_set_queue_tempo(snd_seq_t \*handle, int q, snd_seq_queue_tempo_t \*tempo)$/;"	f
snd_seq_set_queue_timer	stubs/unixstub.c	/^int snd_seq_set_queue_timer(snd_seq_t \*handle, int q, snd_seq_queue_timer_t \*timer)$/;"	f
snd_seq_setpos_queue	stubs/unixstub.c	/^int snd_seq_setpos_queue(snd_seq_t \*seq, int q, snd_seq_timestamp_t \*rtime, snd_seq_event_t \*ev)$/;"	f
snd_seq_start_queue	stubs/unixstub.c	/^int snd_seq_start_queue(snd_seq_t \*seq, int q, snd_seq_event_t \*ev)$/;"	f
snd_seq_start_queue	stubs/unixstub.c	3256;"	d
snd_seq_stop_queue	stubs/unixstub.c	/^int snd_seq_stop_queue(snd_seq_t \*seq, int q, snd_seq_event_t \*ev)$/;"	f
snd_seq_stop_queue	stubs/unixstub.c	3259;"	d
snd_seq_subscribe_port	stubs/unixstub.c	/^int snd_seq_subscribe_port(snd_seq_t \*handle, snd_seq_port_subscribe_t \*sub)$/;"	f
snd_seq_system_info	stubs/unixstub.c	/^int snd_seq_system_info(snd_seq_t \*handle, snd_seq_system_info_t \*info)$/;"	f
snd_seq_t	stubs/unixstub.c	/^typedef struct snd_seq snd_seq_t;$/;"	t
snd_seq_unsubscribe_port	stubs/unixstub.c	/^int snd_seq_unsubscribe_port(snd_seq_t \*handle, snd_seq_port_subscribe_t \*sub)$/;"	f
snd_seq_use_queue	stubs/unixstub.c	/^int snd_seq_use_queue(snd_seq_t \*seq, int q, int use)$/;"	f
snd_strerror	stubs/unixstub.c	/^const char \*snd_strerror( int errnum )$/;"	f
snd_stru_pcm_plugin	stubs/unixstub.c	/^struct snd_stru_pcm_plugin {$/;"	s
snd_timer_close	stubs/unixstub.c	/^int snd_timer_close(snd_timer_t \*handle)$/;"	f
snd_timer_continue	stubs/unixstub.c	/^int snd_timer_continue(snd_timer_t \*handle)$/;"	f
snd_timer_file_descriptor	stubs/unixstub.c	/^int snd_timer_file_descriptor(snd_timer_t \*handle)$/;"	f
snd_timer_general_info	stubs/unixstub.c	/^int snd_timer_general_info(snd_timer_t \*handle, snd_timer_general_info_t \* info)$/;"	f
snd_timer_info	stubs/unixstub.c	/^int snd_timer_info(snd_timer_t \*handle, snd_timer_info_t \*timer)$/;"	f
snd_timer_open	stubs/unixstub.c	/^int snd_timer_open(snd_timer_t \*\*handle)$/;"	f
snd_timer_params	stubs/unixstub.c	/^int snd_timer_params(snd_timer_t \*handle, snd_timer_params_t \*params)$/;"	f
snd_timer_read	stubs/unixstub.c	/^ssize_t snd_timer_read(snd_timer_t \*handle, void \*buffer, size_t size)$/;"	f
snd_timer_select	stubs/unixstub.c	/^int snd_timer_select(snd_timer_t \*handle, snd_timer_select_t \*tselect)$/;"	f
snd_timer_start	stubs/unixstub.c	/^int snd_timer_start(snd_timer_t \*handle)$/;"	f
snd_timer_status	stubs/unixstub.c	/^int snd_timer_status(snd_timer_t \*handle, snd_timer_status_t \*status)$/;"	f
snd_timer_stop	stubs/unixstub.c	/^int snd_timer_stop(snd_timer_t \*handle)$/;"	f
snd_timer_t	stubs/unixstub.c	/^typedef struct snd_timer snd_timer_t;$/;"	t
sobject	stubs/xftstub.c	452;"	struct:XftObjectSet
sockaddr_un	stubs/unixstub.c	/^struct sockaddr_un$/;"	s
socket_window	stubs/gtkstub.c	8651;"	struct:GtkPlug
socklen_t	stubs/unixstub.c	/^typedef __socklen_t socklen_t;$/;"	t
sort_column	stubs/gtkstub.c	1619;"	struct:GtkCList
sort_type	stubs/gtkstub.c	1619;"	struct:GtkCList
source	stubs/gdkstub.c	6302;"	struct:GdkDeviceInfo
source	stubs/gdkstub.c	6387;"	struct:GdkEventMotion
source	stubs/gdkstub.c	6406;"	struct:GdkEventButton
source	stubs/gdkstub.c	6492;"	struct:GdkEventProximity
source_window	stubs/gdkstub.c	6327;"	struct:GdkDragContext
space_size	stubs/gtkstub.c	11651;"	struct:GtkToolbar
space_style	stubs/gtkstub.c	11651;"	struct:GtkToolbar
spacing	stubs/gtkstub.c	625;"	struct:GtkButtonBox
spacing	stubs/gtkstub.c	922;"	struct:GtkBox
spacing	stubs/gtkstub.c	1746;"	struct:GtkCellPixText
spacing	stubs/gtkstub.c	8383;"	struct:GtkPacker
spacing	stubs/gtkstub.c	11045;"	struct:GtkTableRowCol
spot_location	stubs/gdkstub.c	6573;"	struct:GdkICAttr
sprintf	stubs/ansistub.c	/^int sprintf(char \*buffer, const char \*format, \.\.\.)$/;"	f
sqrt	stubs/ansistub.c	/^double sqrt(double num)$/;"	f
srand	stubs/ansistub.c	/^void srand(unsigned int seed)$/;"	f
sscanf	stubs/ansistub.c	/^int sscanf(const char \*buffer, const char \*format, \.\.\.)$/;"	f
ssize_t	stubs/unixstub.c	/^typedef __ssize_t ssize_t;$/;"	t
st_space	stubs/unixstub.c	/^  long st_space \[20\];$/;"	v
st_space	stubs/unixstub.c	/^  long st_space\[32\];   \/\* 8\*16 bytes for each FP-reg = 128 bytes \*\/$/;"	v
stack_mode	stubs/xlibstub.c	451;"	struct:XWindowChanges
stackaddr	stubs/pthread.c	21;"	struct:pthread_attr_t
start_code	stubs/unixstub.c	/^  unsigned long			start_code;$/;"	v
start_stack	stubs/unixstub.c	/^  unsigned long			start_stack;$/;"	v
start_time	stubs/gdkstub.c	6327;"	struct:GdkDragContext
stat	stubs/unixstub.c	/^int stat (__const char \*__restrict __file, struct stat \*__restrict __buf)$/;"	f
stat	stubs/unixstub.c	5527;"	d
state	stubs/gdkstub.c	6368;"	struct:GdkEventVisibility
state	stubs/gdkstub.c	6387;"	struct:GdkEventMotion
state	stubs/gdkstub.c	6406;"	struct:GdkEventButton
state	stubs/gdkstub.c	6419;"	struct:GdkEventKey
state	stubs/gdkstub.c	6437;"	struct:GdkEventCrossing
state	stubs/gdkstub.c	6468;"	struct:GdkEventProperty
state	stubs/gtkstub.c	1699;"	struct:GtkCListRow
state	stubs/gtkstub.c	13688;"	struct:GtkWidget
state	stubs/xlibstub.c	539;"	struct:XKeyEvent
state	stubs/xlibstub.c	562;"	struct:XButtonEvent
state	stubs/xlibstub.c	585;"	struct:XMotionEvent
state	stubs/xlibstub.c	609;"	struct:XCrossingEvent
state	stubs/xlibstub.c	692;"	struct:XVisibilityEvent
state	stubs/xlibstub.c	847;"	struct:XPropertyEvent
state	stubs/xlibstub.c	897;"	struct:XColormapEvent
state	stubs/xlibstub.c	1167;"	struct:XIMPreeditStateNotifyCallbackStruct
statfs	stubs/unixstub.c	5272;"	d
status	stubs/unixstub.c	/^  int status;		\/\* clock command\/status \*\/$/;"	v
status	stubs/unixstub.c	/^  unsigned long status;$/;"	v
status_area	stubs/gdkstub.c	6573;"	struct:GdkICAttr
status_area_needed	stubs/gdkstub.c	6573;"	struct:GdkICAttr
status_background	stubs/gdkstub.c	6573;"	struct:GdkICAttr
status_colormap	stubs/gdkstub.c	6573;"	struct:GdkICAttr
status_fontset	stubs/gdkstub.c	6573;"	struct:GdkICAttr
status_foreground	stubs/gdkstub.c	6573;"	struct:GdkICAttr
status_pixmap	stubs/gdkstub.c	6573;"	struct:GdkICAttr
statvfs	stubs/unixstub.c	5564;"	d
std_cmap_atom	stubs/gdkstub.c	6281;"	struct:GdkColorContext
stderr	stubs/ansistub.c	/^FILE \*stdin, \*stdout, \*stderr;$/;"	v
stdin	stubs/ansistub.c	/^FILE \*stdin, \*stdout, \*stderr;$/;"	v
stdout	stubs/ansistub.c	/^FILE \*stdin, \*stdout, \*stderr;$/;"	v
step_back	stubs/gtkstub.c	9291;"	struct:GtkRange
step_back	stubs/gtkstub.c	9320;"	struct:GtkRangeClass
step_forw	stubs/gtkstub.c	9291;"	struct:GtkRange
step_forw	stubs/gtkstub.c	9320;"	struct:GtkRangeClass
step_increment	stubs/gtkstub.c	281;"	struct:GtkAdjustment
stepper_size	stubs/gtkstub.c	9320;"	struct:GtkRangeClass
stepper_slider_spacing	stubs/gtkstub.c	9320;"	struct:GtkRangeClass
stipple	stubs/gdkstub.c	6201;"	struct:GdkGCValues
stipple	stubs/xlibstub.c	312;"	struct:XGCValues
str	stubs/glibstub.c	572;"	struct:GString
strcat	stubs/ansistub.c	/^char \*strcat(char \*front, const char \*rear)$/;"	f
strchr	stubs/ansistub.c	/^char \*strchr(const char \*string, int ch)$/;"	f
strcmp	stubs/ansistub.c	/^int strcmp(const char \*first, const char \*second)$/;"	f
strcoll	stubs/ansistub.c	/^int strcoll(const char \*first, const char \*second)$/;"	f
strcpy	stubs/ansistub.c	/^char \*strcpy(char \*dest, const char \*source)$/;"	f
strcspn	stubs/ansistub.c	/^size_t strcspn(const char \*string, const char \*chars)$/;"	f
strerror	stubs/ansistub.c	/^char \*strerror(int error_num)$/;"	f
strftime	stubs/ansistub.c	/^size_t strftime(char \*date_time, size_t maxsize,const char \*format, const struct tm \*currtime)$/;"	f
string	stubs/gdkstub.c	6419;"	struct:GdkEventKey
string	stubs/xpmstub.c	32;"	struct:XpmColor
strlen	stubs/ansistub.c	/^size_t strlen(const char \*string)$/;"	f
strncat	stubs/ansistub.c	/^char \*strncat(char \*front, const char \*rear, size_t length)$/;"	f
strncmp	stubs/ansistub.c	/^int strncmp(const char \*first, const char \*second, size_t length)$/;"	f
strncpy	stubs/ansistub.c	/^char \*strncpy(char \*to, const char \*from, size_t length)$/;"	f
strpbrk	stubs/ansistub.c	/^char \*strpbrk(const char \*string, const char \*chars)$/;"	f
strrchr	stubs/ansistub.c	/^char \*strrchr(const char \*string, int ch)$/;"	f
strspn	stubs/ansistub.c	/^size_t strspn(const char \*string, const char \*chars)$/;"	f
strstr	stubs/ansistub.c	/^char \*strstr(const char \*string, const char \*target)$/;"	f
strtod	stubs/ansistub.c	/^double strtod(const char \*start, char \*\*end)$/;"	f
strtok	stubs/ansistub.c	/^char\* strtok(char \*buf, const char \*delim)$/;"	f
strtol	stubs/ansistub.c	/^long int strtol(const char \*start, char \*\*end, int base)$/;"	f
strtoul	stubs/ansistub.c	/^unsigned long int strtoul(const char \*start, char \*\*end, int base)$/;"	f
strxfrm	stubs/ansistub.c	/^size_t strxfrm(char \*first, const char \*second, size_t length)$/;"	f
style	stubs/gdkstub.c	6573;"	struct:GdkICAttr
style	stubs/gtkstub.c	1699;"	struct:GtkCListRow
style	stubs/gtkstub.c	1714;"	struct:GtkCellText
style	stubs/gtkstub.c	1729;"	struct:GtkCellPixmap
style	stubs/gtkstub.c	1746;"	struct:GtkCellPixText
style	stubs/gtkstub.c	1760;"	struct:GtkCellWidget
style	stubs/gtkstub.c	1790;"	struct:GtkCell
style	stubs/gtkstub.c	4847;"	struct:GtkFontSelection
style	stubs/gtkstub.c	11651;"	struct:GtkToolbar
style	stubs/gtkstub.c	13688;"	struct:GtkWidget
style	stubs/xlibstub.c	1231;"	struct:XIMPreeditCaretCallbackStruct
styles	stubs/gtkstub.c	10674;"	struct:GtkStyle
subdivide	stubs/gtkstub.c	9672;"	struct:GtkRulerMetric
subfactories	stubs/gtkstub.c	6995;"	struct:GtkMenuFactory
submenu	stubs/gtkstub.c	7278;"	struct:GtkMenuItem
submenu_direction	stubs/gtkstub.c	7278;"	struct:GtkMenuItem
submenu_placement	stubs/gtkstub.c	7278;"	struct:GtkMenuItem
submenu_placement	stubs/gtkstub.c	7407;"	struct:GtkMenuShellClass
subtree	stubs/gtkstub.c	12067;"	struct:GtkTreeItem
subwindow	stubs/gdkstub.c	6437;"	struct:GdkEventCrossing
subwindow	stubs/xlibstub.c	539;"	struct:XKeyEvent
subwindow	stubs/xlibstub.c	562;"	struct:XButtonEvent
subwindow	stubs/xlibstub.c	585;"	struct:XMotionEvent
subwindow	stubs/xlibstub.c	609;"	struct:XCrossingEvent
subwindow_mode	stubs/gdkstub.c	6201;"	struct:GdkGCValues
subwindow_mode	stubs/xftstub.c	97;"	struct:XRenderPictureAttributes
subwindow_mode	stubs/xlibstub.c	312;"	struct:XGCValues
succesfull	stubs/gtkstub.c	11414;"	struct:GtkThemeEngine
suggested_action	stubs/gdkstub.c	6327;"	struct:GdkDragContext
supported_styles	stubs/xlibstub.c	1130;"	struct:XIMStyles
supported_values	stubs/xlibstub.c	1267;"	struct:XIMValuesList
sw	stubs/unixstub.c	/^  unsigned long sw;$/;"	v
swab	stubs/unixstub.c	/^void swab(const void \*from, void \*to, ssize_t nbytes)$/;"	f
swd	stubs/unixstub.c	/^  long swd;$/;"	v
swd	stubs/unixstub.c	/^  unsigned short swd;$/;"	v
symbol_2_token	stubs/glibstub.c	2255;"	struct:GScannerConfig
symbol_table	stubs/glibstub.c	2298;"	struct:GScanner
symbolic	stubs/xpmstub.c	32;"	struct:XpmColor
symlink	stubs/unixstub.c	/^int symlink(const char \*from, const chr \*to)$/;"	f
sync	stubs/unixstub.c	/^void sync(void)$/;"	f
system	stubs/ansistub.c	/^int system(const char \*command)$/;"	f
tab_hborder	stubs/gtkstub.c	7555;"	struct:GtkNotebook
tab_label	stubs/gtkstub.c	7582;"	struct:GtkNotebookPage
tab_pos	stubs/gtkstub.c	7555;"	struct:GtkNotebook
tab_vborder	stubs/gtkstub.c	7555;"	struct:GtkNotebook
table	stubs/gtkstub.c	5118;"	struct:GtkGammaCurve
tag	stubs/unixstub.c	/^  unsigned long tag;$/;"	v
tan	stubs/ansistub.c	/^double tan(double angle)$/;"	f
tanh	stubs/ansistub.c	/^double tanh(double angle)$/;"	f
target	stubs/gdkstub.c	6481;"	struct:GdkEventSelection
target	stubs/gtkstub.c	9907;"	struct:GtkTargetEntry
target	stubs/gtkstub.c	9925;"	struct:GtkTargetPair
target	stubs/gtkstub.c	13617;"	struct:GtkSelectionData
target	stubs/xlibstub.c	872;"	struct:XSelectionRequestEvent
target	stubs/xlibstub.c	885;"	struct:XSelectionEvent
targets	stubs/gdkstub.c	6327;"	struct:GdkDragContext
tcgetpgrp	stubs/unixstub.c	/^pid_t tcgetpgrp(int fd)$/;"	f
tcsetpgrp	stubs/unixstub.c	/^pid_t tcsetpgrp(int fd, pid_t pgrpid)$/;"	f
tearoff_window	stubs/gtkstub.c	7093;"	struct:GtkMenu
text	stubs/glibstub.c	2298;"	struct:GScanner
text	stubs/gtkstub.c	1714;"	struct:GtkCellText
text	stubs/gtkstub.c	1746;"	struct:GtkCellPixText
text	stubs/gtkstub.c	3981;"	struct:GtkEntry
text	stubs/gtkstub.c	9448;"	struct:GtkRcStyle
text	stubs/gtkstub.c	10586;"	struct:GtkStatusbarMsg
text	stubs/gtkstub.c	10674;"	struct:GtkStyle
text	stubs/xlibstub.c	1209;"	struct:XIMStringConversionCallbackStruct
text	stubs/xlibstub.c	1217;"	struct:XIMPreeditDrawCallbackStruct
text_area	stubs/gtkstub.c	3981;"	struct:GtkEntry
text_area	stubs/gtkstub.c	11279;"	struct:GtkText
text_end	stubs/glibstub.c	2298;"	struct:GScanner
text_gc	stubs/gtkstub.c	10674;"	struct:GtkStyle
text_length	stubs/gtkstub.c	3981;"	struct:GtkEntry
text_max_length	stubs/gtkstub.c	3981;"	struct:GtkEntry
text_mb	stubs/gtkstub.c	3981;"	struct:GtkEntry
text_mb_dirty	stubs/gtkstub.c	3981;"	struct:GtkEntry
text_size	stubs/gtkstub.c	3981;"	struct:GtkEntry
things	stubs/gtkstub.c	13688;"	struct:GtkWidget
tick	stubs/unixstub.c	/^  long tick;	\/\* (modified) usecs between clock ticks \*\/$/;"	v
tile	stubs/gdkstub.c	6201;"	struct:GdkGCValues
tile	stubs/xlibstub.c	312;"	struct:XGCValues
time	stubs/ansistub.c	/^time_t time(time_t \*tptr)$/;"	f
time	stubs/gdkstub.c	6313;"	struct:GdkTimeCoord
time	stubs/gdkstub.c	6387;"	struct:GdkEventMotion
time	stubs/gdkstub.c	6406;"	struct:GdkEventButton
time	stubs/gdkstub.c	6419;"	struct:GdkEventKey
time	stubs/gdkstub.c	6437;"	struct:GdkEventCrossing
time	stubs/gdkstub.c	6468;"	struct:GdkEventProperty
time	stubs/gdkstub.c	6481;"	struct:GdkEventSelection
time	stubs/gdkstub.c	6492;"	struct:GdkEventProximity
time	stubs/gdkstub.c	6518;"	struct:GdkEventDND
time	stubs/unixstub.c	/^  struct timeval time;	\/\* (read only) \*\/$/;"	t
time	stubs/xlibstub.c	510;"	struct:XTimeCoord
time	stubs/xlibstub.c	539;"	struct:XKeyEvent
time	stubs/xlibstub.c	562;"	struct:XButtonEvent
time	stubs/xlibstub.c	585;"	struct:XMotionEvent
time	stubs/xlibstub.c	609;"	struct:XCrossingEvent
time	stubs/xlibstub.c	847;"	struct:XPropertyEvent
time	stubs/xlibstub.c	858;"	struct:XSelectionClearEvent
time	stubs/xlibstub.c	872;"	struct:XSelectionRequestEvent
time	stubs/xlibstub.c	885;"	struct:XSelectionEvent
time_t	stubs/ansistub.c	/^typedef OPAQUE	time_t;$/;"	t
timeb	stubs/unixstub.c	/^struct timeb$/;"	s
timer	stubs/gtkstub.c	3981;"	struct:GtkEntry
timer	stubs/gtkstub.c	7278;"	struct:GtkMenuItem
timer	stubs/gtkstub.c	7555;"	struct:GtkNotebook
timer	stubs/gtkstub.c	9291;"	struct:GtkRange
timer	stubs/gtkstub.c	10436;"	struct:GtkSpinButton
timer_active	stubs/gtkstub.c	2380;"	struct:GtkColorSelection
timer_calls	stubs/gtkstub.c	10436;"	struct:GtkSpinButton
timer_step	stubs/gtkstub.c	10436;"	struct:GtkSpinButton
timer_tag	stubs/gtkstub.c	2380;"	struct:GtkColorSelection
timer_tag	stubs/gtkstub.c	11828;"	struct:GtkTooltips
timeradd	stubs/unixstub.c	6000;"	d
timeradd	stubs/unixstub.c	6027;"	d
timeradd	stubs/unixstub.c	6059;"	d
timerclear	stubs/unixstub.c	5994;"	d
timercmp	stubs/unixstub.c	5978;"	d
timercmp	stubs/unixstub.c	5995;"	d
timercmp	stubs/unixstub.c	6022;"	d
timercmp	stubs/unixstub.c	6054;"	d
timerisset	stubs/unixstub.c	6051;"	d
timersub	stubs/unixstub.c	5983;"	d
timersub	stubs/unixstub.c	6011;"	d
timersub	stubs/unixstub.c	6038;"	d
timersub	stubs/unixstub.c	6070;"	d
tip_private	stubs/gtkstub.c	11809;"	struct:GtkTooltipsData
tip_text	stubs/gtkstub.c	11809;"	struct:GtkTooltipsData
tip_window	stubs/gtkstub.c	11828;"	struct:GtkTooltips
tips_data_list	stubs/gtkstub.c	11828;"	struct:GtkTooltips
title	stubs/gdkstub.c	6143;"	struct:GdkWindowAttr
title	stubs/gtkstub.c	1679;"	struct:GtkCListColumn
title	stubs/gtkstub.c	14411;"	struct:GtkWindow
title_window	stubs/gtkstub.c	1619;"	struct:GtkCList
tm	stubs/ansistub.c	/^struct tm$/;"	s
tmpfile	stubs/ansistub.c	/^FILE \*tmpfile(void)$/;"	f
tmpnam	stubs/ansistub.c	/^char \*tmpnam(char \*buf)$/;"	f
toggle_button	stubs/gtkstub.c	1265;"	struct:GtkCheckButton
toggle_size	stubs/gtkstub.c	7278;"	struct:GtkMenuItem
toggle_size	stubs/gtkstub.c	7297;"	struct:GtkMenuItemClass
token	stubs/glibstub.c	2298;"	struct:GScanner
tolerance	stubs/unixstub.c	/^  long tolerance;	\/\* clock frequency tolerance (ppm) (read only) \*\/$/;"	v
tolower	stubs/ansistub.c	/^int tolower(int ch)$/;"	f
tooltips	stubs/gtkstub.c	11651;"	struct:GtkToolbar
tooltips	stubs/gtkstub.c	11809;"	struct:GtkTooltipsData
top_attach	stubs/gtkstub.c	11031;"	struct:GtkTableChild
toplevel	stubs/gtkstub.c	7093;"	struct:GtkMenu
torn_off	stubs/gtkstub.c	7093;"	struct:GtkMenu
torn_off	stubs/gtkstub.c	11123;"	struct:GtkTearoffMenuItem
tostruct	stubs/unixstub.c	/^struct tostruct {$/;"	s
toupper	stubs/ansistub.c	/^int toupper(int ch)$/;"	f
transient_parent	stubs/gtkstub.c	14411;"	struct:GtkWindow
translate_data	stubs/gtkstub.c	5746;"	struct:GtkItemFactory
translate_func	stubs/gtkstub.c	5746;"	struct:GtkItemFactory
translate_notify	stubs/gtkstub.c	5746;"	struct:GtkItemFactory
tree_column	stubs/gtkstub.c	2986;"	struct:GtkCTree
tree_indent	stubs/gtkstub.c	2986;"	struct:GtkCTree
tree_owner	stubs/gtkstub.c	11935;"	struct:GtkTree
tree_spacing	stubs/gtkstub.c	2986;"	struct:GtkCTree
trough	stubs/gtkstub.c	9291;"	struct:GtkRange
trough	stubs/gtkstub.c	9320;"	struct:GtkRangeClass
truncate	stubs/unixstub.c	/^int truncate(const char \*file, off_t length)$/;"	f
truncate64	stubs/unixstub.c	/^int truncate64(const char \*file, off64_t length)$/;"	f
ts_x_origin	stubs/gdkstub.c	6201;"	struct:GdkGCValues
ts_x_origin	stubs/xlibstub.c	312;"	struct:XGCValues
ts_y_origin	stubs/gdkstub.c	6201;"	struct:GdkGCValues
ts_y_origin	stubs/xlibstub.c	312;"	struct:XGCValues
ttychars	stubs/unixstub.c	/^struct ttychars {$/;"	s
ttydefchars	stubs/unixstub.c	/^cc_t	ttydefchars\[NCCS\] = {$/;"	v
ttyname	stubs/unixstub.c	/^char \*ttyname(int fd)$/;"	f
ttyname_r	stubs/unixstub.c	/^char \*ttyname_r(int fd, char \*buf, size_t buflen)$/;"	f
twd	stubs/unixstub.c	/^  long twd;$/;"	v
twd	stubs/unixstub.c	/^  unsigned short twd;$/;"	v
type	stubs/gdkstub.c	6125;"	struct:GdkVisual
type	stubs/gdkstub.c	6178;"	struct:GdkImage
type	stubs/gdkstub.c	6240;"	struct:GdkFont
type	stubs/gdkstub.c	6246;"	struct:GdkCursor
type	stubs/gdkstub.c	6341;"	struct:GdkEventAny
type	stubs/gdkstub.c	6351;"	struct:GdkEventExpose
type	stubs/gdkstub.c	6359;"	struct:GdkEventNoExpose
type	stubs/gdkstub.c	6368;"	struct:GdkEventVisibility
type	stubs/gdkstub.c	6387;"	struct:GdkEventMotion
type	stubs/gdkstub.c	6406;"	struct:GdkEventButton
type	stubs/gdkstub.c	6419;"	struct:GdkEventKey
type	stubs/gdkstub.c	6437;"	struct:GdkEventCrossing
type	stubs/gdkstub.c	6446;"	struct:GdkEventFocus
type	stubs/gdkstub.c	6457;"	struct:GdkEventConfigure
type	stubs/gdkstub.c	6468;"	struct:GdkEventProperty
type	stubs/gdkstub.c	6481;"	struct:GdkEventSelection
type	stubs/gdkstub.c	6492;"	struct:GdkEventProximity
type	stubs/gdkstub.c	6507;"	struct:GdkEventClient
type	stubs/gdkstub.c	6518;"	struct:GdkEventDND
type	stubs/gdkstub.c	6539;"	union:GdkEvent
type	stubs/gtkstub.c	397;"	struct:GtkArgInfo
type	stubs/gtkstub.c	1714;"	struct:GtkCellText
type	stubs/gtkstub.c	1729;"	struct:GtkCellPixmap
type	stubs/gtkstub.c	1746;"	struct:GtkCellPixText
type	stubs/gtkstub.c	1760;"	struct:GtkCellWidget
type	stubs/gtkstub.c	1790;"	struct:GtkCell
type	stubs/gtkstub.c	6995;"	struct:GtkMenuFactory
type	stubs/gtkstub.c	7957;"	struct:GtkObjectClass
type	stubs/gtkstub.c	8711;"	struct:GtkPreview
type	stubs/gtkstub.c	11631;"	struct:GtkToolbarChild
type	stubs/gtkstub.c	12699;"	struct:GtkTypeClass
type	stubs/gtkstub.c	12753;"	struct:GtkArg
type	stubs/gtkstub.c	12898;"	struct:GtkTypeQuery
type	stubs/gtkstub.c	13617;"	struct:GtkSelectionData
type	stubs/gtkstub.c	14411;"	struct:GtkWindow
type	stubs/xftstub.c	34;"	struct:XRenderPictFormat
type	stubs/xftstub.c	389;"	struct:XftValue
type	stubs/xlibstub.c	539;"	struct:XKeyEvent
type	stubs/xlibstub.c	562;"	struct:XButtonEvent
type	stubs/xlibstub.c	585;"	struct:XMotionEvent
type	stubs/xlibstub.c	609;"	struct:XCrossingEvent
type	stubs/xlibstub.c	629;"	struct:XFocusChangeEvent
type	stubs/xlibstub.c	645;"	struct:XKeymapEvent
type	stubs/xlibstub.c	657;"	struct:XExposeEvent
type	stubs/xlibstub.c	671;"	struct:XGraphicsExposeEvent
type	stubs/xlibstub.c	682;"	struct:XNoExposeEvent
type	stubs/xlibstub.c	692;"	struct:XVisibilityEvent
type	stubs/xlibstub.c	706;"	struct:XCreateWindowEvent
type	stubs/xlibstub.c	716;"	struct:XDestroyWindowEvent
type	stubs/xlibstub.c	727;"	struct:XUnmapEvent
type	stubs/xlibstub.c	738;"	struct:XMapEvent
type	stubs/xlibstub.c	748;"	struct:XMapRequestEvent
type	stubs/xlibstub.c	761;"	struct:XReparentEvent
type	stubs/xlibstub.c	776;"	struct:XConfigureEvent
type	stubs/xlibstub.c	787;"	struct:XGravityEvent
type	stubs/xlibstub.c	797;"	struct:XResizeRequestEvent
type	stubs/xlibstub.c	813;"	struct:XConfigureRequestEvent
type	stubs/xlibstub.c	824;"	struct:XCirculateEvent
type	stubs/xlibstub.c	835;"	struct:XCirculateRequestEvent
type	stubs/xlibstub.c	847;"	struct:XPropertyEvent
type	stubs/xlibstub.c	858;"	struct:XSelectionClearEvent
type	stubs/xlibstub.c	872;"	struct:XSelectionRequestEvent
type	stubs/xlibstub.c	885;"	struct:XSelectionEvent
type	stubs/xlibstub.c	897;"	struct:XColormapEvent
type	stubs/xlibstub.c	913;"	struct:XClientMessageEvent
type	stubs/xlibstub.c	926;"	struct:XMappingEvent
type	stubs/xlibstub.c	937;"	struct:XErrorEvent
type	stubs/xlibstub.c	946;"	struct:XAnyEvent
type	stubs/xlibstub.c	987;"	union:XEvent
type	stubs/xlibstub.c	1245;"	struct:XIMStatusDrawCallbackStruct
type_bitmaps_button	stubs/gtkstub.c	4847;"	struct:GtkFontSelection
type_name	stubs/gtkstub.c	12888;"	struct:GtkTypeInfo
type_name	stubs/gtkstub.c	12898;"	struct:GtkTypeQuery
type_scalable_button	stubs/gtkstub.c	4847;"	struct:GtkFontSelection
type_scaled_bitmaps_button	stubs/gtkstub.c	4847;"	struct:GtkFontSelection
u_ar0	stubs/unixstub.c	/^  struct user_regs_struct\*	u_ar0;$/;"	t
u_comm	stubs/unixstub.c	/^  char				u_comm \[32\];$/;"	v
u_debugreg	stubs/unixstub.c	/^  int				u_debugreg \[8\];$/;"	v
u_dsize	stubs/unixstub.c	/^  unsigned long		u_dsize;$/;"	v
u_fpstate	stubs/unixstub.c	/^  struct user_fpregs_struct\*	u_fpstate;$/;"	t
u_fpvalid	stubs/unixstub.c	/^  int				u_fpvalid;$/;"	v
u_ssize	stubs/unixstub.c	/^  unsigned long		u_ssize;$/;"	v
u_tsize	stubs/unixstub.c	/^  unsigned long		u_tsize;$/;"	v
ualarm	stubs/unixstub.c	/^__useconds_t ualarm(__useconds_t value, __useconds_t interval)$/;"	f
uc_flags	stubs/unixstub.c	6771
uc_flags	stubs/unixstub.c	6862;"	struct:ucontext_t
uc_flags	stubs/unixstub.c	6874;"	struct:ucontext_t
uc_flags	stubs/unixstub.c	6886;"	struct:ucontext_t
uc_flags	stubs/unixstub.c	6898;"	struct:ucontext_t
uc_flags	stubs/unixstub.c	6910;"	struct:ucontext_t
uc_flags	stubs/unixstub.c	6922;"	struct:ucontext_t
uc_flags	stubs/unixstub.c	6934;"	struct:ucontext_t
uc_link	stubs/unixstub.c	6771
uc_link	stubs/unixstub.c	6862;"	struct:ucontext_t
uc_link	stubs/unixstub.c	6874;"	struct:ucontext_t
uc_link	stubs/unixstub.c	6886;"	struct:ucontext_t
uc_link	stubs/unixstub.c	6898;"	struct:ucontext_t
uc_link	stubs/unixstub.c	6910;"	struct:ucontext_t
uc_link	stubs/unixstub.c	6922;"	struct:ucontext_t
uc_link	stubs/unixstub.c	6934;"	struct:ucontext_t
uc_mcontext	stubs/unixstub.c	6771
uc_mcontext	stubs/unixstub.c	6862;"	struct:ucontext_t
uc_mcontext	stubs/unixstub.c	6874;"	struct:ucontext_t
uc_mcontext	stubs/unixstub.c	6886;"	struct:ucontext_t
uc_mcontext	stubs/unixstub.c	6898;"	struct:ucontext_t
uc_mcontext	stubs/unixstub.c	6910;"	struct:ucontext_t
uc_mcontext	stubs/unixstub.c	6922;"	struct:ucontext_t
uc_mcontext	stubs/unixstub.c	6934;"	struct:ucontext_t
uc_sigmask	stubs/unixstub.c	6771
uc_sigmask	stubs/unixstub.c	6862;"	struct:ucontext_t
uc_sigmask	stubs/unixstub.c	6874;"	struct:ucontext_t
uc_sigmask	stubs/unixstub.c	6886;"	struct:ucontext_t
uc_sigmask	stubs/unixstub.c	6898;"	struct:ucontext_t
uc_sigmask	stubs/unixstub.c	6910;"	struct:ucontext_t
uc_sigmask	stubs/unixstub.c	6922;"	struct:ucontext_t
uc_sigmask	stubs/unixstub.c	6934;"	struct:ucontext_t
uc_stack	stubs/unixstub.c	6771
uc_stack	stubs/unixstub.c	6862;"	struct:ucontext_t
uc_stack	stubs/unixstub.c	6874;"	struct:ucontext_t
uc_stack	stubs/unixstub.c	6886;"	struct:ucontext_t
uc_stack	stubs/unixstub.c	6898;"	struct:ucontext_t
uc_stack	stubs/unixstub.c	6910;"	struct:ucontext_t
uc_stack	stubs/unixstub.c	6922;"	struct:ucontext_t
uc_stack	stubs/unixstub.c	6934;"	struct:ucontext_t
ucontext	stubs/unixstub.c	/^typedef struct ucontext$/;"	s
ucontext	stubs/unixstub.c	/^typedef struct ucontext$/;"	s
ucontext	stubs/unixstub.c	/^typedef struct ucontext$/;"	s
ucontext	stubs/unixstub.c	/^typedef struct ucontext$/;"	s
ucontext	stubs/unixstub.c	/^typedef struct ucontext$/;"	s
ucontext	stubs/unixstub.c	/^typedef struct ucontext$/;"	s
ucontext	stubs/unixstub.c	/^typedef struct ucontext$/;"	s
ucontext_t	stubs/unixstub.c	/^  } ucontext_t;$/;"	v
ucontext_t	stubs/unixstub.c	/^  } ucontext_t;$/;"	t
ucontext_t	stubs/unixstub.c	/^  } ucontext_t;$/;"	t
ucontext_t	stubs/unixstub.c	/^  } ucontext_t;$/;"	t
ucontext_t	stubs/unixstub.c	/^  } ucontext_t;$/;"	t
ucontext_t	stubs/unixstub.c	/^  } ucontext_t;$/;"	t
ucontext_t	stubs/unixstub.c	/^  } ucontext_t;$/;"	t
ucontext_t	stubs/unixstub.c	/^  } ucontext_t;$/;"	t
uid_t	stubs/unixstub.c	/^typedef __uid_t uid_t;$/;"	t
uid_t	stubs/unixstub.c	/^typedef __uid_t uid_t;$/;"	t
uid_t	stubs/unixstub.c	/^typedef __uid_t uid_t;$/;"	t
undo_anchor	stubs/gtkstub.c	1619;"	struct:GtkCList
undo_focus_child	stubs/gtkstub.c	6281;"	struct:GtkList
undo_selection	stubs/gtkstub.c	1619;"	struct:GtkCList
undo_selection	stubs/gtkstub.c	6281;"	struct:GtkList
undo_unselection	stubs/gtkstub.c	1619;"	struct:GtkCList
undo_unselection	stubs/gtkstub.c	6281;"	struct:GtkList
ungetc	stubs/ansistub.c	/^int ungetc(int ch, FILE \*fp)$/;"	f
unlink	stubs/unixstub.c	/^int unlink(const char \*name)$/;"	f
update_policy	stubs/gtkstub.c	10436;"	struct:GtkSpinButton
upper	stubs/gtkstub.c	281;"	struct:GtkAdjustment
upper	stubs/gtkstub.c	9649;"	struct:GtkRuler
use_arrows	stubs/gtkstub.c	2500;"	struct:GtkCombo
use_arrows_always	stubs/gtkstub.c	2500;"	struct:GtkCombo
use_default	stubs/gtkstub.c	8366;"	struct:GtkPackerChild
use_opacity	stubs/gtkstub.c	2380;"	struct:GtkColorSelection
use_uposition	stubs/gtkstub.c	14411;"	struct:GtkWindow
use_wchar	stubs/gtkstub.c	3981;"	struct:GtkEntry
useconds_t	stubs/unixstub.c	/^typedef __useconds_t useconds_t;$/;"	t
user_data	stubs/gdkstub.c	6149;"	struct:GdkWindow
user_data	stubs/gdkstub.c	6545;"	struct:GdkRegion
user_data	stubs/glibstub.c	2298;"	struct:GScanner
user_data	stubs/gtkstub.c	716;"	struct:GtkPatternSpec
usleep	stubs/unixstub.c	/^int usleep(__useconds_t value)$/;"	f
utsname	stubs/unixstub.c	/^struct utsname$/;"	s
v_binary	stubs/glibstub.c	2216;"	union:GTokenValue
v_char	stubs/glibstub.c	2216;"	union:GTokenValue
v_comment	stubs/glibstub.c	2216;"	union:GTokenValue
v_error	stubs/glibstub.c	2216;"	union:GTokenValue
v_float	stubs/glibstub.c	2216;"	union:GTokenValue
v_hex	stubs/glibstub.c	2216;"	union:GTokenValue
v_identifier	stubs/glibstub.c	2216;"	union:GTokenValue
v_int	stubs/glibstub.c	2216;"	union:GTokenValue
v_octal	stubs/glibstub.c	2216;"	union:GTokenValue
v_string	stubs/glibstub.c	2216;"	union:GTokenValue
v_symbol	stubs/glibstub.c	2216;"	union:GTokenValue
va_arg	stubs/ansistub.c	/^type va_arg(va_list arg_ptr, type)$/;"	f
va_end	stubs/ansistub.c	/^void va_end(va_list arg_ptr)$/;"	f
va_start	stubs/ansistub.c	/^void va_start(va_list first_arg, last_fixed_arg)$/;"	f
vadj	stubs/gtkstub.c	11279;"	struct:GtkText
vadjustment	stubs/gtkstub.c	1619;"	struct:GtkCList
vadjustment	stubs/gtkstub.c	6161;"	struct:GtkLayout
vadjustment	stubs/gtkstub.c	13175;"	struct:GtkViewport
value	stubs/glibstub.c	601;"	struct:GDebugKey
value	stubs/glibstub.c	2298;"	struct:GScanner
value	stubs/gtkstub.c	281;"	struct:GtkAdjustment
value	stubs/gtkstub.c	12907;"	struct:GtkEnumValue
value	stubs/xftstub.c	395;"	struct:XftValueList
value	stubs/xlibstub.c	1307;"	struct:XTextProperty
value	stubs/xpmstub.c	17;"	struct:XpmColorSymbol
value_area	stubs/gtkstub.c	2380;"	struct:GtkColorSelection
value_buf	stubs/gtkstub.c	2380;"	struct:GtkColorSelection
value_gc	stubs/gtkstub.c	2380;"	struct:GtkColorSelection
value_in_list	stubs/gtkstub.c	2500;"	struct:GtkCombo
value_mask	stubs/xlibstub.c	813;"	struct:XConfigureRequestEvent
value_name	stubs/gtkstub.c	12907;"	struct:GtkEnumValue
value_nick	stubs/gtkstub.c	12907;"	struct:GtkEnumValue
value_pos	stubs/gtkstub.c	9726;"	struct:GtkScale
value_spacing	stubs/gtkstub.c	9738;"	struct:GtkScaleClass
valuemask	stubs/xpmstub.c	52;"	struct:XpmInfo
valuemask	stubs/xpmstub.c	118;"	struct:XpmAttributes
values	stubs/gtkstub.c	2380;"	struct:GtkColorSelection
values	stubs/gtkstub.c	12753;"	struct:GtkArg
values	stubs/xftstub.c	401;"	struct:XftPatternElt
vbox	stubs/gtkstub.c	2380;"	struct:GtkColorSelection
vbox	stubs/gtkstub.c	3577;"	struct:GtkDialog
vbox	stubs/gtkstub.c	5118;"	struct:GtkGammaCurve
vertical	stubs/gtkstub.c	1714;"	struct:GtkCellText
vertical	stubs/gtkstub.c	1729;"	struct:GtkCellPixmap
vertical	stubs/gtkstub.c	1746;"	struct:GtkCellPixText
vertical	stubs/gtkstub.c	1760;"	struct:GtkCellWidget
vertical	stubs/gtkstub.c	1790;"	struct:GtkCell
vfprintf	stubs/ansistub.c	/^int vfprintf(FILE \*fp, const char \*format, va_list arg_ptr)$/;"	f
vhangup	stubs/unixstub.c	/^int vhangup(void)$/;"	f
view_line	stubs/gtkstub.c	11935;"	struct:GtkTree
view_mode	stubs/gtkstub.c	11935;"	struct:GtkTree
view_window	stubs/gtkstub.c	13175;"	struct:GtkViewport
visibility	stubs/gdkstub.c	6539;"	union:GdkEvent
visibility	stubs/gtkstub.c	6161;"	struct:GtkLayout
visible	stubs/gtkstub.c	1679;"	struct:GtkCListColumn
visible	stubs/gtkstub.c	3824;"	struct:GtkEditable
visible	stubs/gtkstub.c	3981;"	struct:GtkEntry
visual	stubs/gdkstub.c	6143;"	struct:GdkWindowAttr
visual	stubs/gdkstub.c	6178;"	struct:GdkImage
visual	stubs/gdkstub.c	6281;"	struct:GdkColorContext
visual	stubs/gtkstub.c	8723;"	struct:GtkPreviewInfo
visual	stubs/xftstub.c	54;"	struct:XRenderVisual
visual	stubs/xftstub.c	80;"	struct:XRenderInfo
visual	stubs/xlibstub.c	408;"	struct:XWindowAttributes
visual	stubs/xlibstub.c	1057;"	union:XEDataObject
visual	stubs/xlibstub.c	1348;"	struct:XVisualInfo
visual	stubs/xpmstub.c	118;"	struct:XpmAttributes
visualid	stubs/xlibstub.c	328;"	struct:Visual
visualid	stubs/xlibstub.c	1348;"	struct:XVisualInfo
visualid	stubs/xlibstub.c	1362;"	struct:XStandardColormap
visuals	stubs/xftstub.c	61;"	struct:XRenderDepth
visuals	stubs/xlibstub.c	335;"	struct:Depth
voffset	stubs/gtkstub.c	1619;"	struct:GtkCList
void	stubs/gtkstub.c	290;"	struct:GtkAdjustmentClass
void	stubs/gtkstub.c	290;"	struct:GtkAdjustmentClass
void	stubs/gtkstub.c	1041;"	struct:GtkButtonClass
void	stubs/gtkstub.c	1041;"	struct:GtkButtonClass
void	stubs/gtkstub.c	1041;"	struct:GtkButtonClass
void	stubs/gtkstub.c	1041;"	struct:GtkButtonClass
void	stubs/gtkstub.c	1041;"	struct:GtkButtonClass
void	stubs/gtkstub.c	1175;"	struct:GtkCalendarClass
void	stubs/gtkstub.c	1175;"	struct:GtkCalendarClass
void	stubs/gtkstub.c	1175;"	struct:GtkCalendarClass
void	stubs/gtkstub.c	1175;"	struct:GtkCalendarClass
void	stubs/gtkstub.c	1175;"	struct:GtkCalendarClass
void	stubs/gtkstub.c	1175;"	struct:GtkCalendarClass
void	stubs/gtkstub.c	1175;"	struct:GtkCalendarClass
void	stubs/gtkstub.c	1277;"	struct:GtkCheckButtonClass
void	stubs/gtkstub.c	1340;"	struct:GtkCheckMenuItemClass
void	stubs/gtkstub.c	1340;"	struct:GtkCheckMenuItemClass
void	stubs/gtkstub.c	1657;"	struct:GtkCListClass
void	stubs/gtkstub.c	1657;"	struct:GtkCListClass
void	stubs/gtkstub.c	1657;"	struct:GtkCListClass
void	stubs/gtkstub.c	1657;"	struct:GtkCListClass
void	stubs/gtkstub.c	1657;"	struct:GtkCListClass
void	stubs/gtkstub.c	1657;"	struct:GtkCListClass
void	stubs/gtkstub.c	1657;"	struct:GtkCListClass
void	stubs/gtkstub.c	1657;"	struct:GtkCListClass
void	stubs/gtkstub.c	1657;"	struct:GtkCListClass
void	stubs/gtkstub.c	1657;"	struct:GtkCListClass
void	stubs/gtkstub.c	1657;"	struct:GtkCListClass
void	stubs/gtkstub.c	1657;"	struct:GtkCListClass
void	stubs/gtkstub.c	1657;"	struct:GtkCListClass
void	stubs/gtkstub.c	1657;"	struct:GtkCListClass
void	stubs/gtkstub.c	1657;"	struct:GtkCListClass
void	stubs/gtkstub.c	1657;"	struct:GtkCListClass
void	stubs/gtkstub.c	1657;"	struct:GtkCListClass
void	stubs/gtkstub.c	1657;"	struct:GtkCListClass
void	stubs/gtkstub.c	1657;"	struct:GtkCListClass
void	stubs/gtkstub.c	1657;"	struct:GtkCListClass
void	stubs/gtkstub.c	1657;"	struct:GtkCListClass
void	stubs/gtkstub.c	1657;"	struct:GtkCListClass
void	stubs/gtkstub.c	1657;"	struct:GtkCListClass
void	stubs/gtkstub.c	1657;"	struct:GtkCListClass
void	stubs/gtkstub.c	1657;"	struct:GtkCListClass
void	stubs/gtkstub.c	1657;"	struct:GtkCListClass
void	stubs/gtkstub.c	1657;"	struct:GtkCListClass
void	stubs/gtkstub.c	2389;"	struct:GtkColorSelectionClass
void	stubs/gtkstub.c	2663;"	struct:GtkContainerClass
void	stubs/gtkstub.c	2663;"	struct:GtkContainerClass
void	stubs/gtkstub.c	2663;"	struct:GtkContainerClass
void	stubs/gtkstub.c	2663;"	struct:GtkContainerClass
void	stubs/gtkstub.c	2663;"	struct:GtkContainerClass
void	stubs/gtkstub.c	2663;"	struct:GtkContainerClass
void	stubs/gtkstub.c	2663;"	struct:GtkContainerClass
void	stubs/gtkstub.c	3000;"	struct:GtkCTreeClass
void	stubs/gtkstub.c	3000;"	struct:GtkCTreeClass
void	stubs/gtkstub.c	3000;"	struct:GtkCTreeClass
void	stubs/gtkstub.c	3000;"	struct:GtkCTreeClass
void	stubs/gtkstub.c	3000;"	struct:GtkCTreeClass
void	stubs/gtkstub.c	3000;"	struct:GtkCTreeClass
void	stubs/gtkstub.c	3457;"	struct:GtkCurveClass
void	stubs/gtkstub.c	3533;"	struct:GtkDataClass
void	stubs/gtkstub.c	3861;"	struct:GtkEditableClass
void	stubs/gtkstub.c	3861;"	struct:GtkEditableClass
void	stubs/gtkstub.c	3861;"	struct:GtkEditableClass
void	stubs/gtkstub.c	3861;"	struct:GtkEditableClass
void	stubs/gtkstub.c	3861;"	struct:GtkEditableClass
void	stubs/gtkstub.c	3861;"	struct:GtkEditableClass
void	stubs/gtkstub.c	3861;"	struct:GtkEditableClass
void	stubs/gtkstub.c	3861;"	struct:GtkEditableClass
void	stubs/gtkstub.c	3861;"	struct:GtkEditableClass
void	stubs/gtkstub.c	3861;"	struct:GtkEditableClass
void	stubs/gtkstub.c	3861;"	struct:GtkEditableClass
void	stubs/gtkstub.c	3861;"	struct:GtkEditableClass
void	stubs/gtkstub.c	3861;"	struct:GtkEditableClass
void	stubs/gtkstub.c	3861;"	struct:GtkEditableClass
void	stubs/gtkstub.c	3861;"	struct:GtkEditableClass
void	stubs/gtkstub.c	3861;"	struct:GtkEditableClass
void	stubs/gtkstub.c	3861;"	struct:GtkEditableClass
void	stubs/gtkstub.c	3861;"	struct:GtkEditableClass
void	stubs/gtkstub.c	3861;"	struct:GtkEditableClass
void	stubs/gtkstub.c	5199;"	struct:GtkHandleBoxClass
void	stubs/gtkstub.c	5199;"	struct:GtkHandleBoxClass
void	stubs/gtkstub.c	5637;"	struct:GtkInputDialogClass
void	stubs/gtkstub.c	5637;"	struct:GtkInputDialogClass
void	stubs/gtkstub.c	6008;"	struct:GtkItemClass
void	stubs/gtkstub.c	6008;"	struct:GtkItemClass
void	stubs/gtkstub.c	6008;"	struct:GtkItemClass
void	stubs/gtkstub.c	6170;"	struct:GtkLayoutClass
void	stubs/gtkstub.c	6292;"	struct:GtkListClass
void	stubs/gtkstub.c	6292;"	struct:GtkListClass
void	stubs/gtkstub.c	6292;"	struct:GtkListClass
void	stubs/gtkstub.c	6468;"	struct:GtkListItemClass
void	stubs/gtkstub.c	6468;"	struct:GtkListItemClass
void	stubs/gtkstub.c	6468;"	struct:GtkListItemClass
void	stubs/gtkstub.c	6468;"	struct:GtkListItemClass
void	stubs/gtkstub.c	6468;"	struct:GtkListItemClass
void	stubs/gtkstub.c	6468;"	struct:GtkListItemClass
void	stubs/gtkstub.c	6468;"	struct:GtkListItemClass
void	stubs/gtkstub.c	6468;"	struct:GtkListItemClass
void	stubs/gtkstub.c	6468;"	struct:GtkListItemClass
void	stubs/gtkstub.c	6468;"	struct:GtkListItemClass
void	stubs/gtkstub.c	7297;"	struct:GtkMenuItemClass
void	stubs/gtkstub.c	7297;"	struct:GtkMenuItemClass
void	stubs/gtkstub.c	7407;"	struct:GtkMenuShellClass
void	stubs/gtkstub.c	7407;"	struct:GtkMenuShellClass
void	stubs/gtkstub.c	7407;"	struct:GtkMenuShellClass
void	stubs/gtkstub.c	7407;"	struct:GtkMenuShellClass
void	stubs/gtkstub.c	7407;"	struct:GtkMenuShellClass
void	stubs/gtkstub.c	7564;"	struct:GtkNotebookClass
void	stubs/gtkstub.c	7957;"	struct:GtkObjectClass
void	stubs/gtkstub.c	7957;"	struct:GtkObjectClass
void	stubs/gtkstub.c	7957;"	struct:GtkObjectClass
void	stubs/gtkstub.c	7957;"	struct:GtkObjectClass
void	stubs/gtkstub.c	7957;"	struct:GtkObjectClass
void	stubs/gtkstub.c	9040;"	struct:GtkProgressClass
void	stubs/gtkstub.c	9040;"	struct:GtkProgressClass
void	stubs/gtkstub.c	9040;"	struct:GtkProgressClass
void	stubs/gtkstub.c	9320;"	struct:GtkRangeClass
void	stubs/gtkstub.c	9320;"	struct:GtkRangeClass
void	stubs/gtkstub.c	9320;"	struct:GtkRangeClass
void	stubs/gtkstub.c	9320;"	struct:GtkRangeClass
void	stubs/gtkstub.c	9320;"	struct:GtkRangeClass
void	stubs/gtkstub.c	9320;"	struct:GtkRangeClass
void	stubs/gtkstub.c	9320;"	struct:GtkRangeClass
void	stubs/gtkstub.c	9320;"	struct:GtkRangeClass
void	stubs/gtkstub.c	9659;"	struct:GtkRulerClass
void	stubs/gtkstub.c	9659;"	struct:GtkRulerClass
void	stubs/gtkstub.c	9738;"	struct:GtkScaleClass
void	stubs/gtkstub.c	10577;"	struct:GtkStatusbarClass
void	stubs/gtkstub.c	10577;"	struct:GtkStatusbarClass
void	stubs/gtkstub.c	10704;"	struct:GtkStyleClass
void	stubs/gtkstub.c	10704;"	struct:GtkStyleClass
void	stubs/gtkstub.c	10704;"	struct:GtkStyleClass
void	stubs/gtkstub.c	10704;"	struct:GtkStyleClass
void	stubs/gtkstub.c	10704;"	struct:GtkStyleClass
void	stubs/gtkstub.c	10704;"	struct:GtkStyleClass
void	stubs/gtkstub.c	10704;"	struct:GtkStyleClass
void	stubs/gtkstub.c	10704;"	struct:GtkStyleClass
void	stubs/gtkstub.c	10704;"	struct:GtkStyleClass
void	stubs/gtkstub.c	10704;"	struct:GtkStyleClass
void	stubs/gtkstub.c	10704;"	struct:GtkStyleClass
void	stubs/gtkstub.c	10704;"	struct:GtkStyleClass
void	stubs/gtkstub.c	10704;"	struct:GtkStyleClass
void	stubs/gtkstub.c	10704;"	struct:GtkStyleClass
void	stubs/gtkstub.c	10704;"	struct:GtkStyleClass
void	stubs/gtkstub.c	10704;"	struct:GtkStyleClass
void	stubs/gtkstub.c	10704;"	struct:GtkStyleClass
void	stubs/gtkstub.c	10704;"	struct:GtkStyleClass
void	stubs/gtkstub.c	10704;"	struct:GtkStyleClass
void	stubs/gtkstub.c	10704;"	struct:GtkStyleClass
void	stubs/gtkstub.c	10704;"	struct:GtkStyleClass
void	stubs/gtkstub.c	11288;"	struct:GtkTextClass
void	stubs/gtkstub.c	11414;"	struct:GtkThemeEngine
void	stubs/gtkstub.c	11414;"	struct:GtkThemeEngine
void	stubs/gtkstub.c	11414;"	struct:GtkThemeEngine
void	stubs/gtkstub.c	11414;"	struct:GtkThemeEngine
void	stubs/gtkstub.c	11414;"	struct:GtkThemeEngine
void	stubs/gtkstub.c	11414;"	struct:GtkThemeEngine
void	stubs/gtkstub.c	11414;"	struct:GtkThemeEngine
void	stubs/gtkstub.c	11414;"	struct:GtkThemeEngine
void	stubs/gtkstub.c	11549;"	struct:GtkToggleButtonClass
void	stubs/gtkstub.c	11661;"	struct:GtkToolbarClass
void	stubs/gtkstub.c	11661;"	struct:GtkToolbarClass
void	stubs/gtkstub.c	11946;"	struct:GtkTreeClass
void	stubs/gtkstub.c	11946;"	struct:GtkTreeClass
void	stubs/gtkstub.c	11946;"	struct:GtkTreeClass
void	stubs/gtkstub.c	12077;"	struct:GtkTreeItemClass
void	stubs/gtkstub.c	12077;"	struct:GtkTreeItemClass
void	stubs/gtkstub.c	13184;"	struct:GtkViewportClass
void	stubs/gtkstub.c	13791;"	struct:GtkWidgetClass
void	stubs/gtkstub.c	13791;"	struct:GtkWidgetClass
void	stubs/gtkstub.c	13791;"	struct:GtkWidgetClass
void	stubs/gtkstub.c	13791;"	struct:GtkWidgetClass
void	stubs/gtkstub.c	13791;"	struct:GtkWidgetClass
void	stubs/gtkstub.c	13791;"	struct:GtkWidgetClass
void	stubs/gtkstub.c	13791;"	struct:GtkWidgetClass
void	stubs/gtkstub.c	13791;"	struct:GtkWidgetClass
void	stubs/gtkstub.c	13791;"	struct:GtkWidgetClass
void	stubs/gtkstub.c	13791;"	struct:GtkWidgetClass
void	stubs/gtkstub.c	13791;"	struct:GtkWidgetClass
void	stubs/gtkstub.c	13791;"	struct:GtkWidgetClass
void	stubs/gtkstub.c	13791;"	struct:GtkWidgetClass
void	stubs/gtkstub.c	13791;"	struct:GtkWidgetClass
void	stubs/gtkstub.c	13791;"	struct:GtkWidgetClass
void	stubs/gtkstub.c	13791;"	struct:GtkWidgetClass
void	stubs/gtkstub.c	13791;"	struct:GtkWidgetClass
void	stubs/gtkstub.c	13791;"	struct:GtkWidgetClass
void	stubs/gtkstub.c	13791;"	struct:GtkWidgetClass
void	stubs/gtkstub.c	13791;"	struct:GtkWidgetClass
void	stubs/gtkstub.c	13791;"	struct:GtkWidgetClass
void	stubs/gtkstub.c	13791;"	struct:GtkWidgetClass
void	stubs/gtkstub.c	13791;"	struct:GtkWidgetClass
void	stubs/gtkstub.c	13791;"	struct:GtkWidgetClass
void	stubs/gtkstub.c	13791;"	struct:GtkWidgetClass
void	stubs/gtkstub.c	13791;"	struct:GtkWidgetClass
void	stubs/gtkstub.c	13791;"	struct:GtkWidgetClass
void	stubs/gtkstub.c	14420;"	struct:GtkWindowClass
vprintf	stubs/ansistub.c	/^int vprintf(const char \*format, va_list arg_ptr)$/;"	f
vscrollbar	stubs/gtkstub.c	9842;"	struct:GtkScrolledWindow
vscrollbar_policy	stubs/gtkstub.c	9842;"	struct:GtkScrolledWindow
vscrollbar_visible	stubs/gtkstub.c	9842;"	struct:GtkScrolledWindow
vsprintf	stubs/ansistub.c	/^int vsprintf(char \*buffer, const char \*format, va_list arg_ptr)$/;"	f
vtimer	stubs/gtkstub.c	1619;"	struct:GtkCList
vtimer	stubs/gtkstub.c	6281;"	struct:GtkList
wchar_t	stubs/ansistub.c	/^typedef OPAQUE	wchar_t;$/;"	t
wclass	stubs/gdkstub.c	6143;"	struct:GdkWindowAttr
wctomb	stubs/ansistub.c	/^int wctomb(char\* m_byte, wchar_t wide_char)$/;"	f
weight	stubs/unixstub.c	1871;"	struct:snd_mixer_weight_entry_t
wheel_area	stubs/gtkstub.c	2380;"	struct:GtkColorSelection
wheel_buf	stubs/gtkstub.c	2380;"	struct:GtkColorSelection
wheel_gc	stubs/gtkstub.c	2380;"	struct:GtkColorSelection
white	stubs/gtkstub.c	10674;"	struct:GtkStyle
white_gc	stubs/gtkstub.c	10674;"	struct:GtkStyle
white_pixel	stubs/xlibstub.c	356;"	struct:Screen
widget	stubs/gtkstub.c	940;"	struct:GtkBoxChild
widget	stubs/gtkstub.c	1158;"	struct:GtkCalendar
widget	stubs/gtkstub.c	1760;"	struct:GtkCellWidget
widget	stubs/gtkstub.c	2639;"	struct:GtkContainer
widget	stubs/gtkstub.c	3761;"	struct:GtkDrawingArea
widget	stubs/gtkstub.c	3824;"	struct:GtkEditable
widget	stubs/gtkstub.c	4683;"	struct:GtkFixedChild
widget	stubs/gtkstub.c	5746;"	struct:GtkItemFactory
widget	stubs/gtkstub.c	6976;"	struct:GtkMenuEntry
widget	stubs/gtkstub.c	6984;"	struct:GtkMenuPath
widget	stubs/gtkstub.c	6995;"	struct:GtkMenuFactory
widget	stubs/gtkstub.c	7478;"	struct:GtkMisc
widget	stubs/gtkstub.c	8366;"	struct:GtkPackerChild
widget	stubs/gtkstub.c	8711;"	struct:GtkPreview
widget	stubs/gtkstub.c	9029;"	struct:GtkProgress
widget	stubs/gtkstub.c	9291;"	struct:GtkRange
widget	stubs/gtkstub.c	9649;"	struct:GtkRuler
widget	stubs/gtkstub.c	10061;"	struct:GtkSeparator
widget	stubs/gtkstub.c	11031;"	struct:GtkTableChild
widget	stubs/gtkstub.c	11631;"	struct:GtkToolbarChild
widget	stubs/gtkstub.c	11809;"	struct:GtkTooltipsData
widget_class_pspecs	stubs/gtkstub.c	759;"	struct:GtkBindingSet
widget_path_pspecs	stubs/gtkstub.c	759;"	struct:GtkBindingSet
widgets	stubs/gtkstub.c	5799;"	struct:GtkItemFactoryItem
width	stubs/gdkstub.c	6143;"	struct:GdkWindowAttr
width	stubs/gdkstub.c	6178;"	struct:GdkImage
width	stubs/gdkstub.c	6223;"	struct:GdkRectangle
width	stubs/gdkstub.c	6457;"	struct:GdkEventConfigure
width	stubs/gtkstub.c	1679;"	struct:GtkCListColumn
width	stubs/gtkstub.c	6161;"	struct:GtkLayout
width	stubs/gtkstub.c	8248;"	struct:GtkOptionMenu
width	stubs/gtkstub.c	11809;"	struct:GtkTooltipsData
width	stubs/gtkstub.c	13582;"	struct:GtkRequisition
width	stubs/gtkstub.c	13596;"	struct:GtkAllocation
width	stubs/gtkstub.c	13801;"	struct:GtkWidgetAuxInfo
width	stubs/xftstub.c	115;"	struct:XGlyphInfo
width	stubs/xlibstub.c	356;"	struct:Screen
width	stubs/xlibstub.c	408;"	struct:XWindowAttributes
width	stubs/xlibstub.c	442;"	struct:XImage
width	stubs/xlibstub.c	451;"	struct:XWindowChanges
width	stubs/xlibstub.c	475;"	struct:XRectangle
width	stubs/xlibstub.c	482;"	struct:XArc
width	stubs/xlibstub.c	657;"	struct:XExposeEvent
width	stubs/xlibstub.c	671;"	struct:XGraphicsExposeEvent
width	stubs/xlibstub.c	706;"	struct:XCreateWindowEvent
width	stubs/xlibstub.c	776;"	struct:XConfigureEvent
width	stubs/xlibstub.c	797;"	struct:XResizeRequestEvent
width	stubs/xlibstub.c	813;"	struct:XConfigureRequestEvent
width	stubs/xlibstub.c	998;"	struct:XCharStruct
width	stubs/xlibstub.c	1286;"	struct:XSizeHints
width	stubs/xpmstub.c	41;"	struct:XpmImage
width	stubs/xpmstub.c	118;"	struct:XpmAttributes
width_inc	stubs/gdkstub.c	6164;"	struct:GdkGeometry
width_inc	stubs/xlibstub.c	1286;"	struct:XSizeHints
width_inc	stubs/xlibstub.c	1322;"	struct:XIconSize
width_set	stubs/gtkstub.c	1679;"	struct:GtkCListColumn
win_gravity	stubs/xlibstub.c	383;"	struct:XSetWindowAttributes
win_gravity	stubs/xlibstub.c	408;"	struct:XWindowAttributes
window	stubs/gdkstub.c	6341;"	struct:GdkEventAny
window	stubs/gdkstub.c	6351;"	struct:GdkEventExpose
window	stubs/gdkstub.c	6359;"	struct:GdkEventNoExpose
window	stubs/gdkstub.c	6368;"	struct:GdkEventVisibility
window	stubs/gdkstub.c	6387;"	struct:GdkEventMotion
window	stubs/gdkstub.c	6406;"	struct:GdkEventButton
window	stubs/gdkstub.c	6419;"	struct:GdkEventKey
window	stubs/gdkstub.c	6437;"	struct:GdkEventCrossing
window	stubs/gdkstub.c	6446;"	struct:GdkEventFocus
window	stubs/gdkstub.c	6457;"	struct:GdkEventConfigure
window	stubs/gdkstub.c	6468;"	struct:GdkEventProperty
window	stubs/gdkstub.c	6481;"	struct:GdkEventSelection
window	stubs/gdkstub.c	6492;"	struct:GdkEventProximity
window	stubs/gdkstub.c	6507;"	struct:GdkEventClient
window	stubs/gdkstub.c	6518;"	struct:GdkEventDND
window	stubs/gtkstub.c	1679;"	struct:GtkCListColumn
window	stubs/gtkstub.c	2403;"	struct:GtkColorSelectionDialog
window	stubs/gtkstub.c	3577;"	struct:GtkDialog
window	stubs/gtkstub.c	4597;"	struct:GtkFileSelection
window	stubs/gtkstub.c	4876;"	struct:GtkFontSelectionDialog
window	stubs/gtkstub.c	8651;"	struct:GtkPlug
window	stubs/gtkstub.c	13688;"	struct:GtkWidget
window	stubs/xlibstub.c	539;"	struct:XKeyEvent
window	stubs/xlibstub.c	562;"	struct:XButtonEvent
window	stubs/xlibstub.c	585;"	struct:XMotionEvent
window	stubs/xlibstub.c	609;"	struct:XCrossingEvent
window	stubs/xlibstub.c	629;"	struct:XFocusChangeEvent
window	stubs/xlibstub.c	645;"	struct:XKeymapEvent
window	stubs/xlibstub.c	657;"	struct:XExposeEvent
window	stubs/xlibstub.c	692;"	struct:XVisibilityEvent
window	stubs/xlibstub.c	706;"	struct:XCreateWindowEvent
window	stubs/xlibstub.c	716;"	struct:XDestroyWindowEvent
window	stubs/xlibstub.c	727;"	struct:XUnmapEvent
window	stubs/xlibstub.c	738;"	struct:XMapEvent
window	stubs/xlibstub.c	748;"	struct:XMapRequestEvent
window	stubs/xlibstub.c	761;"	struct:XReparentEvent
window	stubs/xlibstub.c	776;"	struct:XConfigureEvent
window	stubs/xlibstub.c	787;"	struct:XGravityEvent
window	stubs/xlibstub.c	797;"	struct:XResizeRequestEvent
window	stubs/xlibstub.c	813;"	struct:XConfigureRequestEvent
window	stubs/xlibstub.c	824;"	struct:XCirculateEvent
window	stubs/xlibstub.c	835;"	struct:XCirculateRequestEvent
window	stubs/xlibstub.c	847;"	struct:XPropertyEvent
window	stubs/xlibstub.c	858;"	struct:XSelectionClearEvent
window	stubs/xlibstub.c	897;"	struct:XColormapEvent
window	stubs/xlibstub.c	913;"	struct:XClientMessageEvent
window	stubs/xlibstub.c	926;"	struct:XMappingEvent
window	stubs/xlibstub.c	946;"	struct:XAnyEvent
window_group	stubs/xlibstub.c	1299;"	struct:XWMHints
window_has_focus	stubs/gtkstub.c	14411;"	struct:GtkWindow
window_placement	stubs/gtkstub.c	9842;"	struct:GtkScrolledWindow
window_type	stubs/gdkstub.c	6143;"	struct:GdkWindowAttr
wmclass_class	stubs/gdkstub.c	6143;"	struct:GdkWindowAttr
wmclass_class	stubs/gtkstub.c	14411;"	struct:GtkWindow
wmclass_name	stubs/gdkstub.c	6143;"	struct:GdkWindowAttr
wmclass_name	stubs/gtkstub.c	14411;"	struct:GtkWindow
words	stubs/gtkstub.c	6064;"	struct:GtkLabel
wrap	stubs/gtkstub.c	6064;"	struct:GtkLabel
wrap	stubs/gtkstub.c	10436;"	struct:GtkSpinButton
write	stubs/unixstub.c	/^ssize_t write(int fd, void \*buf, size_t nbytes)$/;"	f
x	stubs/gdkstub.c	6143;"	struct:GdkWindowAttr
x	stubs/gdkstub.c	6214;"	struct:GdkPoint
x	stubs/gdkstub.c	6223;"	struct:GdkRectangle
x	stubs/gdkstub.c	6313;"	struct:GdkTimeCoord
x	stubs/gdkstub.c	6387;"	struct:GdkEventMotion
x	stubs/gdkstub.c	6406;"	struct:GdkEventButton
x	stubs/gdkstub.c	6437;"	struct:GdkEventCrossing
x	stubs/gdkstub.c	6457;"	struct:GdkEventConfigure
x	stubs/gtkstub.c	4683;"	struct:GtkFixedChild
x	stubs/gtkstub.c	13596;"	struct:GtkAllocation
x	stubs/gtkstub.c	13801;"	struct:GtkWidgetAuxInfo
x	stubs/xftstub.c	115;"	struct:XGlyphInfo
x	stubs/xlibstub.c	408;"	struct:XWindowAttributes
x	stubs/xlibstub.c	451;"	struct:XWindowChanges
x	stubs/xlibstub.c	469;"	struct:XPoint
x	stubs/xlibstub.c	475;"	struct:XRectangle
x	stubs/xlibstub.c	482;"	struct:XArc
x	stubs/xlibstub.c	510;"	struct:XTimeCoord
x	stubs/xlibstub.c	539;"	struct:XKeyEvent
x	stubs/xlibstub.c	562;"	struct:XButtonEvent
x	stubs/xlibstub.c	585;"	struct:XMotionEvent
x	stubs/xlibstub.c	609;"	struct:XCrossingEvent
x	stubs/xlibstub.c	657;"	struct:XExposeEvent
x	stubs/xlibstub.c	671;"	struct:XGraphicsExposeEvent
x	stubs/xlibstub.c	706;"	struct:XCreateWindowEvent
x	stubs/xlibstub.c	761;"	struct:XReparentEvent
x	stubs/xlibstub.c	776;"	struct:XConfigureEvent
x	stubs/xlibstub.c	787;"	struct:XGravityEvent
x	stubs/xlibstub.c	813;"	struct:XConfigureRequestEvent
x	stubs/xlibstub.c	1286;"	struct:XSizeHints
x1	stubs/gdkstub.c	6232;"	struct:GdkSegment
x1	stubs/xlibstub.c	464;"	struct:XSegment
x2	stubs/gdkstub.c	6232;"	struct:GdkSegment
x2	stubs/xlibstub.c	464;"	struct:XSegment
xOff	stubs/xftstub.c	115;"	struct:XGlyphInfo
x_align	stubs/gtkstub.c	9029;"	struct:GtkProgress
x_click_point	stubs/gtkstub.c	9291;"	struct:GtkRange
x_drag	stubs/gtkstub.c	1619;"	struct:GtkCList
x_hotspot	stubs/xpmstub.c	52;"	struct:XpmInfo
x_hotspot	stubs/xpmstub.c	118;"	struct:XpmAttributes
x_root	stubs/gdkstub.c	6387;"	struct:GdkEventMotion
x_root	stubs/gdkstub.c	6406;"	struct:GdkEventButton
x_root	stubs/gdkstub.c	6437;"	struct:GdkEventCrossing
x_root	stubs/gdkstub.c	6518;"	struct:GdkEventDND
x_root	stubs/xlibstub.c	539;"	struct:XKeyEvent
x_root	stubs/xlibstub.c	562;"	struct:XButtonEvent
x_root	stubs/xlibstub.c	585;"	struct:XMotionEvent
x_root	stubs/xlibstub.c	609;"	struct:XCrossingEvent
xalign	stubs/gtkstub.c	353;"	struct:GtkAlignment
xalign	stubs/gtkstub.c	563;"	struct:GtkAspectFrame
xalign	stubs/gtkstub.c	7478;"	struct:GtkMisc
xany	stubs/xlibstub.c	987;"	union:XEvent
xbutton	stubs/xlibstub.c	987;"	union:XEvent
xcirculate	stubs/xlibstub.c	987;"	union:XEvent
xcirculaterequest	stubs/xlibstub.c	987;"	union:XEvent
xclient	stubs/xlibstub.c	987;"	union:XEvent
xcolormap	stubs/xlibstub.c	987;"	union:XEvent
xconfigure	stubs/xlibstub.c	987;"	union:XEvent
xconfigurerequest	stubs/xlibstub.c	987;"	union:XEvent
xcreatewindow	stubs/xlibstub.c	987;"	union:XEvent
xcrossing	stubs/xlibstub.c	987;"	union:XEvent
xcs	stubs/unixstub.c	/^  long xcs;$/;"	v
xdestroywindow	stubs/xlibstub.c	987;"	union:XEvent
xds	stubs/unixstub.c	/^  long xds;$/;"	v
xerror	stubs/xlibstub.c	987;"	union:XEvent
xes	stubs/unixstub.c	/^  long xes;$/;"	v
xexpand	stubs/gtkstub.c	11031;"	struct:GtkTableChild
xexpose	stubs/xlibstub.c	987;"	union:XEvent
xfill	stubs/gtkstub.c	11031;"	struct:GtkTableChild
xfocus	stubs/xlibstub.c	987;"	union:XEvent
xfs	stubs/unixstub.c	/^  long xfs;$/;"	v
xgraphicsexpose	stubs/xlibstub.c	987;"	union:XEvent
xgravity	stubs/xlibstub.c	987;"	union:XEvent
xgs	stubs/unixstub.c	/^  long xgs;$/;"	v
xkey	stubs/xlibstub.c	987;"	union:XEvent
xkeymap	stubs/xlibstub.c	987;"	union:XEvent
xmap	stubs/xlibstub.c	987;"	union:XEvent
xmapping	stubs/xlibstub.c	987;"	union:XEvent
xmaprequest	stubs/xlibstub.c	987;"	union:XEvent
xmm_space	stubs/unixstub.c	/^  long xmm_space\[32\];  \/\* 8\*16 bytes for each XMM-reg = 128 bytes \*\/$/;"	v
xmotion	stubs/xlibstub.c	987;"	union:XEvent
xnoexpose	stubs/xlibstub.c	987;"	union:XEvent
xoffset	stubs/gtkstub.c	6161;"	struct:GtkLayout
xoffset	stubs/xlibstub.c	442;"	struct:XImage
xor_gc	stubs/gtkstub.c	1158;"	struct:GtkCalendar
xor_gc	stubs/gtkstub.c	1619;"	struct:GtkCList
xor_gc	stubs/gtkstub.c	8493;"	struct:GtkPaned
xpad	stubs/gtkstub.c	7478;"	struct:GtkMisc
xpadding	stubs/gtkstub.c	11031;"	struct:GtkTableChild
xproperty	stubs/xlibstub.c	987;"	union:XEvent
xreparent	stubs/xlibstub.c	987;"	union:XEvent
xresizerequest	stubs/xlibstub.c	987;"	union:XEvent
xscale	stubs/gtkstub.c	353;"	struct:GtkAlignment
xselection	stubs/xlibstub.c	987;"	union:XEvent
xselectionclear	stubs/xlibstub.c	987;"	union:XEvent
xselectionrequest	stubs/xlibstub.c	987;"	union:XEvent
xshrink	stubs/gtkstub.c	11031;"	struct:GtkTableChild
xsrc	stubs/gtkstub.c	9649;"	struct:GtkRuler
xss	stubs/unixstub.c	/^  long xss;$/;"	v
xthickness	stubs/gtkstub.c	10704;"	struct:GtkStyleClass
xtilt	stubs/gdkstub.c	6313;"	struct:GdkTimeCoord
xtilt	stubs/gdkstub.c	6387;"	struct:GdkEventMotion
xtilt	stubs/gdkstub.c	6406;"	struct:GdkEventButton
xunmap	stubs/xlibstub.c	987;"	union:XEvent
xvisibility	stubs/xlibstub.c	987;"	union:XEvent
xx	stubs/xftstub.c	369;"	struct:XftMatrix
xy	stubs/xftstub.c	369;"	struct:XftMatrix
y	stubs/gdkstub.c	6143;"	struct:GdkWindowAttr
y	stubs/gdkstub.c	6214;"	struct:GdkPoint
y	stubs/gdkstub.c	6223;"	struct:GdkRectangle
y	stubs/gdkstub.c	6313;"	struct:GdkTimeCoord
y	stubs/gdkstub.c	6387;"	struct:GdkEventMotion
y	stubs/gdkstub.c	6406;"	struct:GdkEventButton
y	stubs/gdkstub.c	6437;"	struct:GdkEventCrossing
y	stubs/gdkstub.c	6457;"	struct:GdkEventConfigure
y	stubs/gtkstub.c	4683;"	struct:GtkFixedChild
y	stubs/gtkstub.c	13596;"	struct:GtkAllocation
y	stubs/gtkstub.c	13801;"	struct:GtkWidgetAuxInfo
y	stubs/xftstub.c	115;"	struct:XGlyphInfo
y	stubs/xlibstub.c	408;"	struct:XWindowAttributes
y	stubs/xlibstub.c	451;"	struct:XWindowChanges
y	stubs/xlibstub.c	469;"	struct:XPoint
y	stubs/xlibstub.c	475;"	struct:XRectangle
y	stubs/xlibstub.c	482;"	struct:XArc
y	stubs/xlibstub.c	510;"	struct:XTimeCoord
y	stubs/xlibstub.c	539;"	struct:XKeyEvent
y	stubs/xlibstub.c	562;"	struct:XButtonEvent
y	stubs/xlibstub.c	585;"	struct:XMotionEvent
y	stubs/xlibstub.c	609;"	struct:XCrossingEvent
y	stubs/xlibstub.c	657;"	struct:XExposeEvent
y	stubs/xlibstub.c	671;"	struct:XGraphicsExposeEvent
y	stubs/xlibstub.c	706;"	struct:XCreateWindowEvent
y	stubs/xlibstub.c	761;"	struct:XReparentEvent
y	stubs/xlibstub.c	776;"	struct:XConfigureEvent
y	stubs/xlibstub.c	787;"	struct:XGravityEvent
y	stubs/xlibstub.c	813;"	struct:XConfigureRequestEvent
y	stubs/xlibstub.c	1286;"	struct:XSizeHints
y1	stubs/gdkstub.c	6232;"	struct:GdkSegment
y1	stubs/xlibstub.c	464;"	struct:XSegment
y2	stubs/gdkstub.c	6232;"	struct:GdkSegment
y2	stubs/xlibstub.c	464;"	struct:XSegment
yOff	stubs/xftstub.c	115;"	struct:XGlyphInfo
y_align	stubs/gtkstub.c	9029;"	struct:GtkProgress
y_click_point	stubs/gtkstub.c	9291;"	struct:GtkRange
y_hotspot	stubs/xpmstub.c	52;"	struct:XpmInfo
y_hotspot	stubs/xpmstub.c	118;"	struct:XpmAttributes
y_root	stubs/gdkstub.c	6387;"	struct:GdkEventMotion
y_root	stubs/gdkstub.c	6406;"	struct:GdkEventButton
y_root	stubs/gdkstub.c	6437;"	struct:GdkEventCrossing
y_root	stubs/gdkstub.c	6518;"	struct:GdkEventDND
y_root	stubs/xlibstub.c	539;"	struct:XKeyEvent
y_root	stubs/xlibstub.c	562;"	struct:XButtonEvent
y_root	stubs/xlibstub.c	585;"	struct:XMotionEvent
y_root	stubs/xlibstub.c	609;"	struct:XCrossingEvent
yalign	stubs/gtkstub.c	353;"	struct:GtkAlignment
yalign	stubs/gtkstub.c	563;"	struct:GtkAspectFrame
yalign	stubs/gtkstub.c	7478;"	struct:GtkMisc
year	stubs/glibstub.c	2541;"	struct:GDate
year	stubs/gtkstub.c	1158;"	struct:GtkCalendar
yexpand	stubs/gtkstub.c	11031;"	struct:GtkTableChild
yfill	stubs/gtkstub.c	11031;"	struct:GtkTableChild
yoffset	stubs/gtkstub.c	6161;"	struct:GtkLayout
your_event_mask	stubs/xlibstub.c	408;"	struct:XWindowAttributes
ypad	stubs/gtkstub.c	7478;"	struct:GtkMisc
ypadding	stubs/gtkstub.c	11031;"	struct:GtkTableChild
yscale	stubs/gtkstub.c	353;"	struct:GtkAlignment
yshrink	stubs/gtkstub.c	11031;"	struct:GtkTableChild
ysrc	stubs/gtkstub.c	9649;"	struct:GtkRuler
ythickness	stubs/gtkstub.c	10704;"	struct:GtkStyleClass
ytilt	stubs/gdkstub.c	6313;"	struct:GdkTimeCoord
ytilt	stubs/gdkstub.c	6387;"	struct:GdkEventMotion
ytilt	stubs/gdkstub.c	6406;"	struct:GdkEventButton
yx	stubs/xftstub.c	369;"	struct:XftMatrix
yy	stubs/xftstub.c	369;"	struct:XftMatrix

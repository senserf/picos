#!/bin/sh
###################\
exec tclsh "$0" "$@"

###############################################################################
# A simple switcher between DLL versions for FET programmers ##################
###############################################################################

## Assumes that .../mspgcc/bin (or .../mspgcc/lib on Linux) contains
## subdirectory ALTERNATIVE_DLLS (properly equipped)

###############################################################################
# Determine the system type ###################################################
###############################################################################

if [catch { exec uname } ST(SYS)] {
	set ST(SYS) "W"
} elseif [regexp -nocase "linux" $ST(SYS)] {
	set ST(SYS) "L"
} elseif [regexp -nocase "cygwin" $ST(SYS)] {
	set ST(SYS) "C"
} else {
	set ST(SYS) "W"
}

#####################################

set TARGET [string trim [lindex $argv 0]]

if { $TARGET == "-V" } {
	puts "ZZ000000A"
	exit 0
}

proc abt { msg } {

	puts stderr $msg!
	exit 99
}

proc libpath { } {
#
# Finds the directory path of the library 
#
	global ST

	if [catch { exec which "msp430-gcc" } tcp] {
		abt "Cannot locate library path: $tcp"
	}

	if { [string first "which:" $tcp] >= 0 } {
		abt "Cannot locate $library path: msp430-gcc not executable"
	}

	set tcp [file dirname $tcp]

	if { $ST(SYS) == "L" } {
		# Linux, make it .../lib
		set tcp [file join [file dirname $tcp] "lib"]
	}
	return $tcp
}

proc swapthem { } {

	global TARGET

	set dir [libpath]

	set sdir [file join $dir "ALTERNATIVE_DLLS"]

	if ![file isdirectory $sdir] {
		abt "Cannot replace DLLs, source directory, $sdir,\
			doesn't exist"
	}

	if [catch { glob -directory $sdir * } sdl] {
		abt "Source directory is empty"
	}

	if { $TARGET == "" } {
		set TARGET "original"
	}

	set tar "_${TARGET}."

	foreach f $sdl {

		set f [file tail $f]

		set l [string first $tar $f]
		if { $l < 0 } {
			continue
		}

		set t "[string range $f 0 [expr $l - 1]][string range $f \
			[expr $l + [string length $tar] - 1] end]"

		set t [file join $dir $t]

		catch { exec rm -rf $t }
		set f [file join $sdir $f]
		if [catch { exec cp $f $t } err] {
			puts "Cannot copy $f -> $t: $err"
		} else {
			puts "Replaced: $t"
		}
	}
}

swapthem

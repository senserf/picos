#!/bin/sh
###################\
exec tclsh "$0" "$@"

if [catch { exec uname } Stat(S)] {
	set Stat(S) "W"
} elseif [regexp -nocase "linux" $Stat(S)] {
	set Stat(S) "L"
} elseif [regexp -nocase "cygwin" $Stat(S)] {
	set Stat(S) "C"
} else {
	set Stat(S) "W"
}

# arguments: private bin directory + path to container directory + rtag
set bin [lindex $argv 0]
set vpa [lindex $argv 1]
set rta [lindex $argv 2]

proc abt { msg } {
	puts stderr $msg
	exit 1
}

if { $bin == "" } {
	# determine one that is actually present
	if ![info exists env(HOME)] {
		abt "cannot locate home directory!"
	}
	if [file exists [file join $env(HOME) "bin"]] {
		set bin "bin"
	} elseif [file exists [file join $env(HOME) "BIN"]] {
		set bin "BIN"
	} else {
		abt "neither 'bin' not 'BIN' exists in HOME"
	}
}

if { $vpa == "" } {
	abt "source path must be specified, the script must be invoked from PICOS/deploy!"
}

if { $rta == "" } {
	abt "rtag must be specified!"
}

puts "Setting up libraries ..."

if { $Stat(S) != "L" } {
	set sdi "LIBS/Cygwin"
} else {
	set sdi "LIBS/Linux"
}

exec cp -ar $sdi/LIB .
exec cp -a $sdi/libtcpip.a SOURCES/LIB

puts "Compiling maker, bin=$bin, container=$vpa, rtag=$rta ..."

cd SOURCES

exec g++ -o maker maker.cc

if { $Stat(S) != "L" } {
	# Cygwin/Windows
	set exf "maker.exe"
} else {
	set exf "maker"
}

exec strip $exf

puts "Running maker for vuee ..."
set out [exec [auto_execok ./maker] -b -r $rta << \
	"none\n\n\n25\n$vpa/VUEE/PICOS\n\n$vpa/PICOS/Apps/DataLib\n\n\nvuee\n$bin\ny\nn\n\n\n"]
puts $out

/*
	Copyright 2002-2020 (C) Olsonet Communications Corporation
	Programmed by Pawel Gburzynski & Wlodek Olesinski
	All rights reserved

	This file is part of the PICOS platform

*/
#ifndef	__pg_mpu9250_h
#define	__pg_mpu9250_h

#include "sysio.h"

#ifndef	MPU9250_I2C_ADDRESS
// Primary module address
#define	MPU9250_I2C_ADDRESS		0x68
#endif

#ifndef	MPU9250_AKM_ADDRESS
// The compass (we operate in bypass mode)
#define	MPU9250_AKM_ADDRESS		0x0C
#endif

// Primary module registers

#define	MPU9250_REG_XG_OFFSET_H		0x13
#define	MPU9250_REG_XG_OFFSET_L		0x14
#define	MPU9250_REG_YG_OFFSET_H		0x15
#define	MPU9250_REG_YG_OFFSET_L		0x16
#define	MPU9250_REG_ZG_OFFSET_H		0x17
#define	MPU9250_REG_ZG_OFFSET_L		0x18

#define	MPU9250_REG_SMPLRT_DIV		0x19
#define	MPU9250_REG_CONFIG		0x1A
#define	MPU9250_REG_GYRO_CONFIG		0x1B
#define	MPU9250_REG_ACCEL_CONFIG	0x1C
#define	MPU9250_REG_ACCEL_CONFIG2	0x1D
#define	MPU9250_REG_LP_ACCEL_ODR	0x1E
#define	MPU9250_REG_WOM_THR		0x1F
#define	MPU9250_REG_FIFO_EN		0x23

#define	MPU9250_REG_I2C_MST_CTRL	0x24

#define	MPU9250_REG_I2C_SLV0_ADDR	0x25
#define	MPU9250_REG_I2C_SLV0_REG	0x26
#define	MPU9250_REG_I2C_SLV0_CTRL	0x27

#define	MPU9250_REG_I2C_SLV1_ADDR	0x28
#define	MPU9250_REG_I2C_SLV1_REG	0x29
#define	MPU9250_REG_I2C_SLV1_CTRL	0x2A

#define	MPU9250_REG_I2C_SLV2_ADDR	0x2B
#define	MPU9250_REG_I2C_SLV2_REG	0x2C
#define	MPU9250_REG_I2C_SLV2_CTRL	0x2D

#define	MPU9250_REG_I2C_SLV3_ADDR	0x2E
#define	MPU9250_REG_I2C_SLV3_REG	0x2F
#define	MPU9250_REG_I2C_SLV3_CTRL	0x30

#define	MPU9250_REG_I2C_SLV4_ADDR	0x31
#define	MPU9250_REG_I2C_SLV4_REG	0x32
#define	MPU9250_REG_I2C_SLV4_DO		0x33
#define	MPU9250_REG_I2C_SLV4_CTRL	0x34
#define	MPU9250_REG_I2C_SLV4_DI		0x35

#define	MPU9250_REG_I2C_MST_STATUS	0x36

#define	MPU9250_REG_INT_PIN_CFG		0x37
#define	MPU9250_REG_INT_ENABLE		0x38
#define	MPU9250_REG_INT_STATUS		0x3A

#define	MPU9250_REG_ACCEL_XOUT_H	0x3B
#define	MPU9250_REG_ACCEL_XOUT_L	0x3C
#define	MPU9250_REG_ACCEL_YOUT_H	0x3D
#define	MPU9250_REG_ACCEL_YOUT_L	0x3E
#define	MPU9250_REG_ACCEL_ZOUT_H	0x3F
#define	MPU9250_REG_ACCEL_ZOUT_L	0x40

#define	MPU9250_REG_TEMP_OUT_H		0x41
#define	MPU9250_REG_TEMP_OUT_L		0x42

#define	MPU9250_REG_GYRO_XOUT_H		0x43
#define	MPU9250_REG_GYRO_XOUT_L		0x44
#define	MPU9250_REG_GYRO_YOUT_H		0x45
#define	MPU9250_REG_GYRO_YOUT_L		0x46
#define	MPU9250_REG_GYRO_ZOUT_H		0x47
#define	MPU9250_REG_GYRO_ZOUT_L		0x48

#define	MPU9250_REG_EXT_SENS_DATA_00	0x49
#define	MPU9250_REG_EXT_SENS_DATA_01	0x4A
#define	MPU9250_REG_EXT_SENS_DATA_02	0x4B
#define	MPU9250_REG_EXT_SENS_DATA_03	0x4C
#define	MPU9250_REG_EXT_SENS_DATA_04	0x4D
#define	MPU9250_REG_EXT_SENS_DATA_05	0x4E
#define	MPU9250_REG_EXT_SENS_DATA_06	0x4F
#define	MPU9250_REG_EXT_SENS_DATA_07	0x50
#define	MPU9250_REG_EXT_SENS_DATA_08	0x51
#define	MPU9250_REG_EXT_SENS_DATA_09	0x52
#define	MPU9250_REG_EXT_SENS_DATA_10	0x53
#define	MPU9250_REG_EXT_SENS_DATA_11	0x54
#define	MPU9250_REG_EXT_SENS_DATA_12	0x55
#define	MPU9250_REG_EXT_SENS_DATA_13	0x56
#define	MPU9250_REG_EXT_SENS_DATA_14	0x57
#define	MPU9250_REG_EXT_SENS_DATA_15	0x58
#define	MPU9250_REG_EXT_SENS_DATA_16	0x59
#define	MPU9250_REG_EXT_SENS_DATA_17	0x5A
#define	MPU9250_REG_EXT_SENS_DATA_18	0x5B
#define	MPU9250_REG_EXT_SENS_DATA_19	0x5C
#define	MPU9250_REG_EXT_SENS_DATA_20	0x5D
#define	MPU9250_REG_EXT_SENS_DATA_21	0x5E
#define	MPU9250_REG_EXT_SENS_DATA_22	0x5F
#define	MPU9250_REG_EXT_SENS_DATA_23	0x60

#define	MPU9250_REG_I2C_SLV0_DO		0x63
#define	MPU9250_REG_I2C_SLV1_DO		0x64
#define	MPU9250_REG_I2C_SLV2_DO		0x65
#define	MPU9250_REG_I2C_SLV3_DO		0x66

#define	MPU9250_REG_I2C_MST_DELAY_CTRL	0x67

#define	MPU9250_REG_SIGNAL_PATH_RESET	0x68
#define	MPU9250_REG_MOT_DETECT_CTRL	0x69
#define	MPU9250_REG_USER_CTRL		0x6A
#define	MPU9250_REG_PWR_MGMT_1		0x6B
#define	MPU9250_REG_PWR_MGMT_2		0x6C

#define	MPU9250_REG_FIFO_COUNT_H	0x72
#define	MPU9250_REG_FIFO_COUNT_L	0x73
#define	MPU9250_REG_FIFO_R_W		0x74

#define	MPU9250_REG_WHO_AM_I		0x75

#define	MPU9250_REG_XA_OFFSET_H		0x77
#define	MPU9250_REG_XA_OFFSET_L		0x78
#define	MPU9250_REG_YA_OFFSET_H		0x7A
#define	MPU9250_REG_YA_OFFSET_L		0x7B
#define	MPU9250_REG_ZA_OFFSET_H		0x7D
#define	MPU9250_REG_ZA_OFFSET_L		0x7E

// AKM (compass) registers

#define MPU9250_REG_AKM_WHOAMI		0x00
#define MPU9250_REG_AKM_INFO		0x01

#define MPU9250_REG_AKM_ST1         	0x02

#define MPU9250_REG_AKM_HXL		0x03
#define MPU9250_REG_AKM_HXH		0x04
#define MPU9250_REG_AKM_HYL		0x05
#define MPU9250_REG_AKM_HYH		0x06
#define MPU9250_REG_AKM_HZL		0x07
#define MPU9250_REG_AKM_HZH		0x08

#define MPU9250_REG_AKM_ST2		0x09

#define MPU9250_REG_AKM_CNTL		0x0A
#define MPU9250_REG_AKM_ASTC		0x0C
#define MPU9250_REG_AKM_I2CDIS		0x0F

#define MPU9250_REG_AKM_ASAX		0x10
#define MPU9250_REG_AKM_ASAY		0x11
#define MPU9250_REG_AKM_ASAZ		0x12

// ============================================================================

// Options components

#define	MPU9250_OPT_SH_LPF		0	// LPF shift
#define	MPU9250_OPT_SH_ODR		(MPU9250_OPT_SH_LPF + 3)
#define	MPU9250_OPT_SH_SENSORS		(MPU9250_OPT_SH_ODR + 4)
#define	MPU9250_OPT_SH_ACCEL_RANGE	(MPU9250_OPT_SH_SENSORS + 4)
#define	MPU9250_OPT_SH_GYRO_RANGE	(MPU9250_OPT_SH_ACCEL_RANGE + 2)
#define	MPU9250_OPT_SH_EVENT_TYPE	(MPU9250_OPT_SH_GYRO_RANGE + 2)
#define	MPU9250_OPT_SH_RATE_DIVIDER	24

#define	MPU9250_LP_MOTION_DETECT	(1 << MPU9250_OPT_SH_EVENT_TYPE)
#define	MPU9250_LP_SYNC_READ		(2 << MPU9250_OPT_SH_EVENT_TYPE)

#define	MPU9250_GYRO_RANGE_250		(0 << MPU9250_OPT_SH_GYRO_RANGE)
#define	MPU9250_GYRO_RANGE_500		(1 << MPU9250_OPT_SH_GYRO_RANGE)
#define	MPU9250_GYRO_RANGE_1000		(2 << MPU9250_OPT_SH_GYRO_RANGE)
#define	MPU9250_GYRO_RANGE_2000		(3 << MPU9250_OPT_SH_GYRO_RANGE)

// Accel range
#define	MPU9250_ACCEL_RANGE_2		(0 << MPU9250_OPT_SH_ACCEL_RANGE)
#define	MPU9250_ACCEL_RANGE_4		(1 << MPU9250_OPT_SH_ACCEL_RANGE)
#define	MPU9250_ACCEL_RANGE_8		(2 << MPU9250_OPT_SH_ACCEL_RANGE)
#define	MPU9250_ACCEL_RANGE_16		(3 << MPU9250_OPT_SH_ACCEL_RANGE)

// Low pass filter
#define	MPU9250_LPF_256			(0 << MPU9250_OPT_SH_LPF)
#define	MPU9250_LPF_188			(1 << MPU9250_OPT_SH_LPF)
#define	MPU9250_LPF_98			(2 << MPU9250_OPT_SH_LPF)
#define	MPU9250_LPF_42			(3 << MPU9250_OPT_SH_LPF)
#define	MPU9250_LPF_20			(4 << MPU9250_OPT_SH_LPF)
#define	MPU9250_LPF_10			(5 << MPU9250_OPT_SH_LPF)
#define	MPU9250_LPF_5			(6 << MPU9250_OPT_SH_LPF)
#define	MPU9250_LPF_2100		(7 << MPU9250_OPT_SH_LPF)

// LP ODR

// Output data rate
#define	MPU9250_LPA_02			(0  << MPU9250_OPT_SH_ODR)
#define	MPU9250_LPA_05			(1  << MPU9250_OPT_SH_ODR)
#define	MPU9250_LPA_1			(2  << MPU9250_OPT_SH_ODR)
#define	MPU9250_LPA_2			(3  << MPU9250_OPT_SH_ODR)
#define	MPU9250_LPA_4			(4  << MPU9250_OPT_SH_ODR)
#define	MPU9250_LPA_8			(5  << MPU9250_OPT_SH_ODR)
#define	MPU9250_LPA_16			(6  << MPU9250_OPT_SH_ODR)
#define	MPU9250_LPA_32			(7  << MPU9250_OPT_SH_ODR)
#define	MPU9250_LPA_64			(8  << MPU9250_OPT_SH_ODR)
#define	MPU9250_LPA_128			(9  << MPU9250_OPT_SH_ODR)
#define	MPU9250_LPA_256			(10 << MPU9250_OPT_SH_ODR)
#define	MPU9250_LPA_512			(11 << MPU9250_OPT_SH_ODR)

#define	MPU9250_SEN_ACCEL		(1 << MPU9250_OPT_SH_SENSORS)
#define	MPU9250_SEN_GYRO		(2 << MPU9250_OPT_SH_SENSORS)
#define	MPU9250_SEN_COMPASS		(4 << MPU9250_OPT_SH_SENSORS)
#define	MPU9250_SEN_TEMP		(8 << MPU9250_OPT_SH_SENSORS)

// ============================================================================

// Driver flags

#define	MPU9250_STATUS_ACCEL_ON		0x01
#define	MPU9250_STATUS_GYRO_ON		0x02
#define	MPU9250_STATUS_COMPASS_ON	0x04
#define	MPU9250_STATUS_TEMP_ON		0x08
#define	MPU9250_STATUS_COMPASS_ADJREAD	0x10
#define	MPU9250_STATUS_EVENT		0x20
#define	MPU9250_STATUS_WAIT		0x40

#ifndef	__SMURPH__

#include "pins.h"
//+++ "mpu9250.c"

void mpu9250_read (word, const byte*, address);

extern byte mpu9250_status;

void mpu9250_on (lword, byte);
void mpu9250_off ();
void mpu9250_wrega (byte, byte);
void mpu9250_wregc (byte, byte);
void mpu9250_rregan (byte, byte*, word);
void mpu9250_rregcn (byte, byte*, word);

#else

#define	mpu9250_on(a,b)		emul (9, "MPU9250_ON: %04x %02x", a, b)
#define	mpu9250_off()		emul (9, "MPU9250_OFF: <>")

#define mpu9250_wrega(r,v)	emul (9, "MPU9250_WREGA: %02x %02x", r, v)
#define mpu9250_wregc(r,v)	emul (9, "MPU9250_WREGC: %02x %02x", r, v)
#define mpu9250_rregan(a,b,c)	bzero (b, c)
#define mpu9250_rregcn(a,b,c)	bzero (b, c)

#endif

#endif

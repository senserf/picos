#ifndef __msg_tarp_h
#define __msg_tarp_h

 
//	This is meant to guide app's msgs design.
//	At present, TeeHop and MeterHop in mind.


// A node may decide that any msg type is a proxy exchange only, without
// tweaking hoc. It may be useful not only for diagnostics.

// msgType | proxyMask <-> don't route
#define proxyMask 8

// template types...
typedef enum {
	prxMsg, type1Msg, type2Msg
} msgTypeType;


// can't be any less
typedef struct anyStruct {
	byte	msgType;
	byte	seqNo;
	word	snd;
} anyType;

// proxy template
typedef anyType prxType;
#define prxLen sizeof(prxType)

// hopping msg template
typedef struct routedStruct {
	byte	msgType;
	byte	seqNo;
	word	snd;
	word	rcv;
	byte	hoc;     // # of hops so far
	byte	hco;     // last one from the destination to me
} routedType;
#define routedLen sizeof(routedType)


// Is this really needed?
typedef union msgStruct {
    anyType    anyMsg;
    prxType    prxMsg;
    routedType routedMsg;
} msgType;
#define maxMsgLen sizeof(msgType)

#endif

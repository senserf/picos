INSTALLATION
============

NOTE: The old Windows version of SIDE is no longer available, but the
present UNIX version works nicely and comfortably uder CYGWIN. The
instalation procedure is essentially the same as for UNIX.

1. Make sure there is a GNU C++ compiler, version 3.3.1 or higher, installed
   on your system. This version of SIDE is unlikely to work with other
   compilers out of the box. The recommended platform is Linux or Cygwin.

2. If you want to use DSD, make sure that JDK is installed on your system.
   If not, go to http://java.sun.com/, fetch and install a version of JDK for
   your platform. If you don't want to install JDK, you can till use DSD on
   another machine connecting remotely to your machine, or you may run DSD
   from a Java-capable browser. Read file README in SIDE/SOURCES/DSD and the
   chapter "DSD: the dynamic status display program" in the manual.

3. If you received the package as a single compressed file, unpack it anywhere
   you want, e.g.,

             cd
             zcat sidexxx.tar.gz | tar -xvf -

   This will create directory SIDE together with its subdirectories -- as
   described in the manual (see manual.pdf in directory SIDE/MANUAL).
   You may go to the chapter "SIDE under UNIX and Windows" and read more
   about the installation procedure. But to make your life simpler, we will
   give you here a few more hints.


4. Go to directory SIDE/SOURCES. Your options:

  4.1 Here is a handy, no-brainer installation shortcut, if you want to get
      started right away postponing the understanding until later. Execute
      this:

             ./make_smurph

      When done go to step 7.

  4.2 All steps manually, i.e., the hard way. Compile the maker program by
      executing:

             g++ -o maker maker.cc

      Then run the maker program (in directory SIDE/SOURCES) by simply
      executing:

             ./maker

      (Note that it will be called maker.exe under CYGWIN.)
      Then continue at 5.

5. The maker program will ask you a few questions and complete the installation
   for you. Default answers are fine in most cases. Specifically, the program
   asks you about the following things:

  5.1 The name of the Java compiler. This information is only relevant and
      needed if you want to recompile the DSD applet. Normally, the applet need
      not be recompiled because the precompiled java code is platform-
      independent.

  5.2 The path to the SOURCES directory, i.e., to the directory containing
      the source files of the package. The default (which practically never
      should be changed) is the current directory (i.e., SIDE/SOURCES).

  5.3 The path to the directory where binary libraries of the kernel modules
      will be kept. The default path is ../LIB, i.e., the libraries will be
      kept in subdirectory LIB in the root directory of the package. There is
      no need to change this default.

  5.4 The maximum number of versions of the binary library to be kept in the
      library directory. You may want to increase this number if you don't care
      too much about disk space, but the default (25) is more than enough. One
      copy of the library uses about 0.5MB on Linux.

  5.5 The name of the directory containing #include files for SIDE programs.
      The default is Examples/IncLib containing the include files for the
      examples that come with the package. This is fine, if you want to use
      SIDE to play with the Example protocols or recycle their components.
      Note that specialized installations, e.g., VUEE, may require specific
      #include libraries, as described in their installation procedures.

  5.6 The Internet name of the host running the SIDE monitor. You should read
      the chapter "DSD: the dynamic status display program" (and its section
      "The monitor") from the manual to understand what this is about. For
      starters, the Internet name of you current host (or localhost) is a
      good idea. By default, there is no monitor host, which means that you
      don't want the monitor. Without the monitor, you won't be able to run
      the DSD applet.

  5.7 The number of the monitor socket port. This should be an unused port
      number for implementing an AF_INET socket available to non-privileged
      users. The default number is 4442, which is most likely fine.

  5.8 The target name of the SIDE compiler. The default name is `mks' and you
      can leave it alone.

  5.9 The directory where `mks' is to be put. The default is ~/bin.

      As this is the first (and only) place where specifying a non-default file
      path may actually make some sense, let us explain here that a path
      starting with `/' is interpreted absolutely, whereas any other path is
      interpreted relative to the user's home directory.

      It is reasonable to put mks into a directory where you usually keep your
      private executables. This directory should be included in your PATH.

  5.a Whether the monitor is to be created. If the answer is `yes' (which is
      the default, but only if a monitor host was specified earlier), maker
      will create the binary version of the monitor and put it into
      subdirectory MONITOR of SIDE/SOURCES.

   When maker is done, it updates the contents of file version.h in directory
   SIDE/SOURCES to reflect some of your selections.

   NOTE: in previous versions of SIDE, maker would ask three more questions:
   the name of the C++ compiler, the name of the C compiler, and whether type
   long long should be used for representing BIG numbers. In this version,
   maker assumes that the C++/C compiler is g++/gcc, and it automatically
   selects type long long as the base for type BIG.

6. The last thing done by maker is the compilation of the DSD applet, which
   only happens if you requested it by specifying earlier the name of your Java
   compiler (typically javac). Then you are asked whether you want to move
   the compiled classes of DSD, together with the anchor html file, to a
   directory of your choice. Again, the default directory (SIDE/SOURCES/DSD)
   is perfectly fine.

7. That's it -- SIDE has been installed. RTFM.

   The simulation examples included with the package, execept for the few that
   come with their own description, are discussed in detail in:

   Pawel Gburzynski, Protocol Design for Local and Metropolitan Area Networks,
   ===========================================================================
   Prentice Hall, 1996.
   ====================

   That book is also a friendly (and indexed) handbook of SIDE (which used to
   be called SMURPH in its previous life). It doesn't cover recent additions,
   like radio channels, but it is still a good introduction to the package.

   If you have problems and/or comments, send a note to pawelg@ualberta.ca
                                                        ==================


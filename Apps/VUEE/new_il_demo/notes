Base & ref. point: eco_demo. It was touched as lightly as possible; e.g.
we carry 6-sensor array until we know what's truly needed - we can get away
with it on WARSAW_ILS, as read_sensor() doesn't barf for unknown ones. As soon
as we have the hardware, we'll correct the sensors, and follow with VUEE. Also,
options.sys will be 'modernized' and split for agg., and 2 flavours of colls,
as soon as we can configure and test the hardware.

- removed _cus;
- removed satellite stuff;
- new vuee style (with app_peg_data.h);
- added OPRE_APP_REP_GONE and changed OPRE_APP_REP: the 'gone' tag reporting
  come with OPRE_APP_REP_GONE (1014) prefix;
- rep_str in str_peg.h: no slots for agg & col,
  tag's rssi (at reporting peg) and master's seconds() added at eol;
- for hierarchy, the easiest were pools of up to 9 coll. per agg, e.g. il.xml:
    agg. 1: master in a separate room, no colls
    agg. 1010: room 101 with colls 1011 1012 1013
    agg. 1020: room 102 with colls 1021 1022 1023
    agg. 1030: room 103 with colls 1031 1032, but also next room with 1033 1034;
- left double tstamps for now: no harm, no sense;
- TARP seems screwed up: on the praxis side, hco was not inited; on the LibComms
    side, optimal routes were rejected if slack was 0. Patched in tarp.c.
    We need tarp auto-tests, eco_demo should be adjusted and tested, even if
    routing is off there (i.e. no immediate damage).
    tarp_trace.zip contains uart output and tarp trace of a run of il.xml
    model. Some comments in the dbg_tarptrace.txt within, in case we embark on
    routing improvements. tarp_trace.zip should be deleted soon.

LEDS:
- T&P: R ON - fatal error; + B BLINK - caused by eeprom
- T&P startup: R BLLINK (maint.), G BLINK
- T&P normal: all off
- Tags: all retries fail - B BLINK
- Pegs: no msg from the master for 3x audit freq. - B BLINK

Thoughts

ODR (Operator Directed Routing), with flavours {strict, boost}. Boost is just
to direct packet outging from the sink, to appropriate direction.

TARP testbed & test automation: a must. Perhaps in VUEE?

---100316---
tag: RED_R blinks if battery is below 2250 (in VUEE with no SENSOR_LIST:
	for odd sval[0])
str_tag: separated :, changed sensor value formats %d->%u
separated hostid for genihex
No powerup is called for sensing
Commented out the association between peg and tag's id (no check for 'id / 10')

If _APP_EXPERIMENT is set, only odd local_host call powerdown()
	on init, and a tag diag trace shows 'retry' on missing acks.
	(Note the _TARP_T_LIGHT in tarp.c.)
	Also, in this mode tags send stats on the master's beacon, to provide
	periodic info about their counters and conditions. Note the crucial
	role of rx_span here.

In stats strings: slot, mem, mmin are replaced with 4 counters from
RADIO_TRACK_ERRORS (0, 0, mem, mmin if RADIO_TRACK_ERRORS is OFF).
Additional settings of RADIO_DEBUG, _APP_EXPERIMENT, _TARP_T_LIGHT provide 
verbose test mode for RF and counter testing. Permanent RXON (rx_span = 1) 
and cycle change instrument a collector for continous sensor output and 
stats msgs (e.g. 'c <col> <agg> 4 1 1'). Be aware of rxon's impact on
battery lifespan.

---100428---

The praxis still stays eco_demo-like, in anticipation of unexpected reqs and
personal tags extension. Alarms were the main reason for this iteration.


Misc:

  Some cleanup, e.g. removal of tmpcrap() was not extended to eco_demo (no
  change to eco_demo).

  msg4tag are audited, with tstamps and 2*freq expiry - stale entries may be
  dangerous if set msgs are allowed to be bcast.

  Trigger constant are explicit (playing with address-based constants proved
  to be error-prone).

Report layout:

  Instead of 6 sensors, we have 4 plus additional info:
  - battery
  - light
  - motion (# of 0->1 transitions)
  - analog motion (placeholder with today's boxes, but good in WARSAW_ILS)
  - alarm info
  - 0 (placeholder)

  All other fields stay the same.

  'Alarm info' is an integer representation of collector's flags, we may want
  to show more in the future. For now, alrm0 (light) bit is 0x0100, alrm1
  (motion) is 0x0200. So, 768 shows both set, 512 is for motion only, 256
  represents light. If the report is triggered by an alarm, a dedicated flag
  0x0020 is set as well. For example, 800 reports an alarm(s) triggered, with
  both light and motion set active. Flag (1) is set on synced nodes, so
  on those the values are +1.
  The actual readings are presented as in regular reports.
  (The convoluted form of all this falls out of overloading the existing
   application flags and showing raw values. As for other unnecessary
   complexities, all can be simplified for frozen requirements.)


c_flags and a_flags

  These are the existing app. flags. Commands a / c / s can't change anything
  on aggregators, and can change only alrm0 and alrm1 flags on collectors. For
  example, 'c 1034 0 -1 -1 -1 ffff 300' will request storage of an appropriate
  message on all aggregators that see collector 1034. When the collector reports
  open rx, the aggregators will forward the settings condensed within ack msg.
  Note that this broadcast (0 for agg. id) was not allowed before, and in fact
  can be somewhat dangerous if the operator (or automated OSS) doesn't know
  the functionality well. However, with many aggregators in the range of
  a collector, and without subscription mechanisms, there is no way to ensure
  a given aggregator is heard by the target collector. All this is trivial
  to simplify, but only after we have complete requirements.


Alarm setting

  Usually by remote 'c' command from the master. As in the example above, c_fl:
  300 - both sensors trigger alarms.
  100 - light only.
  200 - motion only.


Alarm thresholds - alarms are triggered if readings are greater then:

  Arbitrary and constant, for now. In app_tag.cc:
    SENS_LIGHT_THOLD (10)
    SENS_MOTION_THOLD (0)


Alarm frequencies and messaging / reporting.

  Arbitrary and constant, for now. In app_tag.cc:
    ALRM_FREQ (2050 ms)
    ALRM_COOL (15 s)

  Light and motion sensors are read every ALRM_FREQ ms. (from this angle, the
  name is misleading). Maximum of light readings and sum of motion readings
  are stored. When an active alarm is configured, value(s) are above thresholds,
  and most recent alarm was triggered more than ALRM_COOL s. ago, a new alarm
  is triggered.

  Triggers wake up regular sensor reporting, which prepares and send data, and
  clears counters. Note that the actual reporting is the same, with adjusted
  cycles: For not synchronized collectors, the next reporting will
  happen on another trigger, after the colling period, or after freq_maj
  regular delay. Synchronization will force regular collections at timestamps,
  no matter if interleaved with alarms.
 

Demo

 MeadowLakes demo, with intended deployment in the background, can be
 invoked from UDAEMON directory, e.g.
 ./udaemon.tcl -G ../../PICOS/Apps/VUEE/il_demo/mlakes.geo
 Corresponding model is in mlakes.xml. mlakes.geo likely must be edited for
 different screen resolutions, overheads, multiple screens, etc.

 Decent description is still missing, but it is not feasible to describe on
 paper all possible and useful demonstrations andscenarios: LEDs, alarms,
 sensor controls, battery monitoring, etc. Planned are internal demos,
 discussions, and documenting of most representative scenarios. Also, the
 VUEE model should be attached and shown with the real user i/f.


TESTING

 Basic scenarios only. Alarms seem to work OK, a lot of traffic and lost
 messages result from the chaotic mlakes.xml model. All should be easily
 filtered out to show only intended user output. In larger deployment, a
 collector -> aggregator subscription mechanism is desirable (and easy).

---100530---

- made analog power & light readings mutually exclusive in pesens, sens threads;
- added mlakes_27_1.xml, mlakes_27_2.xml for IL deployment in units 27-29.

---100715---

Output change, mainly for debug runs. Illustrations:

1005 Stats for agg (1030: 301): Audit 23 PLev 7 a_fl 0000 Uptime 193 Master 1 vpstats 1 2 3 4 4182 3734 inp 0

2005 Stats for collector (1033: 3301): Mf 60 mf 5 rx_span 2048 pl 7777 c_fl 0000 Uptime 206 vtstats 1 2 3 4 4214 3858

Node ids (local_host), derived from host_id would be 1030 and 1033,
but they're set to 301, 3301, respectively. In other words, we show
(word)host_id: local_host.

First 4 numbers v[p|t]stats are from PHYSOPT_ERROR (see RTAGS_PG:PG100628A) 
if RADIO_OPTIONS includes 0x04, or zeroed. The other 2 are from memfree() -
current and minimal memory available, in words.

---

1002   Agg 301 : 1001-1-1 0:3:2  Col 3301 : 1001-1-1 0:3:2   2300 90 10 4 300 0 109 210

The sensors:

2300 - battery
90   - light
10   - motion
4    - placeholders (counter ++ at regular intervals)
300  - c_flag
0    - placeholder (0)
109  - rssi
210  - master's uptime


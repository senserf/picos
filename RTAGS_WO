WO100715A:

  new_il_demo:
  
  - Changed stats format: all PHYSOPT_ERROR and memfree counters, instead of
    host_id we see derived and current local_host. See new_id_demo/notes.
  - Changed stats msgs to accomodate the above. Reflash all nodes in the net.
  - All nodes go powerdown() in _APP_EXPERIMENT (used to be just odd ids).
  - Default (in options.sys) RADIO_CRC_MODE is 4 (soft crc).
  - No calls to empty (but defined in the board def.) read_sensor(). Including
    power meter on aggregators. No output format change for sensor data.

WO100727A:	VUEE >= WO100727A

  TARP retries. See new_il_demo for mandatory tarp routines and options.sys.

WO100728A:

 new_il_demo, options.sys:
  - retries:
      TARP_RTR N (number of retries (on 1s interval). 1 or 2.
      TCV_TIMERS, TCV_HOOKS 1 (_TARP_T_RTR 1 for debugging RTRs
  - PURE_FORWARDERS 1 will make all nodes with ids below 100 pure forwarders -
      they will be ignoring collector data.

  Moved annoying 'Unconfirmed ...' from INFO to DEBUG level. Note that tag's
  'Not confirmed' stays - it is more important and should be rarer.

  Added mhop.xml model for in-line multi-hopping.

  All aggregators (with master_host set) send to it status report every
  tag_auditFreq * 2^POW_FREQ_SHIFT seconds. Default: 23 * 64 ~= 25 minutes.

 Minor adjustments in tarp.c, no early killing of retried packets
 (commented out).

 Retries:
   Imperfect as they are, they seem to improve routing is some topologies
   a lot. More studies needed. Try new_il_demo with the mhop.xml model.

   Nest iteration: only packets with higher hoc (down the stream) should
   clear retries. As it is now, a retry upstream will clear retries, which
   is both common and unwanted. Thus, hoc must be added to the rtr cache.

   It seems that with the link retries, PURE_FORWARDERS should be used.
   Without, PURE_FORWARDERS have ambiguous impact: less msgs, but also
   diminished redundancy in source data gathering.

WO100729A
  Traces in new_il_demo:
    Command: t node_id [dir hop_limit]
      node_id is the target, bcast allowed, but not recommended
      dir: 0 (default): backward, 1: forward, 2: bidir
      hop_limit: killed after so many hops

    OSS should be careful, no input checks for now.

    Trace output via diags, for now (this is a debug tool anyway):
        tr 104 [0]
	    trace(104) 18 3 3:
	    trel 104 107
	    trel 3 99
	    trel 2 107

	    18 - backward (this is a msg type)
	    3 hops each way (not always equal)
	    trace element (trel) 104 - node_id, 107 - rssi

	tr 104 1
	    trace(104) 16 3 3:
	    trel 2 108
	    trel 103 97
	    trel 104 108

	tr 104 2
	    trace(104) 14 3 2:
	    trel 2 107
	    trel 3 106
	    trel 104 97
	    trel 3 98

    Ligtly tested under VUEE - be careful.

WO100801A:
  new_il_demo:
  - retry caches resist retries from upstream (better behaviour at least in
		  the in-line topology)
  - closing {local_host, rssi} reported in trace outputs.

WO110213A:
  Added CHRONOS to new_il_demo, see -110213- in 'notes' there. Major update.

WO110423A:
  mm_demo: instrumented for BT (Seatan), see mm.odt
  new_il_demo: preserved a simple BT / UART switch driven by BOARD_WARSAW_BLUE

WO110827A:
  Added kek_ned, see 'notes there. Updated Olsonet's (c) in main.c.

WO111127A:
  Updated 'survey', see survey.odt for functional changes. This, plus restored
  ee_open() and some cosmetics. Also, nov21.xml describes outdoor experiments
  comparing emspcc with Nanotron nodes.

WO111217A:
  Updated mm_demo: mostly format changes for ANDROIDEMO (set in options.sys).
  However, PEG_STR_LEN change from 15 to 33 bloats ram and nvm structs.
  Also, the alarms are used for handshakes with encoded meanings: in VUEE,
  odd nodes respond 'no', even ones 'yes', with auto-generated 'ack-alarms'.
  For demos only, in hybrid scenarios with VUEE and real hardware.

WO120226A:
  Added PROPRIETARY/vsen_demo as a (failed) attempt to unify different
  sensors. Some good was produced, see Pawel's commits. vsen will go to
  NL for lightly defined demos.

  survey: set defaults to 'no all out', mainly for UfO.

  Created PROPRIETARY/inProgress, for stuff with such status - I'm tired
  of maintaining local git branches with half-cooked and demo stuff.
  I put Ariadne, ams_demo and ert there.

  tarp: a plugin signature adjustment.

WO120301A:
  For empty sockets, SHT returns -1 -1 on 10SHT and 0 0 on ARTURO* boards,
  but we don't want to normalize this now (besides, these drivers *should* be
  independent). Changed snippets within piter_plug.tcl and econnect.tcl
  to output -1C and -1% on these boards. Note that a regexp had to be
  adjusted in piter_plug.tcl, to let '-' in -1 values through.
  Pawel should review these patches, trivial as they are.

WO120302A:
  Minute change in mm_demo, to let through to OSS msgs (profi and alrm) even
  if p_inc ('include'preferences) don't match). OSS (presumably, an Android app)
  would rate the incoming info and sort or drop it based on user's preferences.

WO120320B:
  Added Chronos to vsen_demo, updated econnect. vsen.xml says it all - it is
  a tentative setup for demos in NL. 'B' because it is after Pawel's PG120320A.

WO120419A:
  vsen_demo: added WARSAW_SONAR (as simps), updated CHRONOS with the driver
  changes. See vsen_demo/notes tail for a short summary. This version will
  update Raoul's inventory.

WO120512A:
  mm_demo updates for Android most recent works. mm_odt clearly shows the
  original and the two updates. Still, some (relatively old) functionality is
  undocumented, but an up-to-date version should wait for consistent 
  requirements and total rewrite, which are due after 1st demo / user feedback.

  In vsen_demo, options.sys shows (commented out) European settings and moves
  RF to channel 255. 'Ronin buzzer' is added. Chronos def. freq. is changed
  from 30 to 60, other nodes' from 30 to 900. All the changes were used for
  experiments with CMA and dimihished RTLS.

WO120820A:
  - inProgress/trace: Read trace.odt there. Unfinished business: Soon, we'll
    update it after DIVA slides, for DIVA and similar demos. After that, open
    problems, sensor module and OSS refinements are expected.
  - In tarp.c, trace-related castings are fixed.
  - In il_demo, sensor- and board-related symbols are updated. More updates
    and cleanup will come after board_options are streamlined and made
    available for VUEE.
  - In mm_demo, STACK_SIZE is updated 256->512.

WO121020A:
  - PROPRIETARY/tracEd, see tracEd.odt there. Significant update of what 
    used to be inProgress/trace, which is removed. To be continue.
  - Cosmetics in mm_demo:
    - TARP params changed 0xB1 -> 0xA3, for better routing in Paul's exp's.
    - HID / host_id changes to follow PicOS.

WO121103A:
  TracEd: updates after the WiSense presentation & talks with Pawel:
  - Chronos buzzes in UIoff mode
  - highlight colors
  - updated .odt, removed some code comments

WO121209A:
  inProgress/netting: Another praxis meant as blueprint, this time for
  experiments with networking. Disappointments include incombatibility with
  tracEd meant to traliblaze general OSSI structures. So, this part of
  tracEd was futile; perhaps BOSS? As to 'netting', see netting.odt in there.

WO121217A:
  - eco_demo: 
  -- For WARSAW_ILS, first four sensors show int. temp. (-2),
     int. voltage (-1), light (0), movements (1); other boards unchanged.
     My understanding is that OSS scripts running on comip.ca use sensor slots
     0, 1, so for WARSAW_ILS they'll have voltage and light, as needed for
     solar panel experiments.
  -- Power sensor on pegs corrected to -1.
  -- .xml models updated for current sensor indexing.
  -- Adjusted various options* for current VUEE status and comip.ca channel.
     BE CAREFUL to avoid interference with the live run.

 - preserved inProgress/netting in inProgress/alphat, as it was sent to
   Alphatronics. The latest Netting.odt is both in netting and alphat.

 - TESTS/RFTEST updated for current host_id PicOS status.

WO121226A:
 - cosmetic cleanup in tarp.c debug facilities
 - inProgress/netting:
 -- lword ref# everywhere, including trace
 -- ack (2-way route) is optional on odr
 -- optional odr output on transient nodes
 -- WARSAW_BLUE goes via UART 2 (not tested)
 -- updated Netting.odt

WO121228A:
TARP header changed, with hoc, hco :4 and separate weak, prox flags. Lightly
tested, but the changes are rather trivial. The new prox flag is used in
netting, significantly improving ODR with non-zero TARP's slack. Note that
other applications that use proximity messages are unchanged; there, the
similar functionality can be achieved by switching on TARP's fwd flag.

It seems that my abhorrence to bit-fields came from experience with the eCog
compiler... if so, TARP caches should be redesigned as well. However, that
should wait for some form of TARP test bed. Either we'll try something within
SIDE, as we discussed with Pawel, or we'll reheat old tries from TARP's early
days.

WO130224A:
Location-related (partial) works.
Ariadne 
- allow TARP_RTR, even if not immediately needed.
- adapt a flavour of combat10.xml, common for experiments and simulations.
- surloc.tcl - location-related (temporary) script.
Netting 
- If compiled with ODR_FILL_BCAST (by default present in options.sys), at
  'broadcast steps' in ODR nodes fill in their ids. It helps with RSSI
  recording, but also makes the ODR strict when retracting to the source;
  hence under the option.
- 'f' command formats OSS out. If set, the ODR output is suitable for
  SIMPLE experiments, where the server uses the string to set return path.
  Defaults to 0, not written to FIM. It replaces compile-time
  ODR_MHOP_SERV_EXPER, which is eliminated.
- options.sys cleaned up a bit.
- Added exp subdir, location-related, see Expernetting.odt there.
- rssi.tcl and loca.tcl - location-related (temporary) scripts.

WO130312A:
Still unfinished location-related works. I'd like to commit the status quo
before switching to the new CC1100 driver:

- in inProgress/netting:
-- loca.tcl produce 4 files: db and queries with rssi forward anc backward.
-- 2loca.tcl: an attempt to process files generatedfrom surveys (tags) and
   "proxy auto-profiling". The former is a 1-hop bcast ODR, the latter either
   2-hop bcast on bcast or several anchored bcasts. 8 files are produced.
-- combReal.xml - mirror/model of what hangs at the HQ.
-- combReal directory contains data gathered from the HQ setup, with
   several 1-hop and 2-hop surveys. Note that this is NOT the data we want to
   produce in true surveys; old driver was used, only 2 tag points.

- in LOCATION (and ./TEST):
-- locdbase.c and query.c got the infamous #define _GNU_SOURCE.
-- in params.xml, I added <slr> transforms that "work" for vuee and real
   setup at the HQ. (They'recommented out.)

WO130327A:
Location-related updates, in netting and (minimal) in LOCATION/TEST.
ExperiNetting.odt is a must if you want to continue on this thread. Changes:
- combReal directory with combReal13* is zipped in combReal1303.zip. In the
  results, the 150 node is corrected (I cheated, collecting data from 150's
  location from the 77 node).
- exp dir is cleaned and ready for experimenting descibed in experiNetting.
- 2loca.tcl and verloca.tcl create and verify location-related data
- combReal.xml uses combReal_ch.xml (instead of channel.xml)
- _coord lists coordiantes for combReal stuff
- oo_samples.txt contains samples generated from real runs. It is here for
  the convenience of running VUEE without the data re-generation.

- In LOCATION/TEST: query.c modified to provide querying id,
	params.xml contains a few <slr> (this mess is temporary here, as it
	should be by praxis / model)

WO130415A:
In netting, updated _coord, combReal.xml, added hq.gif for the engine and model.
In LOCATION/TEST, updated params.xml with exp. SLR translation.
In phys_cc1100.c, replaced overflowing RADIO_DEFAULT_BITRATE with
  RADIO_BITRATE_INDEX for startup reporting.

WO130503A:
Updates to netting: scripts, the model for Combat's HQ. Also, WIFI added for
combined or independent location tracking.

Unzip exp2013_05_03.zip and read notes there.

WO130616A:
Removed inProgress/alphat. AFAIK, it was an early version of netting and latest
updates for AT were produced from the up-to-date netting.

inProgress/alfMay2013 is a new clone of vsen_demo with updates we did and left at AT while in Lokeren. See notes there.

 Netting:
- nett20130604.zip is a compressed dir with images left at AT.
- options.sysupdated forEurope and dbg_? cleanup;
- exp_rtt.zip contains RTT experiments (see rtt_notes.txt there).
- hq_rtt.xml: name says it;
- lin250, mod_lin250, patt_line.xml - for long chains;
- sq16, mod_sq16, patt_sq.xml - 250 nodes in 16 rows;
- longs.zip - experiments with long hop chains;

 TARP:
hoc, hco changed from :4 to :7, header rearranged

Scripts/mksvm: exec sh picospath (I hope it is generally OK)

WO130627A:
Mainly netting experiments with location, see notes in exp2013_06_27.zip.

2loca.tcl: added WIFIDAT(ignore) to ignore WIFI altogether.

verloca.tcl: as in 2loca, we derive location coords for node ids > 10000 (coords for experiments with android tablets).

In tarp.h: DEFAULT_RSSI_THOLD changed from 80 to 100 (important for mhopping)

WO130823A:
MatchMaker
- LEGACY/mm_demo preserved in legacy_mm_demo.zip, just in case;
- PROPRIETARY/SEAWOLF/mm contains a "modern" version with (intended) EXACTLY
  the same functionlity (as the legacy version).
- SEAWOLF/BOOTH will keep the 'booth' attempt(s) at shows for incomplete
  Seawolf / PINDA stuff.

Minor update (implicit int to explicit byte) update in phys_cc1100.c.

inProgress/spot is intended to be a derivative from alfMay2013 for AT.
I'd like to preserve quite significant code changes (see 'notes' there),
in case the works resume.

WO130912A:
BOOTH/show is ready for HW / Android plays. Expected minor incompabilities.
Documentation missing, coming soon. alltogether, this is a messy entanglement
of PINDA-centric functionality, Seawolf and hardcoded vsen. Oh, and CHRONOS.
After the September's show, we hope to writedown reqs for the next one and
better BOOTH in unison with Android, PINDA and WEB server.

tarp.h had unreasonable 125 as tarp_maxHops; back to 10. ddCacheSize 10->20
(I thought fast hosts in BOOTH/show overwhelmed this cache, but there is more
 to it... Both sizes are arbitrary, perhaps we should make them part of
 application-specific data in options.sys?)

WO130913A:
 BOOTH/show changes continue undocumented:
 - shuffling ttags (I think the algorithm is cute, naturally extendable to 
 	k-permutations, likely known in advanced kindergarden nowadays).
 - changed leds RGB -> BGR - all the boards I have are consistently messed up.
 - gave sensors a second to measure things at startup.
 - fixed options for 'default' BT modules' configs... let's not go there.
 - updated wm_demo.xml - no way people would find tags in disjoint areas.
 - images.zip contains images handcrafted for the coming week of demos and
   testing. They WILL be removed.

WO130917A:
 BOOTH/show continues:
 - booth.doc attempts at the mess' description. Now it may be somewhat useful.
 - In SLEEP, local_host is displayed in high row.
 - Made SEN thresholds configurable via UART, saved in FIM - the i/f is real
   bad, be careful and use when needed for calibration (we need it for RH);
 - Added to SEN simple diags (on / off via UART) to trace outgoing alarms;
   may be useful, too.
 - Hunt strings (TH) are the same to PINDA nad up to the Android phone.
 - Corrected a glitch is SUI (pp, pi, pe handling)
 - Corrected a few profiles in wm_demo.xml.
 - Regenerated images.

WO130919A:
 BOOTH/show continues:
 - SEN: added CHRONOS with mobility alarms (SEN looks funny with 10SHT, SZAMBO
   and with radically different CHRONOS... but it works and there is something
   about it: modularity on #ifdefs (or .cc #includes) with a common
   root and libs?)
 - cosmetics on LCD: FINI -> END (I admit, segmented FINI looked bad)
 - booth.doc updated with mobility alarms. images.zip regenerated.

WO131031A:

 BOOTH/show v0.2 update:
 - var pinda_id (K command)
 - var beacon freqs for profi, alrm msg (F command)
 - ossi throttling (O command)
 - oss out on tag insert failures (a LOT of output if oss_out is 2 (default)
 - xmls for large models (100pattern, add100, demo100, demo100_n, neutrino,
   wm_demo_n)
 - minor internal cosmetics:
   - rearranged app_flags
   - trueconst are back
   - const char * for literals (to supress warnings

 - Still missing or outstanding:
   - documentation, any kind;
   - good tests, also over BT;
   - neutrinos take more CPU & RAM, but are stable 
   - with RF, we run out of nodes' memory (see demo100 vs demo100_n), likely
     because of LBT it starts complainig after 400-450s
   - With my laptop, I lost eeprom / restart updates, but I don't want
     to restore them before we know what we need with the server. E.g., we'll
     likely to go off on lost connections, so perhaps the server should keep
     the context and load it via commands at node's (re)start... (?) If we
     have dongles to keep context over power cycles and don't store history
     or neighbourhood data, we should scrap eeprom and go for FIM.

WO131102A:
 BOOTH/show v0.2 update:
 - some documentation (../media/booth.doc); however crappy it is, we need
   a sync point.
 - cosmetics for virt flag, as in the doc.

WO131103A:
 Minor BOOTH/show v0.2 update:
 - oss_out default changed to 1. For small models it doesn't matter, for large
   ones it can be easily changed by O2 command if massive NEW flow is needed.
 - local tag list now forces out virtual dongles if a real one is to be added.
   OSS will see output like for gone tags, with 'forcedOut' instead of 'gone'.

WO131111A:
 eco_demo touched to accommodate BVSHIFT testing:
  If BVSHIFT_TH in options_tag.sys is nonzero, it serves as the threshold
  below which the node switches to battery booster (pin_write (9, 0)). This is
  done once only. The sensors read int. temp & int. voltage as usual, then
  #3 is 0 - no booster, 1 - booster, and #4 shows uptime in minutes of the
  switch event (just at the switch). Note that this applies to ANY board
  type.
  To experimanters: rx_span = 1 is merciless on battery, i.e. best for this
  exercise. Also, I did NOT touch RF freq and threshold is 0. Change those
  as needed.
  Tested with VUEE only (large_eco). We'd have to clean the models, as only
  this one will work with nonzero BVSHIFT (the models should be tied to
  board types, as sensors are far from uniform). In any case, on large_eco
  moving voltage below threshold clears pin #9.

WO140223A:
 Synchronizing work in progress:

 - Rewritten and vuee-tested SPOT. The 'original' in old_spot.zip, including
   'notes' on its history. The current version is meant as a refreshed attempt
   at modularization. Misssing, in this order: add AP* nodes with bin i/f,
   documentation, more 'modular reshuffling'.

 - Netting: combLoca reconciles (I hope) last year's survey with VUEE. Survey
   was performed with a slightly skewed backdrop. Since the co-ordinates were
   tapped-in on this backdrop, a few nodes had to be moved. They're marked
   green in combLoca.xml. combLocaOrig.xml keeps the data from the survey's
   time. When we return to our location works, we'll decide how reliable this
   data is and if we can avoid another survey.

 - add100_1.xml, eve_1.xml for server-based Semantic Hub.

 - deleted 'sandbox' from alfMay3013 - this 'inProgress' praxis may still have
   some value...

 - removed dbg lines from options.sys.

